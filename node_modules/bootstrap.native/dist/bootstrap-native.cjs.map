{"version":3,"file":"bootstrap-native.cjs","sources":["../node_modules/.pnpm/@thednp+shorty@2.0.0/node_modules/@thednp/shorty/dist/shorty.mjs","../node_modules/.pnpm/@thednp+event-listener@2.0.4/node_modules/@thednp/event-listener/dist/event-listener.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["const pe = \"aria-checked\", me = \"aria-description\", fe = \"aria-describedby\", ge = \"aria-expanded\", ve = \"aria-haspopup\", Ee = \"aria-hidden\", be = \"aria-label\", he = \"aria-labelledby\", ye = \"aria-modal\", we = \"aria-pressed\", Ae = \"aria-selected\", Se = \"aria-valuemin\", Ne = \"aria-valuemax\", ke = \"aria-valuenow\", Me = \"aria-valuetext\", q = \"abort\", G = \"beforeunload\", J = \"blur\", K = \"change\", X = \"contextmenu\", P = \"DOMContentLoaded\", Y = \"DOMMouseScroll\", Z = \"error\", $ = \"focus\", _ = \"focusin\", tt = \"focusout\", et = \"gesturechange\", nt = \"gestureend\", ot = \"gesturestart\", st = \"keydown\", ct = \"keypress\", rt = \"keyup\", at = \"load\", it = \"click\", ut = \"dblclick\", lt = \"mousedown\", dt = \"mouseup\", pt = \"hover\", mt = \"mouseenter\", ft = \"mouseleave\", gt = \"mousein\", vt = \"mouseout\", Et = \"mouseover\", bt = \"mousemove\", ht = \"mousewheel\", yt = \"move\", wt = \"orientationchange\", At = \"pointercancel\", St = \"pointerdown\", Nt = \"pointerleave\", kt = \"pointermove\", Mt = \"pointerup\", Tt = \"readystatechange\", Dt = \"reset\", Ct = \"resize\", Ot = \"select\", Lt = \"selectend\", It = \"selectstart\", zt = \"scroll\", xt = \"submit\", Vt = \"touchstart\", Bt = \"touchmove\", Ht = \"touchcancel\", Pt = \"touchend\", Ft = \"unload\", Te = {\n  DOMContentLoaded: P,\n  DOMMouseScroll: Y,\n  abort: q,\n  beforeunload: G,\n  blur: J,\n  change: K,\n  click: it,\n  contextmenu: X,\n  dblclick: ut,\n  error: Z,\n  focus: $,\n  focusin: _,\n  focusout: tt,\n  gesturechange: et,\n  gestureend: nt,\n  gesturestart: ot,\n  hover: pt,\n  keydown: st,\n  keypress: ct,\n  keyup: rt,\n  load: at,\n  mousedown: lt,\n  mousemove: bt,\n  mousein: gt,\n  mouseout: vt,\n  mouseenter: mt,\n  mouseleave: ft,\n  mouseover: Et,\n  mouseup: dt,\n  mousewheel: ht,\n  move: yt,\n  orientationchange: wt,\n  pointercancel: At,\n  pointerdown: St,\n  pointerleave: Nt,\n  pointermove: kt,\n  pointerup: Mt,\n  readystatechange: Tt,\n  reset: Dt,\n  resize: Ct,\n  scroll: zt,\n  select: Ot,\n  selectend: Lt,\n  selectstart: It,\n  submit: xt,\n  touchcancel: Ht,\n  touchend: Pt,\n  touchmove: Bt,\n  touchstart: Vt,\n  unload: Ft\n}, De = \"drag\", Ce = \"dragstart\", Oe = \"dragenter\", Le = \"dragleave\", Ie = \"dragover\", ze = \"dragend\", xe = \"loadstart\", Ve = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Be = { down: \"mousedown\", up: \"mouseup\" }, He = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : (\n  /* istanbul ignore next */\n  [\"mouseover\", \"mouseout\"]\n), Pe = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, Fe = { in: \"focusin\", out: \"focusout\" }, Ue = {\n  Backspace: \"Backspace\",\n  //  8\n  Tab: \"Tab\",\n  //  9\n  Enter: \"Enter\",\n  // 13\n  Shift: \"Shift\",\n  // 16\n  Control: \"Control\",\n  // 17\n  Alt: \"Alt\",\n  // 18\n  Pause: \"Pause\",\n  // 19\n  CapsLock: \"CapsLock\",\n  // 20\n  Escape: \"Escape\",\n  // 27\n  Scape: \"Space\",\n  // 32\n  ArrowLeft: \"ArrowLeft\",\n  // 37\n  ArrowUp: \"ArrowUp\",\n  // 38\n  ArrowRight: \"ArrowRight\",\n  // 39\n  ArrowDown: \"ArrowDown\",\n  // 40\n  Insert: \"Insert\",\n  // 45\n  Delete: \"Delete\",\n  // 46\n  Meta: \"Meta\",\n  // 91 windows key\n  ContextMenu: \"ContextMenu\",\n  // 93\n  ScrollLock: \"ScrollLock\"\n  // 145\n}, We = \"Alt\", Re = \"ArrowDown\", Qe = \"ArrowUp\", je = \"ArrowLeft\", qe = \"ArrowRight\", Ge = \"Backspace\", Je = \"CapsLock\", Ke = \"Control\", Xe = \"Delete\", Ye = \"Enter\", Ze = \"NumpadEnter\", $e = \"Escape\", _e = \"Insert\", tn = \"Meta\", en = \"Pause\", nn = \"ScrollLock\", on = \"Shift\", sn = \"Space\", cn = \"Tab\", Ut = \"animationDuration\", Wt = \"animationDelay\", F = \"animationName\", D = \"animationend\", Rt = \"transitionDuration\", Qt = \"transitionDelay\", C = \"transitionend\", U = \"transitionProperty\", rn = \"addEventListener\", an = \"removeEventListener\", un = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, ln = \"offsetHeight\", dn = \"offsetWidth\", pn = \"scrollHeight\", mn = \"scrollWidth\", fn = \"tabindex\", jt = navigator.userAgentData, A = jt, { userAgent: qt } = navigator, S = qt, z = /iPhone|iPad|iPod|Android/i;\nlet O = !1;\nA ? O = A.brands.some((t) => z.test(t.brand)) : O = z.test(S);\nconst gn = O, x = /(iPhone|iPod|iPad)/, vn = A ? A.brands.some((t) => x.test(t.brand)) : (\n  /* istanbul ignore next */\n  x.test(S)\n), En = S ? S.includes(\"Firefox\") : (\n  /* istanbul ignore next */\n  !1\n), { head: N } = document, bn = [\"webkitPerspective\", \"perspective\"].some((t) => t in N.style), Gt = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(e, n, s);\n}, Jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(e, n, s);\n}, Kt = (t, e, n, o) => {\n  const s = (r) => {\n    (r.target === t || r.currentTarget === t) && (n.apply(t, [r]), Jt(t, e, s, o));\n  };\n  Gt(t, e, s, o);\n}, Xt = () => {\n}, hn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    Kt(document, P, Xt, e);\n  } catch {\n  }\n  return t;\n})(), yn = [\"webkitTransform\", \"transform\"].some((t) => t in N.style), wn = \"ontouchstart\" in window || /* istanbul ignore next */\n\"msMaxTouchPoints\" in navigator, An = [\"webkitAnimation\", \"animation\"].some((t) => t in N.style), Sn = [\"webkitTransition\", \"transition\"].some((t) => t in N.style), Yt = (t, e) => t.getAttribute(e), Nn = (t, e, n) => e.getAttributeNS(t, n), kn = (t, e) => t.hasAttribute(e), Mn = (t, e, n) => e.hasAttributeNS(t, n), Tn = (t, e, n) => t.setAttribute(e, n), Dn = (t, e, n, o) => e.setAttributeNS(t, n, o), Cn = (t, e) => t.removeAttribute(e), On = (t, e, n) => e.removeAttributeNS(t, n), Ln = (t, ...e) => {\n  t.classList.add(...e);\n}, In = (t, ...e) => {\n  t.classList.remove(...e);\n}, zn = (t, e) => t.classList.contains(e), { body: xn } = document, { documentElement: Vn } = document, Bn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, i = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((e) => t.nodeType === e) || !1, u = (t) => i(t) && t.nodeType === 1 || !1, E = /* @__PURE__ */ new Map(), L = {\n  data: E,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (t, e, n) => {\n    if (!u(t))\n      return;\n    E.has(e) || E.set(e, /* @__PURE__ */ new Map()), E.get(e).set(t, n);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (t) => E.get(t) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (t, e) => {\n    if (!u(t) || !e)\n      return null;\n    const n = L.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (t, e) => {\n    const n = L.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && E.delete(e));\n  }\n}, Hn = (t, e) => L.get(t, e), k = (t) => typeof t == \"string\" || !1, W = (t) => v(t) && t.constructor.name === \"Window\" || !1, R = (t) => i(t) && t.nodeType === 9 || !1, d = (t) => W(t) ? t.document : R(t) ? t : i(t) ? t.ownerDocument : window.document, M = (t, ...e) => Object.assign(t, ...e), Zt = (t) => {\n  if (!t)\n    return;\n  if (k(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = Zt(e);\n  if (!n)\n    return;\n  const o = { ...t };\n  return delete o.tagName, M(n, o);\n}, $t = (t, e) => {\n  if (!t || !e)\n    return;\n  if (k(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = $t(t, n);\n  if (!o)\n    return;\n  const s = { ...e };\n  return delete s.tagName, M(o, s);\n}, Q = (t, e) => t.dispatchEvent(e), Pn = (t, e, n) => n.indexOf(t) === e, g = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, _t = (t) => {\n  const e = g(t, F), n = g(t, Wt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, te = (t) => {\n  const e = g(t, F), n = g(t, Ut), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Fn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = te(t), r = _t(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(D, a), n = 1);\n    };\n    t.addEventListener(D, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, ee = (t) => {\n  const e = g(t, U), n = g(t, Qt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, ne = (t) => {\n  const e = g(t, U), n = g(t, Rt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Un = (t, e) => {\n  let n = 0;\n  const o = new Event(C), s = ne(t), r = ee(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(C, a), n = 1);\n    };\n    t.addEventListener(C, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, Wn = (t) => Float32Array.from(Array.from(t)), Rn = (t) => Float64Array.from(Array.from(t)), Qn = (t, e) => t.focus(e), V = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, w = (t) => Object.entries(t), oe = (t) => t.toLowerCase(), jn = (t, e, n, o) => {\n  const s = { ...n }, r = { ...t.dataset }, a = { ...e }, l = {}, p = \"title\";\n  return w(r).forEach(([c, m]) => {\n    const y = o && typeof c == \"string\" && c.includes(o) ? c.replace(o, \"\").replace(/[A-Z]/g, (j) => oe(j)) : c;\n    l[y] = V(m);\n  }), w(s).forEach(([c, m]) => {\n    s[c] = V(m);\n  }), w(e).forEach(([c, m]) => {\n    c in s ? a[c] = s[c] : c in l ? a[c] = l[c] : a[c] = c === p ? Yt(t, p) : m;\n  }), a;\n}, qn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Gn = (t) => Object.keys(t), Jn = (t) => Object.values(t), Kn = (t) => Object.fromEntries(t), Xn = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return v(e) && M(n, e), n;\n}, Yn = { passive: !0 }, Zn = (t) => t.offsetHeight, $n = (t, e) => {\n  w(e).forEach(([n, o]) => {\n    if (o && k(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, M(t.style, s);\n    }\n  });\n}, I = (t) => v(t) && t.constructor.name === \"Map\" || !1, se = (t) => typeof t == \"number\" || !1, f = /* @__PURE__ */ new Map(), _n = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (t, e, n, o) => {\n    u(t) && (o && o.length ? (f.has(t) || f.set(t, /* @__PURE__ */ new Map()), f.get(t).set(o, setTimeout(e, n))) : f.set(t, setTimeout(e, n)));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (t, e) => {\n    if (!u(t))\n      return null;\n    const n = f.get(t);\n    return e && n && I(n) ? n.get(e) || /* istanbul ignore next */\n    null : se(n) ? n : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (t, e) => {\n    if (!u(t))\n      return;\n    const n = f.get(t);\n    e && e.length && I(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && f.delete(t)) : (clearTimeout(n), f.delete(t));\n  }\n}, to = (t) => t.toUpperCase(), h = (t, e) => {\n  const { width: n, height: o, top: s, right: r, bottom: a, left: l } = t.getBoundingClientRect();\n  let p = 1, c = 1;\n  if (e && u(t)) {\n    const { offsetWidth: m, offsetHeight: y } = t;\n    p = m > 0 ? Math.round(n) / m : (\n      /* istanbul ignore next */\n      1\n    ), c = y > 0 ? Math.round(o) / y : (\n      /* istanbul ignore next */\n      1\n    );\n  }\n  return {\n    width: n / p,\n    height: o / c,\n    top: s / c,\n    right: r / p,\n    bottom: a / c,\n    left: l / p,\n    x: l / p,\n    y: s / c\n  };\n}, eo = (t) => d(t).body, T = (t) => d(t).documentElement, no = (t) => d(t).head, oo = (t) => {\n  const e = W(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, ce = (t) => i(t) && t.constructor.name === \"ShadowRoot\" || !1, so = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || // step into the shadow DOM of the parent of a slotted node\ni(t) && t.parentNode || // DOM Element detected\nce(t) && t.host || // ShadowRoot detected\nT(t), re = (t) => {\n  if (!u(t))\n    return !1;\n  const { width: e, height: n } = h(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, co = (t, e, n) => {\n  const o = u(e), s = h(t, o && re(e)), r = { x: 0, y: 0 };\n  if (o) {\n    const a = h(e, !0);\n    r.x = a.x + e.clientLeft, r.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - r.x,\n    y: s.top + n.y - r.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet B = 0, H = 0;\nconst b = /* @__PURE__ */ new Map(), ae = (t, e) => {\n  let n = e ? B : H;\n  if (e) {\n    const o = ae(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), I(s) && !s.has(e) ? (s.set(e, n), B += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), H += 1);\n  }\n  return n;\n}, ro = (t) => {\n  var e;\n  return t ? R(t) ? t.defaultView : i(t) ? (e = t == null ? void 0 : t.ownerDocument) == null ? void 0 : e.defaultView : t : window;\n}, ie = (t) => Array.isArray(t) || !1, ao = (t) => i(t) && t.nodeName === \"CANVAS\" || !1, ue = (t) => u(t) && !!t.shadowRoot || !1, io = (t) => i(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, uo = (t) => {\n  if (!i(t))\n    return !1;\n  const { top: e, bottom: n } = h(t), { clientHeight: o } = T(t);\n  return e <= o && n >= 0;\n}, lo = (t) => {\n  if (!i(t))\n    return !1;\n  const { clientWidth: e, clientHeight: n } = T(t), { top: o, left: s, bottom: r, right: a } = h(t, !0);\n  return o >= 0 && s >= 0 && r <= n && a <= e;\n}, po = (t) => ie(t) && t.every(u) || !1, mo = (t) => typeof t == \"function\" || !1, fo = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, go = (t) => u(t) && t.tagName === \"IMG\" || !1, vo = (t) => {\n  if (!k(t))\n    return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, Eo = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, bo = (t) => i(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((e) => t.constructor.name.includes(e)) || !1, ho = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, yo = (t) => T(t).dir === \"rtl\", wo = (t) => i(t) && t.constructor.name.includes(\"SVG\") || !1, Ao = (t) => i(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, le = (t, e) => t ? t.closest(e) || // break out of `ShadowRoot`\nle(t.getRootNode().host, e) : null, So = (t, e) => u(t) ? t : (i(e) ? e : d()).querySelector(t), de = (t, e) => (i(e) ? e : d()).getElementsByTagName(t), No = (t) => [...de(\"*\", t)].filter(ue), ko = (t, e) => d(e).getElementById(t) || null, Mo = (t, e) => (i(e) ? e : d()).querySelectorAll(t), To = (t, e) => (e && i(e) ? e : d()).getElementsByClassName(\n  t\n), Do = (t, e) => t.matches(e), Co = \"2.0.0\";\nexport {\n  Bn as ArrayFrom,\n  P as DOMContentLoadedEvent,\n  Y as DOMMouseScrollEvent,\n  L as Data,\n  Wn as Float32ArrayFrom,\n  Rn as Float64ArrayFrom,\n  M as ObjectAssign,\n  w as ObjectEntries,\n  Kn as ObjectFromEntries,\n  qn as ObjectHasOwn,\n  Gn as ObjectKeys,\n  Jn as ObjectValues,\n  _n as Timer,\n  q as abortEvent,\n  Ln as addClass,\n  rn as addEventListener,\n  Wt as animationDelay,\n  Ut as animationDuration,\n  D as animationEndEvent,\n  F as animationName,\n  pe as ariaChecked,\n  fe as ariaDescribedBy,\n  me as ariaDescription,\n  ge as ariaExpanded,\n  ve as ariaHasPopup,\n  Ee as ariaHidden,\n  be as ariaLabel,\n  he as ariaLabelledBy,\n  ye as ariaModal,\n  we as ariaPressed,\n  Ae as ariaSelected,\n  Ne as ariaValueMax,\n  Se as ariaValueMin,\n  ke as ariaValueNow,\n  Me as ariaValueText,\n  G as beforeunloadEvent,\n  un as bezierEasings,\n  J as blurEvent,\n  K as changeEvent,\n  le as closest,\n  X as contextmenuEvent,\n  Xn as createCustomEvent,\n  Zt as createElement,\n  $t as createElementNS,\n  Q as dispatchEvent,\n  Pn as distinct,\n  xn as documentBody,\n  Vn as documentElement,\n  N as documentHead,\n  De as dragEvent,\n  ze as dragendEvent,\n  Oe as dragenterEvent,\n  Le as dragleaveEvent,\n  Ie as dragoverEvent,\n  Ce as dragstartEvent,\n  Fn as emulateAnimationEnd,\n  Un as emulateTransitionEnd,\n  Z as errorEvent,\n  Qn as focus,\n  $ as focusEvent,\n  Fe as focusEvents,\n  _ as focusinEvent,\n  tt as focusoutEvent,\n  et as gesturechangeEvent,\n  nt as gestureendEvent,\n  ot as gesturestartEvent,\n  Yt as getAttribute,\n  Nn as getAttributeNS,\n  h as getBoundingClientRect,\n  No as getCustomElements,\n  d as getDocument,\n  eo as getDocumentBody,\n  T as getDocumentElement,\n  no as getDocumentHead,\n  _t as getElementAnimationDelay,\n  te as getElementAnimationDuration,\n  ko as getElementById,\n  g as getElementStyle,\n  ee as getElementTransitionDelay,\n  ne as getElementTransitionDuration,\n  To as getElementsByClassName,\n  de as getElementsByTagName,\n  Hn as getInstance,\n  oo as getNodeScroll,\n  so as getParentNode,\n  co as getRectRelativeToOffsetParent,\n  ae as getUID,\n  ro as getWindow,\n  kn as hasAttribute,\n  Mn as hasAttributeNS,\n  zn as hasClass,\n  vn as isApple,\n  ie as isArray,\n  ao as isCanvas,\n  ue as isCustomElement,\n  R as isDocument,\n  io as isElement,\n  uo as isElementInScrollRange,\n  lo as isElementInViewport,\n  po as isElementsArray,\n  En as isFirefox,\n  mo as isFunction,\n  fo as isHTMLCollection,\n  u as isHTMLElement,\n  go as isHTMLImageElement,\n  vo as isJSON,\n  I as isMap,\n  bo as isMedia,\n  gn as isMobile,\n  i as isNode,\n  ho as isNodeList,\n  se as isNumber,\n  v as isObject,\n  yo as isRTL,\n  wo as isSVGElement,\n  re as isScaledElement,\n  ce as isShadowRoot,\n  k as isString,\n  Ao as isTableElement,\n  Eo as isWeakMap,\n  W as isWindow,\n  We as keyAlt,\n  Re as keyArrowDown,\n  je as keyArrowLeft,\n  qe as keyArrowRight,\n  Qe as keyArrowUp,\n  Ge as keyBackspace,\n  Je as keyCapsLock,\n  Ke as keyControl,\n  Xe as keyDelete,\n  Ye as keyEnter,\n  $e as keyEscape,\n  _e as keyInsert,\n  tn as keyMeta,\n  Ze as keyNumpadEnter,\n  en as keyPause,\n  nn as keyScrollLock,\n  on as keyShift,\n  sn as keySpace,\n  cn as keyTab,\n  Ue as keyboardEventKeys,\n  st as keydownEvent,\n  ct as keypressEvent,\n  rt as keyupEvent,\n  at as loadEvent,\n  xe as loadstartEvent,\n  Do as matches,\n  Be as mouseClickEvents,\n  He as mouseHoverEvents,\n  Ve as mouseSwipeEvents,\n  it as mouseclickEvent,\n  ut as mousedblclickEvent,\n  lt as mousedownEvent,\n  mt as mouseenterEvent,\n  pt as mousehoverEvent,\n  gt as mouseinEvent,\n  ft as mouseleaveEvent,\n  bt as mousemoveEvent,\n  vt as mouseoutEvent,\n  Et as mouseoverEvent,\n  dt as mouseupEvent,\n  ht as mousewheelEvent,\n  yt as moveEvent,\n  Te as nativeEvents,\n  Xt as noop,\n  jn as normalizeOptions,\n  V as normalizeValue,\n  Jt as off,\n  ln as offsetHeight,\n  dn as offsetWidth,\n  Gt as on,\n  Kt as one,\n  wt as orientationchangeEvent,\n  Yn as passiveHandler,\n  At as pointercancelEvent,\n  St as pointerdownEvent,\n  Nt as pointerleaveEvent,\n  kt as pointermoveEvent,\n  Mt as pointerupEvent,\n  So as querySelector,\n  Mo as querySelectorAll,\n  Tt as readystatechangeEvent,\n  Zn as reflow,\n  Cn as removeAttribute,\n  On as removeAttributeNS,\n  In as removeClass,\n  an as removeEventListener,\n  Dt as resetEvent,\n  Ct as resizeEvent,\n  zt as scrollEvent,\n  pn as scrollHeight,\n  mn as scrollWidth,\n  Ot as selectEvent,\n  Lt as selectendEvent,\n  It as selectstartEvent,\n  Tn as setAttribute,\n  Dn as setAttributeNS,\n  $n as setElementStyle,\n  xt as submitEvent,\n  bn as support3DTransform,\n  An as supportAnimation,\n  hn as supportPassive,\n  wn as supportTouch,\n  yn as supportTransform,\n  Sn as supportTransition,\n  fn as tabindex,\n  oe as toLowerCase,\n  to as toUpperCase,\n  Pe as touchEvents,\n  Ht as touchcancelEvent,\n  Pt as touchendEvent,\n  Bt as touchmoveEvent,\n  Vt as touchstartEvent,\n  Qt as transitionDelay,\n  Rt as transitionDuration,\n  C as transitionEndEvent,\n  U as transitionProperty,\n  Ft as unloadEvent,\n  S as userAgent,\n  A as userAgentData,\n  Co as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","const e = {}, f = (t) => {\n  const { type: c, currentTarget: i } = t;\n  [...e[c]].forEach(([n, s]) => {\n    i === n && [...s].forEach(([o, a]) => {\n      o.apply(n, [t]), typeof a == \"object\" && a.once && r(n, c, o, a);\n    });\n  });\n}, E = (t, c, i, n) => {\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const s = e[c];\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(t), { size: a } = o;\n  o.set(i, n), a || t.addEventListener(c, f, n);\n}, r = (t, c, i, n) => {\n  const s = e[c], o = s && s.get(t), a = o && o.get(i), d = a !== void 0 ? a : n;\n  o && o.has(i) && o.delete(i), s && (!o || !o.size) && s.delete(t), (!s || !s.size) && delete e[c], (!o || !o.size) && t.removeEventListener(\n    c,\n    f,\n    d\n  );\n}, g = E, M = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  r as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: HTMLElement;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    /* istanbul ignore else */\n    if (prevInstance) {\n      // remove previously attached event listeners\n      // to avoid memory leaks\n      prevInstance._toggleEventListeners();\n    }\n\n    this.element = element;\n    this.options =\n      this.defaults && ObjectKeys(this.defaults).length\n        ? normalizeOptions(element, this.defaults, config || {}, 'bs')\n        : {};\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /** just to have something to extend from */\n  _toggleEventListeners = () => {\n    // do something to please linters\n  };\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove<typeof this>(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (self: Alert) => {\n  const { element } = self;\n  dispatchEvent(element, closedAlertEvent);\n\n  self._toggleEventListeners();\n  self.dispose();\n  element.remove();\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n\n      if (!closeAlertEvent.defaultPrevented) {\n        removeClass(element, showClass);\n\n        if (hasClass(element, fadeClass)) {\n          emulateTransitionEnd(element, () => alertTransitionEnd(this));\n        } else alertTransitionEnd(this);\n      }\n    }\n  };\n  /**\n   * Toggle on / off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { dismiss, close } = this;\n    /* istanbul ignore else */\n    if (dismiss) action(dismiss, mouseclickEvent, close);\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n  getAttribute,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, 'disabled') && !getAttribute(element, 'disabled')) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  // BUTTON PRIVATE METHOD\n  // =====================\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, this.toggle);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  touchstartEvent,\n  dragstartEvent,\n  addClass,\n  hasClass,\n  removeClass,\n  matches,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  /* istanbul ignore else */\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (self.cycle && !getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const newIndex = +(getAttribute(this, dataBsSlideTo) || /* istanbul ignore next */ 0);\n\n    if (\n      this &&\n      !hasClass(this, activeClass) && // event target is not active\n      !Number.isNaN(newIndex)\n    ) {\n      // AND has the specific attribute\n      self.to(newIndex); // do the slide\n    }\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const orientation = getAttribute(this, dataBsSlide);\n\n    /* istanbul ignore else */\n    if (orientation === 'next') {\n      self.next();\n    } else if (orientation === 'prev') {\n      self.prev();\n    }\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (self && !self.isAnimating && !/textarea|input/i.test(target.nodeName)) {\n    const RTL = isRTL(element);\n    const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n    const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n    /* istanbul ignore else */\n    if (code === arrowKeyPrev) self.prev();\n    else if (code === arrowKeyNext) self.next();\n  }\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  /* istanbul ignore next */\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) || !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (self && !self.isAnimating && !self.isTouch) {\n    // filter pointer event on controls & indicators\n    const { controls, indicators } = self;\n    if (![...controls, ...indicators].every(el => el === target || el.contains(target as Node))) {\n      startX = e.pageX;\n\n      /* istanbul ignore else */\n      if (this.contains(target as Node)) {\n        self.isTouch = true;\n        toggleCarouselTouchHandlers(self, true);\n      }\n    }\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore else */\n  if (self) {\n    const { element, index } = self;\n    const RTL = isRTL(element);\n    endX = e.pageX;\n\n    self.isTouch = false;\n    toggleCarouselTouchHandlers(self);\n\n    if (\n      !doc.getSelection()?.toString().length &&\n      element.contains(target as HTMLElement) &&\n      Math.abs(startX - endX) > 120\n    ) {\n      // determine next index to slide to\n      /* istanbul ignore else */\n      if (currentX < startX) {\n        self.to(index + (RTL ? -1 : 1));\n      } else if (currentX > startX) {\n        self.to(index + (RTL ? 1 : -1));\n      }\n    }\n\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n  }\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler, passiveHandler);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length >= 2) {\n      const activeIndex = getActiveIndex(this);\n      // recover item from disposed instance\n      const transitionItem = [...slides].find(s => matches(s, `.${carouselItem}-next,.${carouselItem}-next`));\n      this.index = activeIndex;\n\n      // external controls must be within same document context\n      const doc = getDocument(element);\n\n      this.controls = [\n        ...querySelectorAll(`[${dataBsSlide}]`, element),\n        ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n      // a LIVE collection is prefferable\n      this.indicators = [\n        ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n        ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      // set JavaScript and DATA API options\n      const { options } = this;\n\n      // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n      this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n      // set first slide active if none\n      /* istanbul ignore next - impossible to test with cypress */\n      if (transitionItem) {\n        this.index = [...slides].indexOf(transitionItem);\n      } else if (activeIndex < 0) {\n        this.index = 0;\n        addClass(slides[0], activeClass);\n        if (this.indicators.length) activateCarouselIndicator(this, 0);\n      }\n\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n      // attach event handlers\n      this._toggleEventListeners(true);\n\n      // start to cycle if interval is set\n      if (options.interval) this.cycle();\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (!this.isAnimating && activeItem !== next && !Timer.get(element, dataBsSlide)) {\n      // determine transition direction\n      /* istanbul ignore else */\n      if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n        this.direction = RTL ? 'right' : 'left'; // next\n      } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n        this.direction = RTL ? 'left' : 'right'; // prev\n      }\n      const { direction } = this;\n\n      // find the right next index\n      if (next < 0) {\n        next = slides.length - 1;\n      } else if (next >= slides.length) {\n        next = 0;\n      }\n\n      // orientation, class name, eventProperties\n      const orientation = direction === 'left' ? 'next' : 'prev';\n      const directionClass = direction === 'left' ? 'start' : 'end';\n\n      const eventProperties = {\n        relatedTarget: slides[next],\n        from: activeItem,\n        to: next,\n        direction,\n      };\n\n      // update event properties\n      ObjectAssign(carouselSlideEvent, eventProperties);\n      ObjectAssign(carouselSlidEvent, eventProperties);\n\n      // discontinue when prevented\n      dispatchEvent(element, carouselSlideEvent);\n      if (!carouselSlideEvent.defaultPrevented) {\n        // update index\n        this.index = next;\n        activateCarouselIndicator(this, next);\n\n        if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n          Timer.set(\n            element,\n            () => {\n              addClass(slides[next], `${carouselItem}-${orientation}`);\n              reflow(slides[next]);\n              addClass(slides[next], `${carouselItem}-${directionClass}`);\n              addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n              // the instance might get diposed mid-animation\n              emulateTransitionEnd(\n                slides[next],\n                () => this.slides && this.slides.length && carouselTransitionEndHandler(this),\n              );\n            },\n            0,\n            dataBsSlide,\n          );\n        } else {\n          addClass(slides[next], activeClass);\n          removeClass(slides[activeItem], activeClass);\n\n          Timer.set(\n            element,\n            () => {\n              Timer.clear(element, dataBsSlide);\n              // check for element, might have been disposed\n              /* istanbul ignore else */\n              if (element && options.interval && !this.isPaused) {\n                this.cycle();\n              }\n\n              dispatchEvent(element, carouselSlidEvent);\n            },\n            0,\n            dataBsSlide,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles all event listeners for the `Carousel` instance.\n   *\n   * @param add when `TRUE` event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const { element, options, slides, controls, indicators } = this;\n    const { touch, pause, interval, keyboard } = options;\n    const action = add ? addListener : removeListener;\n\n    if (pause && interval) {\n      action(element, mouseenterEvent, carouselPauseHandler);\n      action(element, mouseleaveEvent, carouselResumeHandler);\n    }\n\n    if (touch && slides.length > 2) {\n      action(element, pointerdownEvent, carouselPointerDownHandler, passiveHandler);\n      action(element, touchstartEvent, carouselDragHandler, { passive: false });\n      action(element, dragstartEvent, carouselDragHandler, { passive: false });\n    }\n\n    /* istanbul ignore else */\n    if (controls.length) {\n      controls.forEach(arrow => {\n        /* istanbul ignore else */\n        if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler);\n      });\n    }\n\n    /* istanbul ignore else */\n    if (indicators.length) {\n      indicators.forEach(indicator => {\n        action(indicator, mouseclickEvent, carouselIndicatorHandler);\n      });\n    }\n\n    if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler);\n  };\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    this._toggleEventListeners();\n    super.dispose();\n\n    // istanbul ignore next - impossible to test with cypress\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n  isHTMLElement,\n  isString,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element);\n    setElementStyle(element, { height: '0px' });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      /* istanbul ignore else */\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent as string, doc)\n      : null;\n\n    // add event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /**\n   * Toggles on/off the event listener(s) of the `Collapse` instance.\n   *\n   * @param add when `true`, the event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler));\n    }\n  };\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    this._toggleEventListeners();\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest, getAttribute } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (getAttribute(element, 'href') as string).slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, 'href') &&\n      (getAttribute(parentAnchor, 'href') as string).slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n  isHTMLElement,\n  mousedownEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<DropdownEvent>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore else: this test requires a navbar */\n  if (getElementStyle(menu, 'position') !== 'static') {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n    resetProps.forEach(p => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = '';\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass =\n      dropdownClasses.find(c => hasClass(parentElement, c)) ||\n      /* istanbul ignore next: fallback position */ dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: '100%' },\n      dropup: { top: 'auto', bottom: '100%' },\n      dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n      dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n      menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n      menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropendString;\n    }\n    if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: 'auto',\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n      if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n      if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n      if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      /* istanbul ignore else */\n      if (menuEnd) {\n        const endAdjust =\n          (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore else */\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    /* istanbul ignore else */\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm =\n        parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === 'form' || closest(target, 'form') !== null);\n\n      if ([mouseclickEvent, mousedownEvent].includes(type) && isEmptyAnchor(target)) {\n        e.preventDefault();\n      }\n\n      /* istanbul ignore else */\n      if (!isForm && type !== focusEvent && target !== element && target !== menu) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopPropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  /* istanbul ignore else */\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n      let idx = menuItems.indexOf(activeElement);\n      /* istanbul ignore else */\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      /* istanbul ignore else */\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(dropdownMenuClass, parentElement as ParentNode);\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement && getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'true');\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'false');\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'div', className: 'popup-container' }) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import {\n  createElement,\n  getDocument,\n  reflow,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getDocumentBody,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  focus,\n  Timer,\n  MouseEvent,\n  KeyboardEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, update } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getWindow(element), resizeEvent, update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n\n  const trigger = target && closest(target, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.toggle();\n  }\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent<HTMLElement>) => {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options } = self;\n    /* istanbul ignore else */\n    if (\n      options.keyboard &&\n      code === keyEscape && // the keyboard option is enabled and the key is 27\n      hasClass(element, showClass)\n    ) {\n      // the modal is not visible\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nconst modalDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { currentTarget } = e;\n  const self = currentTarget ? getModalInstance(currentTarget) : null;\n\n  // this timer is needed\n  /* istanbul ignore else: must have a filter */\n  if (self && currentTarget && !Timer.get(currentTarget)) {\n    const { options, isStatic, modalDialog } = self;\n    const { backdrop } = options;\n    const { target } = e;\n\n    const selectedText = getDocument(currentTarget)?.getSelection()?.toString().length;\n    const targetInsideDialog = modalDialog.contains(target);\n    const dismiss = target && closest(target, modalDismissSelector);\n\n    /* istanbul ignore else */\n    if (isStatic && !targetInsideDialog) {\n      Timer.set(\n        currentTarget,\n        () => {\n          addClass(currentTarget, modalStaticClass);\n          emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n        },\n        17,\n      );\n    } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n      self.relatedTarget = dismiss || null;\n      self.hide();\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    /* istanbul ignore else */\n    if (modalDialog) {\n      this.modalDialog = modalDialog;\n      // modal can have multiple triggering elements\n      this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n        btn => getTargetElement(btn) === element,\n      );\n\n      // additional internals\n      this.isStatic = this.options.backdrop === 'static';\n      this.hasFade = hasClass(element, fadeClass);\n      this.relatedTarget = null;\n\n      // attach event listeners\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showModalEvent);\n      if (!showModalEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getModalInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, offcanvasComponent);\n          if (that) that.hide();\n        }\n        if (backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, hasFade, true);\n          } else {\n            toggleOverlayType(true);\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeModalShow(this), overlayDelay);\n        } else {\n          beforeModalShow(this);\n          /* istanbul ignore else */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideModalEvent);\n\n      if (!hideModalEvent.defaultPrevented) {\n        removeClass(element, showClass);\n        setAttribute(element, ariaHidden, 'true');\n        removeAttribute(element, ariaModal);\n\n        /* istanbul ignore else */\n        if (hasFade) {\n          emulateTransitionEnd(element, () => beforeModalHide(this));\n        } else {\n          beforeModalHide(this);\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener of the `Modal` instance.\n   *\n   * @param add when `true`, event listener(s) is/are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler));\n    }\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, modalDialog } = clone;\n    // const callback = () => setTimeout(() => super.dispose(), 17);\n    const callback = () => super.dispose();\n    this._toggleEventListeners();\n\n    this.hide();\n\n    /* istanbul ignore else */\n    if (hasClass(element, 'fade')) {\n      // use transitionend callback\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n  }\n  emulateTransitionEnd(element, () => hideOffcanvasComplete(self));\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options, triggers } = self;\n    const { backdrop } = options;\n    const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n    const selection = getDocument(element).getSelection();\n\n    /* istanbul ignore else: a filter is required here */\n    if (!overlay.contains(target as HTMLElement) || backdrop !== 'static') {\n      /* istanbul ignore else */\n      if (\n        !(selection && selection.toString().length) &&\n        ((!element.contains(target as HTMLElement) &&\n          backdrop &&\n          /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n          (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n      ) {\n        self.relatedTarget =\n          offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n        self.hide();\n      }\n\n      /* istanbul ignore next */\n      if (trigger && trigger.tagName === 'A') e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (self.options.keyboard && code === keyEscape) {\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showOffcanvasEvent);\n\n      if (!showOffcanvasEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getOffcanvasInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, modalComponent);\n          if (that) that.hide();\n        }\n\n        if (options.backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, true);\n          } else {\n            toggleOverlayType();\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n        } else {\n          beforeOffcanvasShow(this);\n          /* istanbul ignore next - this test was done on Modal */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n    // let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) {\n      hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideOffcanvasEvent);\n      if (!hideOffcanvasEvent.defaultPrevented) {\n        addClass(element, offcanvasTogglingClass);\n        removeClass(element, showClass);\n        beforeOffcanvasHide(this);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listeners.\n   *\n   * @param self the `Offcanvas` instance\n   * @param add when *true*, listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    this.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler));\n  };\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, options } = clone;\n    const delay = options.backdrop ? getElementTransitionDuration(overlay) : /* istanbul ignore next */ 0;\n    const callback = () => setTimeout(() => super.dispose(), delay + 17);\n    this._toggleEventListeners();\n\n    this.hide();\n    if (hasClass(element, showClass)) {\n      emulateTransitionEnd(element, callback);\n      /* istanbul ignore next */\n    } else {\n      callback();\n    }\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  toLowerCase,\n  createCustomEvent,\n  dispatchEvent,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\nimport type { TooltipEvent } from '../interface/tooltip';\nimport type { PopoverEvent } from '../interface/popover';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n\n  /* istanbul ignore else */\n  if (tooltip) {\n    const tipPositions = { ...tipClassPositions };\n    const RTL = isRTL(element);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      // top: '0px', left: '0px', right: '', bottom: '',\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    const isPopover = self.name === popoverComponent;\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n    const parentPosition = getElementStyle(container as HTMLElement, 'position');\n    const fixedParent = parentPosition === 'fixed';\n    const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n    const leftBoundry = RTL && fixedParent ? /* istanbul ignore next */ scrollbarWidth : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = getBoundingClientRect(element, true);\n    const { x, y } = {\n      x: elemRectLeft,\n      y: elemRectTop,\n    };\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = '';\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = '';\n    let arrowTop: number | string = '';\n    let arrowLeft: number | string = '';\n    let arrowRight: number | string = '';\n\n    const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n    const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = ['left', 'right'];\n    const verticals = ['top', 'bottom'];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n    // recompute placement\n    placement = placement === 'top' && topExceed ? 'bottom' : placement;\n    placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n    placement = placement === 'left' && leftExceed ? 'right' : placement;\n    placement = placement === 'right' && rightExceed ? /* istanbul ignore next */ 'left' : placement;\n\n    // update tooltip/popover class\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n    }\n\n    // compute tooltip / popover coordinates\n    /* istanbul ignore else */\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === 'left') {\n        // LEFT\n        leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n      } else {\n        // RIGHT\n        leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = y;\n        bottomPosition = '';\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = y - tipHeight + elemHeight;\n        bottomPosition = '';\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = y - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === '' ? '' : `${bottomPosition}px`,\n      left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== '' ? `${rightPosition}px` : '',\n    });\n\n    // update arrow placement\n    /* istanbul ignore else */\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== '') {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== '') {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== '') {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`updated.bs.${toLowerCase(self.name)}`);\n    dispatchEvent(element, updatedTooltipEvent);\n  }\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","import { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: HTMLElement, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore else */\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    : /* istanbul ignore next */ undefined;\n\n  const { tooltip } = self;\n  /* istanbul ignore else */\n  if (tooltip) {\n    // set id and role attributes\n    setAttribute(tooltip, 'id', id);\n    setAttribute(tooltip, 'role', tooltipString);\n\n    const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n    const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n    const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n    // set arrow and enable access for styleTip\n    self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n    const { arrow } = self;\n\n    if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n    else {\n      const tempTitle = createElement('div') as HTMLElement;\n      setHtml(tempTitle, title, sanitizeFn);\n      titleParts = [...[...tempTitle.childNodes]];\n    }\n\n    if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n    else {\n      const tempContent = createElement('div') as HTMLElement;\n      setHtml(tempContent, content, sanitizeFn);\n      contentParts = [...[...tempContent.childNodes]];\n    }\n\n    // set dismissible button\n    if (dismissible) {\n      if (title) {\n        if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          titleParts = [...titleParts, tempBtn.firstChild as Node];\n        }\n      } else {\n        /* istanbul ignore else */\n        if (tooltipHeader) tooltipHeader.remove();\n        if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          contentParts = [...contentParts, tempBtn.firstChild as Node];\n        }\n      }\n    }\n\n    // fill the template with content from options / data attributes\n    // also sanitize title && content\n    /* istanbul ignore else */\n    if (!isTooltip) {\n      /* istanbul ignore else */\n      if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n      /* istanbul ignore else */\n      if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n      // set btn\n      self.btn = querySelector('.btn-close', tooltip) || undefined;\n    } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n    // Bootstrap 5.2.x\n    // addClass(tooltip, 'position-absolute');\n    addClass(tooltip, 'position-fixed');\n    addClass(arrow, 'position-absolute');\n\n    // set popover animation and placement\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n    /* istanbul ignore else */\n    if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n    /* istanbul ignore else */\n    if (customClass && !hasClass(tooltip, customClass)) {\n      addClass(tooltip, customClass);\n    }\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n  }\n};\n\nexport default createTip;\n","import { getDocument, isShadowRoot, isTableElement, getParentNode, getElementStyle } from '@thednp/shorty';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = ['HTML', 'BODY'];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, 'position') !== 'relative' &&\n        containers.slice(i + 1).every(r => getElementStyle(r as HTMLElement, 'position') === 'static')\n      ) {\n        return c;\n      }\n      return null;\n    }) || /* istanbul ignore next: optional guard */ getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementStyle,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip as HTMLElement, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container, offsetParent } = self;\n\n  return tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  self._toggleEventListeners();\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch, passiveHandler);\n\n  [scrollEvent, resizeEvent].forEach(ev => {\n    action(getWindow(element), ev, self.update, passiveHandler);\n  });\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, container, offsetParent } = self;\n  const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  const win = getWindow(element);\n  const overflow = offsetHeight !== scrollHeight;\n  const scrollTarget = container === offsetParent && overflow ? container : win;\n  action(scrollTarget, resizeEvent, self.update, passiveHandler);\n  action(scrollTarget, scrollEvent, self.update, passiveHandler);\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content || getAttribute(element, titleAtt[0]) || /* istanbul ignore next */ '',\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if (!((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      // reset default options\n      ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n      // set title attributes and add event listeners\n      /* istanbul ignore else */\n      if (hasAttribute(element, titleAttr) && isTooltip && typeof options.title === 'string') {\n        toggleTooltipTitle(this, options.title);\n      }\n\n      // set containers\n      this.container = getElementContainer(element);\n      this.offsetParent = ['sticky', 'fixed'].some(\n        position => getElementStyle(this.container as HTMLElement, 'position') === position,\n      )\n        ? (this.container as HTMLElement)\n        : getDocument(this.element).body;\n\n      // create tooltip here\n      createTip(this);\n\n      // attach events\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  handleFocus = () => focus(this.element);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, tipContainer);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            /* istanbul ignore else */\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            else tooltipShownAction(this);\n          }\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip<Tooltip>(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      this._toggleEventListeners(true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasTip(this) && animation) {\n        this.hide();\n        emulateTransitionEnd(tooltip, () => this._toggleEventListeners());\n      } else {\n        this._toggleEventListeners();\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore else */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Toggles on/off the `Tooltip` event listeners.\n   *\n   * @param add when `true`, event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    // btn is only for dismissible popover\n    const { element, options, btn } = this;\n    const { trigger } = options;\n    const isPopover = this.name !== tooltipComponent;\n    const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n    /* istanbul ignore else */\n    if (!trigger.includes('manual')) {\n      this.enabled = !!add;\n\n      const triggerOptions = trigger.split(' ');\n\n      triggerOptions.forEach(tr => {\n        /* istanbul ignore else */\n        if (tr === mousehoverEvent) {\n          action(element, mousedownEvent, this.handleShow);\n          action(element, mouseenterEvent, this.handleShow);\n\n          /* istanbul ignore else */\n          if (!dismissible) {\n            action(element, mouseleaveEvent, this.handleHide);\n            action(getDocument(element), touchstartEvent, this.handleTouch, passiveHandler);\n          }\n        } else if (tr === mouseclickEvent) {\n          action(element, tr, !dismissible ? this.toggle : this.handleShow);\n        } else if (tr === focusEvent) {\n          action(element, focusinEvent, this.handleShow);\n          /* istanbul ignore else */\n          if (!dismissible) action(element, focusoutEvent, this.handleHide);\n          /* istanbul ignore else */\n          if (isApple) {\n            action(element, mouseclickEvent, this.handleFocus);\n          }\n        }\n        /* istanbul ignore else */\n        if (dismissible && btn) {\n          action(btn, mouseclickEvent, this.handleHide);\n        }\n      });\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () => setTimeout(() => disposeTooltipComplete(clone, () => super.dispose()), 17);\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip as HTMLElement, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget ? getScrollHeight(scrollTarget) : /* istanbul ignore next */ scrollHeight;\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (this.target) {\n      // set initial state\n      this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n      this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n      // add event handlers\n      this._toggleEventListeners(true);\n\n      this.refresh();\n    }\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore else */\n    if (isHTMLElement(target) && target.offsetHeight > 0) {\n      updateSpyTargets(this);\n\n      const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n      if (scrollTop >= maxScroll) {\n        const newActiveItem = items[itemsLength - 1];\n\n        /* istanbul ignore else */\n        if (activeItem !== newActiveItem) {\n          activate(this, newActiveItem);\n        }\n        return;\n      }\n\n      const { offsets } = this;\n\n      if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n        this.activeItem = null;\n        if (target) clear(target);\n        return;\n      }\n\n      items.forEach((item, i) => {\n        if (\n          activeItem !== item &&\n          scrollTop >= offsets[i] &&\n          (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n        ) {\n          activate(this, item);\n        }\n      });\n    }\n  };\n\n  /**\n   * Toggles on/off the component event listener.\n   *\n   * @param add when `true`, listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.scrollTarget as EventTarget, scrollEvent, this.refresh, passiveHandler);\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || /* istanbul ignore next */ {\n      currentHeight: 0,\n      nextHeight: 0,\n    };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n\n  if (!showTabEvent.defaultPrevented) {\n    if (nextContent) addClass(nextContent, activeClass);\n    if (content) removeClass(content, activeClass);\n\n    /* istanbul ignore else */\n    if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n      const nextHeight = nextContent.scrollHeight;\n      tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n      addClass(tabContent, collapsingClass);\n      tabContent.style.height = `${currentHeight}px`;\n      reflow(tabContent);\n      [content, nextContent].forEach(c => {\n        if (c) removeClass(c, 'overflow-hidden');\n      });\n    }\n\n    if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n      setTimeout(() => {\n        addClass(nextContent, showClass);\n        emulateTransitionEnd(nextContent, () => {\n          triggerTabShow(self);\n        });\n      }, 1);\n    } else {\n      if (nextContent) addClass(nextContent, showClass);\n      triggerTabShow(self);\n    }\n\n    if (tab) dispatchEvent(tab, hiddenTabEvent);\n  }\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  /* istanbul ignore next */\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.preventDefault();\n    self.show();\n  }\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    /* istanbul ignore else */\n    if (content) {\n      const nav = closest(element, '.nav');\n      const container = closest(content, '.tab-content');\n\n      this.nav = nav;\n      this.content = content;\n      this.tabContent = container;\n\n      // event targets\n      this.dropdown = getParentDropdown(element);\n\n      // show first Tab instance of none is shown\n      // suggested on #432\n      const { tab } = getActiveTab(this);\n      if (nav && !tab) {\n        const firstTab = querySelector(tabSelector, nav);\n        const firstTabContent = firstTab && getTargetElement(firstTab);\n\n        /* istanbul ignore else */\n        if (firstTabContent) {\n          addClass(firstTab, activeClass);\n          addClass(firstTabContent, showClass);\n          addClass(firstTabContent, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n        }\n      }\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      /* istanbul ignore else */\n      if (isHTMLElement(tab)) {\n        dispatchEvent(tab as EventTarget, hideTabEvent);\n        /* istanbul ignore else */\n        if (!hideTabEvent.defaultPrevented) {\n          addClass(element, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n\n          const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n          if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n            removeClass(activeDropdown, activeClass);\n          }\n\n          /* istanbul ignore else */\n          if (nav) {\n            const toggleTab = () => {\n              if (tab) {\n                removeClass(tab, activeClass);\n                setAttribute(tab, ariaSelected, 'false');\n              }\n              if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n            };\n\n            if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n              Timer.set(nav, toggleTab, 1);\n            } else toggleTab();\n          }\n\n          if (content) {\n            removeClass(content, showClass);\n            if (hasClass(content, fadeClass)) {\n              emulateTransitionEnd(content, () => triggerTabHide(this));\n            } else {\n              triggerTabHide(this);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, tabClickHandler);\n  };\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  self._toggleEventListeners();\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.show();\n  }\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore else: a solid filter is required */\n  if (self && element !== relatedTarget && !element.contains(relatedTarget as Node)) {\n    if ([mouseenterEvent, focusinEvent].includes(type)) {\n      Timer.clear(element, toastString);\n    } else {\n      Timer.set(element, () => self.hide(), self.options.delay, toastString);\n    }\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (!showToastEvent.defaultPrevented) {\n        showToast(this);\n      }\n    }\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (!hideToastEvent.defaultPrevented) {\n        hideToast(this);\n      }\n    }\n  };\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, it will add the listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { element, triggers, dismiss, options, hide } = this;\n\n    /* istanbul ignore else */\n    if (dismiss) {\n      action(dismiss, mouseclickEvent, hide);\n    }\n\n    /* istanbul ignore else */\n    if (options.autohide) {\n      [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n        action(element, e, interactiveToastHandler),\n      );\n    }\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\n[Alert, Button, Carousel, Collapse, Dropdown, Modal, Offcanvas, Popover, ScrollSpy, Tab, Toast, Tooltip].forEach(c =>\n  componentsList.set(c.prototype.name, c),\n);\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  componentsList.forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach(comp => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n"],"names":["fe","ge","Ee","ye","we","Ae","P","$","_","tt","st","rt","it","lt","pt","mt","ft","St","kt","Mt","Ct","zt","Vt","Ce","Re","Qe","je","qe","$e","Rt","Qt","C","U","jt","A","qt","S","z","x","vn","N","Gt","e","n","o","s","Jt","Kt","r","Xt","Yt","kn","Tn","Cn","Ln","In","zn","v","i","u","E","L","Hn","k","W","R","d","M","Zt","Q","g","ee","ne","Un","a","l","Qn","V","w","oe","jn","p","c","m","y","j","Gn","Xn","Yn","Zn","$n","I","se","f","_n","h","eo","T","ce","so","B","H","b","ae","ro","ie","uo","mo","ho","yo","Ao","le","So","de","Mo","To","Do","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","version","BaseComponent","target","config","__publicField","element","querySelector","isString","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","self","dispatchEvent","hasClass","removeClass","emulateTransitionEnd","add","action","addListener","removeListener","dismiss","close","mouseclickEvent","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","isActive","getAttribute","addClass","setAttribute","ariaPressed","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","closest","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","keyArrowRight","keyArrowLeft","carouselDragHandler","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","_a","activateCarouselIndicator","pointermoveEvent","passiveHandler","pointerupEvent","isHTMLElement","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","touchstartEvent","dragstartEvent","arrow","indicator","keydownEvent","getElementsByClassName","activeIndex","transitionItem","matches","ar","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","isAnimating","clone","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","getCurrentOpenDropdown","currentParent","type","isForm","mousedownEvent","dropdownClickHandler","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","pad","padStyle","toggleModalDismiss","update","modalDismissHandler","modalKeyHandler","afterModalHide","relatedTarget","focusElement","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","modalClickHandler","currentTarget","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","that","callback","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offcanvasTriggerHandler","offCanvasDismiss","selection","visibleTrigger","delay","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","toLowerCase","tooltipDefaults","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","isFunction","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","offsetParent","ariaDescribedBy","hasTip","disposeTooltipComplete","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","toggleTooltipOpenHandlers","offsetHeight","parentModal","parentOffcanvas","win","scrollTarget","titleAtt","tr","mousehoverEvent","focusinEvent","focusoutEvent","isApple","tipComponent","elem","getUID","position","outTimer","tipContainer","showTooltipEvent","hideTooltipEvent","enabled","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","itemsLength","isWin","isWindow","links","getElementsByTagName","scrollHEIGHT","getScrollHeight","href","targetItem","rect","getOffsetHeight","link","clear","item","activate","parents","parentItem","menuItem","parentLink","scrollTop","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","completeDisposeToast","toastClickHandler","interactiveToastHandler","isShown","hide","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","cs","init","selector","removeDataAPI","comp"],"mappings":"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","x_google_ignoreList":[0,1]}