{"version":3,"file":"bootstrap-native.mjs","sources":["../node_modules/.pnpm/@thednp+shorty@2.0.0/node_modules/@thednp/shorty/dist/shorty.mjs","../node_modules/.pnpm/@thednp+event-listener@2.0.4/node_modules/@thednp/event-listener/dist/event-listener.mjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["const pe = \"aria-checked\", me = \"aria-description\", fe = \"aria-describedby\", ge = \"aria-expanded\", ve = \"aria-haspopup\", Ee = \"aria-hidden\", be = \"aria-label\", he = \"aria-labelledby\", ye = \"aria-modal\", we = \"aria-pressed\", Ae = \"aria-selected\", Se = \"aria-valuemin\", Ne = \"aria-valuemax\", ke = \"aria-valuenow\", Me = \"aria-valuetext\", q = \"abort\", G = \"beforeunload\", J = \"blur\", K = \"change\", X = \"contextmenu\", P = \"DOMContentLoaded\", Y = \"DOMMouseScroll\", Z = \"error\", $ = \"focus\", _ = \"focusin\", tt = \"focusout\", et = \"gesturechange\", nt = \"gestureend\", ot = \"gesturestart\", st = \"keydown\", ct = \"keypress\", rt = \"keyup\", at = \"load\", it = \"click\", ut = \"dblclick\", lt = \"mousedown\", dt = \"mouseup\", pt = \"hover\", mt = \"mouseenter\", ft = \"mouseleave\", gt = \"mousein\", vt = \"mouseout\", Et = \"mouseover\", bt = \"mousemove\", ht = \"mousewheel\", yt = \"move\", wt = \"orientationchange\", At = \"pointercancel\", St = \"pointerdown\", Nt = \"pointerleave\", kt = \"pointermove\", Mt = \"pointerup\", Tt = \"readystatechange\", Dt = \"reset\", Ct = \"resize\", Ot = \"select\", Lt = \"selectend\", It = \"selectstart\", zt = \"scroll\", xt = \"submit\", Vt = \"touchstart\", Bt = \"touchmove\", Ht = \"touchcancel\", Pt = \"touchend\", Ft = \"unload\", Te = {\n  DOMContentLoaded: P,\n  DOMMouseScroll: Y,\n  abort: q,\n  beforeunload: G,\n  blur: J,\n  change: K,\n  click: it,\n  contextmenu: X,\n  dblclick: ut,\n  error: Z,\n  focus: $,\n  focusin: _,\n  focusout: tt,\n  gesturechange: et,\n  gestureend: nt,\n  gesturestart: ot,\n  hover: pt,\n  keydown: st,\n  keypress: ct,\n  keyup: rt,\n  load: at,\n  mousedown: lt,\n  mousemove: bt,\n  mousein: gt,\n  mouseout: vt,\n  mouseenter: mt,\n  mouseleave: ft,\n  mouseover: Et,\n  mouseup: dt,\n  mousewheel: ht,\n  move: yt,\n  orientationchange: wt,\n  pointercancel: At,\n  pointerdown: St,\n  pointerleave: Nt,\n  pointermove: kt,\n  pointerup: Mt,\n  readystatechange: Tt,\n  reset: Dt,\n  resize: Ct,\n  scroll: zt,\n  select: Ot,\n  selectend: Lt,\n  selectstart: It,\n  submit: xt,\n  touchcancel: Ht,\n  touchend: Pt,\n  touchmove: Bt,\n  touchstart: Vt,\n  unload: Ft\n}, De = \"drag\", Ce = \"dragstart\", Oe = \"dragenter\", Le = \"dragleave\", Ie = \"dragover\", ze = \"dragend\", xe = \"loadstart\", Ve = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Be = { down: \"mousedown\", up: \"mouseup\" }, He = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : (\n  /* istanbul ignore next */\n  [\"mouseover\", \"mouseout\"]\n), Pe = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, Fe = { in: \"focusin\", out: \"focusout\" }, Ue = {\n  Backspace: \"Backspace\",\n  //  8\n  Tab: \"Tab\",\n  //  9\n  Enter: \"Enter\",\n  // 13\n  Shift: \"Shift\",\n  // 16\n  Control: \"Control\",\n  // 17\n  Alt: \"Alt\",\n  // 18\n  Pause: \"Pause\",\n  // 19\n  CapsLock: \"CapsLock\",\n  // 20\n  Escape: \"Escape\",\n  // 27\n  Scape: \"Space\",\n  // 32\n  ArrowLeft: \"ArrowLeft\",\n  // 37\n  ArrowUp: \"ArrowUp\",\n  // 38\n  ArrowRight: \"ArrowRight\",\n  // 39\n  ArrowDown: \"ArrowDown\",\n  // 40\n  Insert: \"Insert\",\n  // 45\n  Delete: \"Delete\",\n  // 46\n  Meta: \"Meta\",\n  // 91 windows key\n  ContextMenu: \"ContextMenu\",\n  // 93\n  ScrollLock: \"ScrollLock\"\n  // 145\n}, We = \"Alt\", Re = \"ArrowDown\", Qe = \"ArrowUp\", je = \"ArrowLeft\", qe = \"ArrowRight\", Ge = \"Backspace\", Je = \"CapsLock\", Ke = \"Control\", Xe = \"Delete\", Ye = \"Enter\", Ze = \"NumpadEnter\", $e = \"Escape\", _e = \"Insert\", tn = \"Meta\", en = \"Pause\", nn = \"ScrollLock\", on = \"Shift\", sn = \"Space\", cn = \"Tab\", Ut = \"animationDuration\", Wt = \"animationDelay\", F = \"animationName\", D = \"animationend\", Rt = \"transitionDuration\", Qt = \"transitionDelay\", C = \"transitionend\", U = \"transitionProperty\", rn = \"addEventListener\", an = \"removeEventListener\", un = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, ln = \"offsetHeight\", dn = \"offsetWidth\", pn = \"scrollHeight\", mn = \"scrollWidth\", fn = \"tabindex\", jt = navigator.userAgentData, A = jt, { userAgent: qt } = navigator, S = qt, z = /iPhone|iPad|iPod|Android/i;\nlet O = !1;\nA ? O = A.brands.some((t) => z.test(t.brand)) : O = z.test(S);\nconst gn = O, x = /(iPhone|iPod|iPad)/, vn = A ? A.brands.some((t) => x.test(t.brand)) : (\n  /* istanbul ignore next */\n  x.test(S)\n), En = S ? S.includes(\"Firefox\") : (\n  /* istanbul ignore next */\n  !1\n), { head: N } = document, bn = [\"webkitPerspective\", \"perspective\"].some((t) => t in N.style), Gt = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(e, n, s);\n}, Jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(e, n, s);\n}, Kt = (t, e, n, o) => {\n  const s = (r) => {\n    (r.target === t || r.currentTarget === t) && (n.apply(t, [r]), Jt(t, e, s, o));\n  };\n  Gt(t, e, s, o);\n}, Xt = () => {\n}, hn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    Kt(document, P, Xt, e);\n  } catch {\n  }\n  return t;\n})(), yn = [\"webkitTransform\", \"transform\"].some((t) => t in N.style), wn = \"ontouchstart\" in window || /* istanbul ignore next */\n\"msMaxTouchPoints\" in navigator, An = [\"webkitAnimation\", \"animation\"].some((t) => t in N.style), Sn = [\"webkitTransition\", \"transition\"].some((t) => t in N.style), Yt = (t, e) => t.getAttribute(e), Nn = (t, e, n) => e.getAttributeNS(t, n), kn = (t, e) => t.hasAttribute(e), Mn = (t, e, n) => e.hasAttributeNS(t, n), Tn = (t, e, n) => t.setAttribute(e, n), Dn = (t, e, n, o) => e.setAttributeNS(t, n, o), Cn = (t, e) => t.removeAttribute(e), On = (t, e, n) => e.removeAttributeNS(t, n), Ln = (t, ...e) => {\n  t.classList.add(...e);\n}, In = (t, ...e) => {\n  t.classList.remove(...e);\n}, zn = (t, e) => t.classList.contains(e), { body: xn } = document, { documentElement: Vn } = document, Bn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, i = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((e) => t.nodeType === e) || !1, u = (t) => i(t) && t.nodeType === 1 || !1, E = /* @__PURE__ */ new Map(), L = {\n  data: E,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (t, e, n) => {\n    if (!u(t))\n      return;\n    E.has(e) || E.set(e, /* @__PURE__ */ new Map()), E.get(e).set(t, n);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (t) => E.get(t) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (t, e) => {\n    if (!u(t) || !e)\n      return null;\n    const n = L.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (t, e) => {\n    const n = L.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && E.delete(e));\n  }\n}, Hn = (t, e) => L.get(t, e), k = (t) => typeof t == \"string\" || !1, W = (t) => v(t) && t.constructor.name === \"Window\" || !1, R = (t) => i(t) && t.nodeType === 9 || !1, d = (t) => W(t) ? t.document : R(t) ? t : i(t) ? t.ownerDocument : window.document, M = (t, ...e) => Object.assign(t, ...e), Zt = (t) => {\n  if (!t)\n    return;\n  if (k(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = Zt(e);\n  if (!n)\n    return;\n  const o = { ...t };\n  return delete o.tagName, M(n, o);\n}, $t = (t, e) => {\n  if (!t || !e)\n    return;\n  if (k(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = $t(t, n);\n  if (!o)\n    return;\n  const s = { ...e };\n  return delete s.tagName, M(o, s);\n}, Q = (t, e) => t.dispatchEvent(e), Pn = (t, e, n) => n.indexOf(t) === e, g = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, _t = (t) => {\n  const e = g(t, F), n = g(t, Wt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, te = (t) => {\n  const e = g(t, F), n = g(t, Ut), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Fn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = te(t), r = _t(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(D, a), n = 1);\n    };\n    t.addEventListener(D, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, ee = (t) => {\n  const e = g(t, U), n = g(t, Qt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, ne = (t) => {\n  const e = g(t, U), n = g(t, Rt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Un = (t, e) => {\n  let n = 0;\n  const o = new Event(C), s = ne(t), r = ee(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(C, a), n = 1);\n    };\n    t.addEventListener(C, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, Wn = (t) => Float32Array.from(Array.from(t)), Rn = (t) => Float64Array.from(Array.from(t)), Qn = (t, e) => t.focus(e), V = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, w = (t) => Object.entries(t), oe = (t) => t.toLowerCase(), jn = (t, e, n, o) => {\n  const s = { ...n }, r = { ...t.dataset }, a = { ...e }, l = {}, p = \"title\";\n  return w(r).forEach(([c, m]) => {\n    const y = o && typeof c == \"string\" && c.includes(o) ? c.replace(o, \"\").replace(/[A-Z]/g, (j) => oe(j)) : c;\n    l[y] = V(m);\n  }), w(s).forEach(([c, m]) => {\n    s[c] = V(m);\n  }), w(e).forEach(([c, m]) => {\n    c in s ? a[c] = s[c] : c in l ? a[c] = l[c] : a[c] = c === p ? Yt(t, p) : m;\n  }), a;\n}, qn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Gn = (t) => Object.keys(t), Jn = (t) => Object.values(t), Kn = (t) => Object.fromEntries(t), Xn = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return v(e) && M(n, e), n;\n}, Yn = { passive: !0 }, Zn = (t) => t.offsetHeight, $n = (t, e) => {\n  w(e).forEach(([n, o]) => {\n    if (o && k(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, M(t.style, s);\n    }\n  });\n}, I = (t) => v(t) && t.constructor.name === \"Map\" || !1, se = (t) => typeof t == \"number\" || !1, f = /* @__PURE__ */ new Map(), _n = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (t, e, n, o) => {\n    u(t) && (o && o.length ? (f.has(t) || f.set(t, /* @__PURE__ */ new Map()), f.get(t).set(o, setTimeout(e, n))) : f.set(t, setTimeout(e, n)));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (t, e) => {\n    if (!u(t))\n      return null;\n    const n = f.get(t);\n    return e && n && I(n) ? n.get(e) || /* istanbul ignore next */\n    null : se(n) ? n : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (t, e) => {\n    if (!u(t))\n      return;\n    const n = f.get(t);\n    e && e.length && I(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && f.delete(t)) : (clearTimeout(n), f.delete(t));\n  }\n}, to = (t) => t.toUpperCase(), h = (t, e) => {\n  const { width: n, height: o, top: s, right: r, bottom: a, left: l } = t.getBoundingClientRect();\n  let p = 1, c = 1;\n  if (e && u(t)) {\n    const { offsetWidth: m, offsetHeight: y } = t;\n    p = m > 0 ? Math.round(n) / m : (\n      /* istanbul ignore next */\n      1\n    ), c = y > 0 ? Math.round(o) / y : (\n      /* istanbul ignore next */\n      1\n    );\n  }\n  return {\n    width: n / p,\n    height: o / c,\n    top: s / c,\n    right: r / p,\n    bottom: a / c,\n    left: l / p,\n    x: l / p,\n    y: s / c\n  };\n}, eo = (t) => d(t).body, T = (t) => d(t).documentElement, no = (t) => d(t).head, oo = (t) => {\n  const e = W(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, ce = (t) => i(t) && t.constructor.name === \"ShadowRoot\" || !1, so = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || // step into the shadow DOM of the parent of a slotted node\ni(t) && t.parentNode || // DOM Element detected\nce(t) && t.host || // ShadowRoot detected\nT(t), re = (t) => {\n  if (!u(t))\n    return !1;\n  const { width: e, height: n } = h(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, co = (t, e, n) => {\n  const o = u(e), s = h(t, o && re(e)), r = { x: 0, y: 0 };\n  if (o) {\n    const a = h(e, !0);\n    r.x = a.x + e.clientLeft, r.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - r.x,\n    y: s.top + n.y - r.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet B = 0, H = 0;\nconst b = /* @__PURE__ */ new Map(), ae = (t, e) => {\n  let n = e ? B : H;\n  if (e) {\n    const o = ae(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), I(s) && !s.has(e) ? (s.set(e, n), B += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), H += 1);\n  }\n  return n;\n}, ro = (t) => {\n  var e;\n  return t ? R(t) ? t.defaultView : i(t) ? (e = t == null ? void 0 : t.ownerDocument) == null ? void 0 : e.defaultView : t : window;\n}, ie = (t) => Array.isArray(t) || !1, ao = (t) => i(t) && t.nodeName === \"CANVAS\" || !1, ue = (t) => u(t) && !!t.shadowRoot || !1, io = (t) => i(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, uo = (t) => {\n  if (!i(t))\n    return !1;\n  const { top: e, bottom: n } = h(t), { clientHeight: o } = T(t);\n  return e <= o && n >= 0;\n}, lo = (t) => {\n  if (!i(t))\n    return !1;\n  const { clientWidth: e, clientHeight: n } = T(t), { top: o, left: s, bottom: r, right: a } = h(t, !0);\n  return o >= 0 && s >= 0 && r <= n && a <= e;\n}, po = (t) => ie(t) && t.every(u) || !1, mo = (t) => typeof t == \"function\" || !1, fo = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, go = (t) => u(t) && t.tagName === \"IMG\" || !1, vo = (t) => {\n  if (!k(t))\n    return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, Eo = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, bo = (t) => i(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((e) => t.constructor.name.includes(e)) || !1, ho = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, yo = (t) => T(t).dir === \"rtl\", wo = (t) => i(t) && t.constructor.name.includes(\"SVG\") || !1, Ao = (t) => i(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, le = (t, e) => t ? t.closest(e) || // break out of `ShadowRoot`\nle(t.getRootNode().host, e) : null, So = (t, e) => u(t) ? t : (i(e) ? e : d()).querySelector(t), de = (t, e) => (i(e) ? e : d()).getElementsByTagName(t), No = (t) => [...de(\"*\", t)].filter(ue), ko = (t, e) => d(e).getElementById(t) || null, Mo = (t, e) => (i(e) ? e : d()).querySelectorAll(t), To = (t, e) => (e && i(e) ? e : d()).getElementsByClassName(\n  t\n), Do = (t, e) => t.matches(e), Co = \"2.0.0\";\nexport {\n  Bn as ArrayFrom,\n  P as DOMContentLoadedEvent,\n  Y as DOMMouseScrollEvent,\n  L as Data,\n  Wn as Float32ArrayFrom,\n  Rn as Float64ArrayFrom,\n  M as ObjectAssign,\n  w as ObjectEntries,\n  Kn as ObjectFromEntries,\n  qn as ObjectHasOwn,\n  Gn as ObjectKeys,\n  Jn as ObjectValues,\n  _n as Timer,\n  q as abortEvent,\n  Ln as addClass,\n  rn as addEventListener,\n  Wt as animationDelay,\n  Ut as animationDuration,\n  D as animationEndEvent,\n  F as animationName,\n  pe as ariaChecked,\n  fe as ariaDescribedBy,\n  me as ariaDescription,\n  ge as ariaExpanded,\n  ve as ariaHasPopup,\n  Ee as ariaHidden,\n  be as ariaLabel,\n  he as ariaLabelledBy,\n  ye as ariaModal,\n  we as ariaPressed,\n  Ae as ariaSelected,\n  Ne as ariaValueMax,\n  Se as ariaValueMin,\n  ke as ariaValueNow,\n  Me as ariaValueText,\n  G as beforeunloadEvent,\n  un as bezierEasings,\n  J as blurEvent,\n  K as changeEvent,\n  le as closest,\n  X as contextmenuEvent,\n  Xn as createCustomEvent,\n  Zt as createElement,\n  $t as createElementNS,\n  Q as dispatchEvent,\n  Pn as distinct,\n  xn as documentBody,\n  Vn as documentElement,\n  N as documentHead,\n  De as dragEvent,\n  ze as dragendEvent,\n  Oe as dragenterEvent,\n  Le as dragleaveEvent,\n  Ie as dragoverEvent,\n  Ce as dragstartEvent,\n  Fn as emulateAnimationEnd,\n  Un as emulateTransitionEnd,\n  Z as errorEvent,\n  Qn as focus,\n  $ as focusEvent,\n  Fe as focusEvents,\n  _ as focusinEvent,\n  tt as focusoutEvent,\n  et as gesturechangeEvent,\n  nt as gestureendEvent,\n  ot as gesturestartEvent,\n  Yt as getAttribute,\n  Nn as getAttributeNS,\n  h as getBoundingClientRect,\n  No as getCustomElements,\n  d as getDocument,\n  eo as getDocumentBody,\n  T as getDocumentElement,\n  no as getDocumentHead,\n  _t as getElementAnimationDelay,\n  te as getElementAnimationDuration,\n  ko as getElementById,\n  g as getElementStyle,\n  ee as getElementTransitionDelay,\n  ne as getElementTransitionDuration,\n  To as getElementsByClassName,\n  de as getElementsByTagName,\n  Hn as getInstance,\n  oo as getNodeScroll,\n  so as getParentNode,\n  co as getRectRelativeToOffsetParent,\n  ae as getUID,\n  ro as getWindow,\n  kn as hasAttribute,\n  Mn as hasAttributeNS,\n  zn as hasClass,\n  vn as isApple,\n  ie as isArray,\n  ao as isCanvas,\n  ue as isCustomElement,\n  R as isDocument,\n  io as isElement,\n  uo as isElementInScrollRange,\n  lo as isElementInViewport,\n  po as isElementsArray,\n  En as isFirefox,\n  mo as isFunction,\n  fo as isHTMLCollection,\n  u as isHTMLElement,\n  go as isHTMLImageElement,\n  vo as isJSON,\n  I as isMap,\n  bo as isMedia,\n  gn as isMobile,\n  i as isNode,\n  ho as isNodeList,\n  se as isNumber,\n  v as isObject,\n  yo as isRTL,\n  wo as isSVGElement,\n  re as isScaledElement,\n  ce as isShadowRoot,\n  k as isString,\n  Ao as isTableElement,\n  Eo as isWeakMap,\n  W as isWindow,\n  We as keyAlt,\n  Re as keyArrowDown,\n  je as keyArrowLeft,\n  qe as keyArrowRight,\n  Qe as keyArrowUp,\n  Ge as keyBackspace,\n  Je as keyCapsLock,\n  Ke as keyControl,\n  Xe as keyDelete,\n  Ye as keyEnter,\n  $e as keyEscape,\n  _e as keyInsert,\n  tn as keyMeta,\n  Ze as keyNumpadEnter,\n  en as keyPause,\n  nn as keyScrollLock,\n  on as keyShift,\n  sn as keySpace,\n  cn as keyTab,\n  Ue as keyboardEventKeys,\n  st as keydownEvent,\n  ct as keypressEvent,\n  rt as keyupEvent,\n  at as loadEvent,\n  xe as loadstartEvent,\n  Do as matches,\n  Be as mouseClickEvents,\n  He as mouseHoverEvents,\n  Ve as mouseSwipeEvents,\n  it as mouseclickEvent,\n  ut as mousedblclickEvent,\n  lt as mousedownEvent,\n  mt as mouseenterEvent,\n  pt as mousehoverEvent,\n  gt as mouseinEvent,\n  ft as mouseleaveEvent,\n  bt as mousemoveEvent,\n  vt as mouseoutEvent,\n  Et as mouseoverEvent,\n  dt as mouseupEvent,\n  ht as mousewheelEvent,\n  yt as moveEvent,\n  Te as nativeEvents,\n  Xt as noop,\n  jn as normalizeOptions,\n  V as normalizeValue,\n  Jt as off,\n  ln as offsetHeight,\n  dn as offsetWidth,\n  Gt as on,\n  Kt as one,\n  wt as orientationchangeEvent,\n  Yn as passiveHandler,\n  At as pointercancelEvent,\n  St as pointerdownEvent,\n  Nt as pointerleaveEvent,\n  kt as pointermoveEvent,\n  Mt as pointerupEvent,\n  So as querySelector,\n  Mo as querySelectorAll,\n  Tt as readystatechangeEvent,\n  Zn as reflow,\n  Cn as removeAttribute,\n  On as removeAttributeNS,\n  In as removeClass,\n  an as removeEventListener,\n  Dt as resetEvent,\n  Ct as resizeEvent,\n  zt as scrollEvent,\n  pn as scrollHeight,\n  mn as scrollWidth,\n  Ot as selectEvent,\n  Lt as selectendEvent,\n  It as selectstartEvent,\n  Tn as setAttribute,\n  Dn as setAttributeNS,\n  $n as setElementStyle,\n  xt as submitEvent,\n  bn as support3DTransform,\n  An as supportAnimation,\n  hn as supportPassive,\n  wn as supportTouch,\n  yn as supportTransform,\n  Sn as supportTransition,\n  fn as tabindex,\n  oe as toLowerCase,\n  to as toUpperCase,\n  Pe as touchEvents,\n  Ht as touchcancelEvent,\n  Pt as touchendEvent,\n  Bt as touchmoveEvent,\n  Vt as touchstartEvent,\n  Qt as transitionDelay,\n  Rt as transitionDuration,\n  C as transitionEndEvent,\n  U as transitionProperty,\n  Ft as unloadEvent,\n  S as userAgent,\n  A as userAgentData,\n  Co as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","const e = {}, f = (t) => {\n  const { type: c, currentTarget: i } = t;\n  [...e[c]].forEach(([n, s]) => {\n    i === n && [...s].forEach(([o, a]) => {\n      o.apply(n, [t]), typeof a == \"object\" && a.once && r(n, c, o, a);\n    });\n  });\n}, E = (t, c, i, n) => {\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const s = e[c];\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(t), { size: a } = o;\n  o.set(i, n), a || t.addEventListener(c, f, n);\n}, r = (t, c, i, n) => {\n  const s = e[c], o = s && s.get(t), a = o && o.get(i), d = a !== void 0 ? a : n;\n  o && o.has(i) && o.delete(i), s && (!o || !o.size) && s.delete(t), (!s || !s.size) && delete e[c], (!o || !o.size) && t.removeEventListener(\n    c,\n    f,\n    d\n  );\n}, g = E, M = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  r as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: HTMLElement;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    /* istanbul ignore else */\n    if (prevInstance) {\n      // remove previously attached event listeners\n      // to avoid memory leaks\n      prevInstance._toggleEventListeners();\n    }\n\n    this.element = element;\n    this.options =\n      this.defaults && ObjectKeys(this.defaults).length\n        ? normalizeOptions(element, this.defaults, config || {}, 'bs')\n        : {};\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /** just to have something to extend from */\n  _toggleEventListeners = () => {\n    // do something to please linters\n  };\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove<typeof this>(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (self: Alert) => {\n  const { element } = self;\n  dispatchEvent(element, closedAlertEvent);\n\n  self._toggleEventListeners();\n  self.dispose();\n  element.remove();\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n\n      if (!closeAlertEvent.defaultPrevented) {\n        removeClass(element, showClass);\n\n        if (hasClass(element, fadeClass)) {\n          emulateTransitionEnd(element, () => alertTransitionEnd(this));\n        } else alertTransitionEnd(this);\n      }\n    }\n  };\n  /**\n   * Toggle on / off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { dismiss, close } = this;\n    /* istanbul ignore else */\n    if (dismiss) action(dismiss, mouseclickEvent, close);\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n  getAttribute,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, 'disabled') && !getAttribute(element, 'disabled')) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  // BUTTON PRIVATE METHOD\n  // =====================\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, this.toggle);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  touchstartEvent,\n  dragstartEvent,\n  addClass,\n  hasClass,\n  removeClass,\n  matches,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  /* istanbul ignore else */\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (self.cycle && !getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const newIndex = +(getAttribute(this, dataBsSlideTo) || /* istanbul ignore next */ 0);\n\n    if (\n      this &&\n      !hasClass(this, activeClass) && // event target is not active\n      !Number.isNaN(newIndex)\n    ) {\n      // AND has the specific attribute\n      self.to(newIndex); // do the slide\n    }\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const orientation = getAttribute(this, dataBsSlide);\n\n    /* istanbul ignore else */\n    if (orientation === 'next') {\n      self.next();\n    } else if (orientation === 'prev') {\n      self.prev();\n    }\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (self && !self.isAnimating && !/textarea|input/i.test(target.nodeName)) {\n    const RTL = isRTL(element);\n    const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n    const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n    /* istanbul ignore else */\n    if (code === arrowKeyPrev) self.prev();\n    else if (code === arrowKeyNext) self.next();\n  }\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  /* istanbul ignore next */\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) || !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (self && !self.isAnimating && !self.isTouch) {\n    // filter pointer event on controls & indicators\n    const { controls, indicators } = self;\n    if (![...controls, ...indicators].every(el => el === target || el.contains(target as Node))) {\n      startX = e.pageX;\n\n      /* istanbul ignore else */\n      if (this.contains(target as Node)) {\n        self.isTouch = true;\n        toggleCarouselTouchHandlers(self, true);\n      }\n    }\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore else */\n  if (self) {\n    const { element, index } = self;\n    const RTL = isRTL(element);\n    endX = e.pageX;\n\n    self.isTouch = false;\n    toggleCarouselTouchHandlers(self);\n\n    if (\n      !doc.getSelection()?.toString().length &&\n      element.contains(target as HTMLElement) &&\n      Math.abs(startX - endX) > 120\n    ) {\n      // determine next index to slide to\n      /* istanbul ignore else */\n      if (currentX < startX) {\n        self.to(index + (RTL ? -1 : 1));\n      } else if (currentX > startX) {\n        self.to(index + (RTL ? 1 : -1));\n      }\n    }\n\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n  }\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler, passiveHandler);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length >= 2) {\n      const activeIndex = getActiveIndex(this);\n      // recover item from disposed instance\n      const transitionItem = [...slides].find(s => matches(s, `.${carouselItem}-next,.${carouselItem}-next`));\n      this.index = activeIndex;\n\n      // external controls must be within same document context\n      const doc = getDocument(element);\n\n      this.controls = [\n        ...querySelectorAll(`[${dataBsSlide}]`, element),\n        ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n      // a LIVE collection is prefferable\n      this.indicators = [\n        ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n        ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      // set JavaScript and DATA API options\n      const { options } = this;\n\n      // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n      this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n      // set first slide active if none\n      /* istanbul ignore next - impossible to test with cypress */\n      if (transitionItem) {\n        this.index = [...slides].indexOf(transitionItem);\n      } else if (activeIndex < 0) {\n        this.index = 0;\n        addClass(slides[0], activeClass);\n        if (this.indicators.length) activateCarouselIndicator(this, 0);\n      }\n\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n      // attach event handlers\n      this._toggleEventListeners(true);\n\n      // start to cycle if interval is set\n      if (options.interval) this.cycle();\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (!this.isAnimating && activeItem !== next && !Timer.get(element, dataBsSlide)) {\n      // determine transition direction\n      /* istanbul ignore else */\n      if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n        this.direction = RTL ? 'right' : 'left'; // next\n      } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n        this.direction = RTL ? 'left' : 'right'; // prev\n      }\n      const { direction } = this;\n\n      // find the right next index\n      if (next < 0) {\n        next = slides.length - 1;\n      } else if (next >= slides.length) {\n        next = 0;\n      }\n\n      // orientation, class name, eventProperties\n      const orientation = direction === 'left' ? 'next' : 'prev';\n      const directionClass = direction === 'left' ? 'start' : 'end';\n\n      const eventProperties = {\n        relatedTarget: slides[next],\n        from: activeItem,\n        to: next,\n        direction,\n      };\n\n      // update event properties\n      ObjectAssign(carouselSlideEvent, eventProperties);\n      ObjectAssign(carouselSlidEvent, eventProperties);\n\n      // discontinue when prevented\n      dispatchEvent(element, carouselSlideEvent);\n      if (!carouselSlideEvent.defaultPrevented) {\n        // update index\n        this.index = next;\n        activateCarouselIndicator(this, next);\n\n        if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n          Timer.set(\n            element,\n            () => {\n              addClass(slides[next], `${carouselItem}-${orientation}`);\n              reflow(slides[next]);\n              addClass(slides[next], `${carouselItem}-${directionClass}`);\n              addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n              // the instance might get diposed mid-animation\n              emulateTransitionEnd(\n                slides[next],\n                () => this.slides && this.slides.length && carouselTransitionEndHandler(this),\n              );\n            },\n            0,\n            dataBsSlide,\n          );\n        } else {\n          addClass(slides[next], activeClass);\n          removeClass(slides[activeItem], activeClass);\n\n          Timer.set(\n            element,\n            () => {\n              Timer.clear(element, dataBsSlide);\n              // check for element, might have been disposed\n              /* istanbul ignore else */\n              if (element && options.interval && !this.isPaused) {\n                this.cycle();\n              }\n\n              dispatchEvent(element, carouselSlidEvent);\n            },\n            0,\n            dataBsSlide,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles all event listeners for the `Carousel` instance.\n   *\n   * @param add when `TRUE` event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const { element, options, slides, controls, indicators } = this;\n    const { touch, pause, interval, keyboard } = options;\n    const action = add ? addListener : removeListener;\n\n    if (pause && interval) {\n      action(element, mouseenterEvent, carouselPauseHandler);\n      action(element, mouseleaveEvent, carouselResumeHandler);\n    }\n\n    if (touch && slides.length > 2) {\n      action(element, pointerdownEvent, carouselPointerDownHandler, passiveHandler);\n      action(element, touchstartEvent, carouselDragHandler, { passive: false });\n      action(element, dragstartEvent, carouselDragHandler, { passive: false });\n    }\n\n    /* istanbul ignore else */\n    if (controls.length) {\n      controls.forEach(arrow => {\n        /* istanbul ignore else */\n        if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler);\n      });\n    }\n\n    /* istanbul ignore else */\n    if (indicators.length) {\n      indicators.forEach(indicator => {\n        action(indicator, mouseclickEvent, carouselIndicatorHandler);\n      });\n    }\n\n    if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler);\n  };\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    this._toggleEventListeners();\n    super.dispose();\n\n    // istanbul ignore next - impossible to test with cypress\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n  isHTMLElement,\n  isString,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element);\n    setElementStyle(element, { height: '0px' });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      /* istanbul ignore else */\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent as string, doc)\n      : null;\n\n    // add event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /**\n   * Toggles on/off the event listener(s) of the `Collapse` instance.\n   *\n   * @param add when `true`, the event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler));\n    }\n  };\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    this._toggleEventListeners();\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest, getAttribute } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (getAttribute(element, 'href') as string).slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, 'href') &&\n      (getAttribute(parentAnchor, 'href') as string).slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n  isHTMLElement,\n  mousedownEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<DropdownEvent>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore else: this test requires a navbar */\n  if (getElementStyle(menu, 'position') !== 'static') {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n    resetProps.forEach(p => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = '';\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass =\n      dropdownClasses.find(c => hasClass(parentElement, c)) ||\n      /* istanbul ignore next: fallback position */ dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: '100%' },\n      dropup: { top: 'auto', bottom: '100%' },\n      dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n      dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n      menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n      menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropendString;\n    }\n    if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: 'auto',\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n      if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n      if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n      if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      /* istanbul ignore else */\n      if (menuEnd) {\n        const endAdjust =\n          (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore else */\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    /* istanbul ignore else */\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm =\n        parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === 'form' || closest(target, 'form') !== null);\n\n      if ([mouseclickEvent, mousedownEvent].includes(type) && isEmptyAnchor(target)) {\n        e.preventDefault();\n      }\n\n      /* istanbul ignore else */\n      if (!isForm && type !== focusEvent && target !== element && target !== menu) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopPropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  /* istanbul ignore else */\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n      let idx = menuItems.indexOf(activeElement);\n      /* istanbul ignore else */\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      /* istanbul ignore else */\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(dropdownMenuClass, parentElement as ParentNode);\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement && getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'true');\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'false');\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'div', className: 'popup-container' }) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import {\n  createElement,\n  getDocument,\n  reflow,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getDocumentBody,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  focus,\n  Timer,\n  MouseEvent,\n  KeyboardEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, update } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getWindow(element), resizeEvent, update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n\n  const trigger = target && closest(target, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.toggle();\n  }\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent<HTMLElement>) => {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options } = self;\n    /* istanbul ignore else */\n    if (\n      options.keyboard &&\n      code === keyEscape && // the keyboard option is enabled and the key is 27\n      hasClass(element, showClass)\n    ) {\n      // the modal is not visible\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nconst modalDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { currentTarget } = e;\n  const self = currentTarget ? getModalInstance(currentTarget) : null;\n\n  // this timer is needed\n  /* istanbul ignore else: must have a filter */\n  if (self && currentTarget && !Timer.get(currentTarget)) {\n    const { options, isStatic, modalDialog } = self;\n    const { backdrop } = options;\n    const { target } = e;\n\n    const selectedText = getDocument(currentTarget)?.getSelection()?.toString().length;\n    const targetInsideDialog = modalDialog.contains(target);\n    const dismiss = target && closest(target, modalDismissSelector);\n\n    /* istanbul ignore else */\n    if (isStatic && !targetInsideDialog) {\n      Timer.set(\n        currentTarget,\n        () => {\n          addClass(currentTarget, modalStaticClass);\n          emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n        },\n        17,\n      );\n    } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n      self.relatedTarget = dismiss || null;\n      self.hide();\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    /* istanbul ignore else */\n    if (modalDialog) {\n      this.modalDialog = modalDialog;\n      // modal can have multiple triggering elements\n      this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n        btn => getTargetElement(btn) === element,\n      );\n\n      // additional internals\n      this.isStatic = this.options.backdrop === 'static';\n      this.hasFade = hasClass(element, fadeClass);\n      this.relatedTarget = null;\n\n      // attach event listeners\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showModalEvent);\n      if (!showModalEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getModalInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, offcanvasComponent);\n          if (that) that.hide();\n        }\n        if (backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, hasFade, true);\n          } else {\n            toggleOverlayType(true);\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeModalShow(this), overlayDelay);\n        } else {\n          beforeModalShow(this);\n          /* istanbul ignore else */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideModalEvent);\n\n      if (!hideModalEvent.defaultPrevented) {\n        removeClass(element, showClass);\n        setAttribute(element, ariaHidden, 'true');\n        removeAttribute(element, ariaModal);\n\n        /* istanbul ignore else */\n        if (hasFade) {\n          emulateTransitionEnd(element, () => beforeModalHide(this));\n        } else {\n          beforeModalHide(this);\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener of the `Modal` instance.\n   *\n   * @param add when `true`, event listener(s) is/are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler));\n    }\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, modalDialog } = clone;\n    // const callback = () => setTimeout(() => super.dispose(), 17);\n    const callback = () => super.dispose();\n    this._toggleEventListeners();\n\n    this.hide();\n\n    /* istanbul ignore else */\n    if (hasClass(element, 'fade')) {\n      // use transitionend callback\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n  }\n  emulateTransitionEnd(element, () => hideOffcanvasComplete(self));\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options, triggers } = self;\n    const { backdrop } = options;\n    const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n    const selection = getDocument(element).getSelection();\n\n    /* istanbul ignore else: a filter is required here */\n    if (!overlay.contains(target as HTMLElement) || backdrop !== 'static') {\n      /* istanbul ignore else */\n      if (\n        !(selection && selection.toString().length) &&\n        ((!element.contains(target as HTMLElement) &&\n          backdrop &&\n          /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n          (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n      ) {\n        self.relatedTarget =\n          offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n        self.hide();\n      }\n\n      /* istanbul ignore next */\n      if (trigger && trigger.tagName === 'A') e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (self.options.keyboard && code === keyEscape) {\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showOffcanvasEvent);\n\n      if (!showOffcanvasEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getOffcanvasInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, modalComponent);\n          if (that) that.hide();\n        }\n\n        if (options.backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, true);\n          } else {\n            toggleOverlayType();\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n        } else {\n          beforeOffcanvasShow(this);\n          /* istanbul ignore next - this test was done on Modal */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n    // let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) {\n      hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideOffcanvasEvent);\n      if (!hideOffcanvasEvent.defaultPrevented) {\n        addClass(element, offcanvasTogglingClass);\n        removeClass(element, showClass);\n        beforeOffcanvasHide(this);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listeners.\n   *\n   * @param self the `Offcanvas` instance\n   * @param add when *true*, listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    this.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler));\n  };\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, options } = clone;\n    const delay = options.backdrop ? getElementTransitionDuration(overlay) : /* istanbul ignore next */ 0;\n    const callback = () => setTimeout(() => super.dispose(), delay + 17);\n    this._toggleEventListeners();\n\n    this.hide();\n    if (hasClass(element, showClass)) {\n      emulateTransitionEnd(element, callback);\n      /* istanbul ignore next */\n    } else {\n      callback();\n    }\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  toLowerCase,\n  createCustomEvent,\n  dispatchEvent,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\nimport type { TooltipEvent } from '../interface/tooltip';\nimport type { PopoverEvent } from '../interface/popover';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n\n  /* istanbul ignore else */\n  if (tooltip) {\n    const tipPositions = { ...tipClassPositions };\n    const RTL = isRTL(element);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      // top: '0px', left: '0px', right: '', bottom: '',\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    const isPopover = self.name === popoverComponent;\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n    const parentPosition = getElementStyle(container as HTMLElement, 'position');\n    const fixedParent = parentPosition === 'fixed';\n    const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n    const leftBoundry = RTL && fixedParent ? /* istanbul ignore next */ scrollbarWidth : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = getBoundingClientRect(element, true);\n    const { x, y } = {\n      x: elemRectLeft,\n      y: elemRectTop,\n    };\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = '';\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = '';\n    let arrowTop: number | string = '';\n    let arrowLeft: number | string = '';\n    let arrowRight: number | string = '';\n\n    const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n    const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = ['left', 'right'];\n    const verticals = ['top', 'bottom'];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n    // recompute placement\n    placement = placement === 'top' && topExceed ? 'bottom' : placement;\n    placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n    placement = placement === 'left' && leftExceed ? 'right' : placement;\n    placement = placement === 'right' && rightExceed ? /* istanbul ignore next */ 'left' : placement;\n\n    // update tooltip/popover class\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n    }\n\n    // compute tooltip / popover coordinates\n    /* istanbul ignore else */\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === 'left') {\n        // LEFT\n        leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n      } else {\n        // RIGHT\n        leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = y;\n        bottomPosition = '';\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = y - tipHeight + elemHeight;\n        bottomPosition = '';\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = y - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === '' ? '' : `${bottomPosition}px`,\n      left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== '' ? `${rightPosition}px` : '',\n    });\n\n    // update arrow placement\n    /* istanbul ignore else */\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== '') {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== '') {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== '') {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`updated.bs.${toLowerCase(self.name)}`);\n    dispatchEvent(element, updatedTooltipEvent);\n  }\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","import { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: HTMLElement, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore else */\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    : /* istanbul ignore next */ undefined;\n\n  const { tooltip } = self;\n  /* istanbul ignore else */\n  if (tooltip) {\n    // set id and role attributes\n    setAttribute(tooltip, 'id', id);\n    setAttribute(tooltip, 'role', tooltipString);\n\n    const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n    const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n    const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n    // set arrow and enable access for styleTip\n    self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n    const { arrow } = self;\n\n    if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n    else {\n      const tempTitle = createElement('div') as HTMLElement;\n      setHtml(tempTitle, title, sanitizeFn);\n      titleParts = [...[...tempTitle.childNodes]];\n    }\n\n    if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n    else {\n      const tempContent = createElement('div') as HTMLElement;\n      setHtml(tempContent, content, sanitizeFn);\n      contentParts = [...[...tempContent.childNodes]];\n    }\n\n    // set dismissible button\n    if (dismissible) {\n      if (title) {\n        if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          titleParts = [...titleParts, tempBtn.firstChild as Node];\n        }\n      } else {\n        /* istanbul ignore else */\n        if (tooltipHeader) tooltipHeader.remove();\n        if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          contentParts = [...contentParts, tempBtn.firstChild as Node];\n        }\n      }\n    }\n\n    // fill the template with content from options / data attributes\n    // also sanitize title && content\n    /* istanbul ignore else */\n    if (!isTooltip) {\n      /* istanbul ignore else */\n      if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n      /* istanbul ignore else */\n      if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n      // set btn\n      self.btn = querySelector('.btn-close', tooltip) || undefined;\n    } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n    // Bootstrap 5.2.x\n    // addClass(tooltip, 'position-absolute');\n    addClass(tooltip, 'position-fixed');\n    addClass(arrow, 'position-absolute');\n\n    // set popover animation and placement\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n    /* istanbul ignore else */\n    if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n    /* istanbul ignore else */\n    if (customClass && !hasClass(tooltip, customClass)) {\n      addClass(tooltip, customClass);\n    }\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n  }\n};\n\nexport default createTip;\n","import { getDocument, isShadowRoot, isTableElement, getParentNode, getElementStyle } from '@thednp/shorty';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = ['HTML', 'BODY'];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, 'position') !== 'relative' &&\n        containers.slice(i + 1).every(r => getElementStyle(r as HTMLElement, 'position') === 'static')\n      ) {\n        return c;\n      }\n      return null;\n    }) || /* istanbul ignore next: optional guard */ getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementStyle,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip as HTMLElement, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container, offsetParent } = self;\n\n  return tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  self._toggleEventListeners();\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch, passiveHandler);\n\n  [scrollEvent, resizeEvent].forEach(ev => {\n    action(getWindow(element), ev, self.update, passiveHandler);\n  });\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, container, offsetParent } = self;\n  const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  const win = getWindow(element);\n  const overflow = offsetHeight !== scrollHeight;\n  const scrollTarget = container === offsetParent && overflow ? container : win;\n  action(scrollTarget, resizeEvent, self.update, passiveHandler);\n  action(scrollTarget, scrollEvent, self.update, passiveHandler);\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content || getAttribute(element, titleAtt[0]) || /* istanbul ignore next */ '',\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if (!((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      // reset default options\n      ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n      // set title attributes and add event listeners\n      /* istanbul ignore else */\n      if (hasAttribute(element, titleAttr) && isTooltip && typeof options.title === 'string') {\n        toggleTooltipTitle(this, options.title);\n      }\n\n      // set containers\n      this.container = getElementContainer(element);\n      this.offsetParent = ['sticky', 'fixed'].some(\n        position => getElementStyle(this.container as HTMLElement, 'position') === position,\n      )\n        ? (this.container as HTMLElement)\n        : getDocument(this.element).body;\n\n      // create tooltip here\n      createTip(this);\n\n      // attach events\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  handleFocus = () => focus(this.element);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, tipContainer);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            /* istanbul ignore else */\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            else tooltipShownAction(this);\n          }\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip<Tooltip>(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      this._toggleEventListeners(true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasTip(this) && animation) {\n        this.hide();\n        emulateTransitionEnd(tooltip, () => this._toggleEventListeners());\n      } else {\n        this._toggleEventListeners();\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore else */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Toggles on/off the `Tooltip` event listeners.\n   *\n   * @param add when `true`, event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    // btn is only for dismissible popover\n    const { element, options, btn } = this;\n    const { trigger } = options;\n    const isPopover = this.name !== tooltipComponent;\n    const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n    /* istanbul ignore else */\n    if (!trigger.includes('manual')) {\n      this.enabled = !!add;\n\n      const triggerOptions = trigger.split(' ');\n\n      triggerOptions.forEach(tr => {\n        /* istanbul ignore else */\n        if (tr === mousehoverEvent) {\n          action(element, mousedownEvent, this.handleShow);\n          action(element, mouseenterEvent, this.handleShow);\n\n          /* istanbul ignore else */\n          if (!dismissible) {\n            action(element, mouseleaveEvent, this.handleHide);\n            action(getDocument(element), touchstartEvent, this.handleTouch, passiveHandler);\n          }\n        } else if (tr === mouseclickEvent) {\n          action(element, tr, !dismissible ? this.toggle : this.handleShow);\n        } else if (tr === focusEvent) {\n          action(element, focusinEvent, this.handleShow);\n          /* istanbul ignore else */\n          if (!dismissible) action(element, focusoutEvent, this.handleHide);\n          /* istanbul ignore else */\n          if (isApple) {\n            action(element, mouseclickEvent, this.handleFocus);\n          }\n        }\n        /* istanbul ignore else */\n        if (dismissible && btn) {\n          action(btn, mouseclickEvent, this.handleHide);\n        }\n      });\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () => setTimeout(() => disposeTooltipComplete(clone, () => super.dispose()), 17);\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip as HTMLElement, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget ? getScrollHeight(scrollTarget) : /* istanbul ignore next */ scrollHeight;\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (this.target) {\n      // set initial state\n      this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n      this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n      // add event handlers\n      this._toggleEventListeners(true);\n\n      this.refresh();\n    }\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore else */\n    if (isHTMLElement(target) && target.offsetHeight > 0) {\n      updateSpyTargets(this);\n\n      const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n      if (scrollTop >= maxScroll) {\n        const newActiveItem = items[itemsLength - 1];\n\n        /* istanbul ignore else */\n        if (activeItem !== newActiveItem) {\n          activate(this, newActiveItem);\n        }\n        return;\n      }\n\n      const { offsets } = this;\n\n      if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n        this.activeItem = null;\n        if (target) clear(target);\n        return;\n      }\n\n      items.forEach((item, i) => {\n        if (\n          activeItem !== item &&\n          scrollTop >= offsets[i] &&\n          (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n        ) {\n          activate(this, item);\n        }\n      });\n    }\n  };\n\n  /**\n   * Toggles on/off the component event listener.\n   *\n   * @param add when `true`, listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.scrollTarget as EventTarget, scrollEvent, this.refresh, passiveHandler);\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || /* istanbul ignore next */ {\n      currentHeight: 0,\n      nextHeight: 0,\n    };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n\n  if (!showTabEvent.defaultPrevented) {\n    if (nextContent) addClass(nextContent, activeClass);\n    if (content) removeClass(content, activeClass);\n\n    /* istanbul ignore else */\n    if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n      const nextHeight = nextContent.scrollHeight;\n      tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n      addClass(tabContent, collapsingClass);\n      tabContent.style.height = `${currentHeight}px`;\n      reflow(tabContent);\n      [content, nextContent].forEach(c => {\n        if (c) removeClass(c, 'overflow-hidden');\n      });\n    }\n\n    if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n      setTimeout(() => {\n        addClass(nextContent, showClass);\n        emulateTransitionEnd(nextContent, () => {\n          triggerTabShow(self);\n        });\n      }, 1);\n    } else {\n      if (nextContent) addClass(nextContent, showClass);\n      triggerTabShow(self);\n    }\n\n    if (tab) dispatchEvent(tab, hiddenTabEvent);\n  }\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  /* istanbul ignore next */\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.preventDefault();\n    self.show();\n  }\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    /* istanbul ignore else */\n    if (content) {\n      const nav = closest(element, '.nav');\n      const container = closest(content, '.tab-content');\n\n      this.nav = nav;\n      this.content = content;\n      this.tabContent = container;\n\n      // event targets\n      this.dropdown = getParentDropdown(element);\n\n      // show first Tab instance of none is shown\n      // suggested on #432\n      const { tab } = getActiveTab(this);\n      if (nav && !tab) {\n        const firstTab = querySelector(tabSelector, nav);\n        const firstTabContent = firstTab && getTargetElement(firstTab);\n\n        /* istanbul ignore else */\n        if (firstTabContent) {\n          addClass(firstTab, activeClass);\n          addClass(firstTabContent, showClass);\n          addClass(firstTabContent, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n        }\n      }\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      /* istanbul ignore else */\n      if (isHTMLElement(tab)) {\n        dispatchEvent(tab as EventTarget, hideTabEvent);\n        /* istanbul ignore else */\n        if (!hideTabEvent.defaultPrevented) {\n          addClass(element, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n\n          const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n          if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n            removeClass(activeDropdown, activeClass);\n          }\n\n          /* istanbul ignore else */\n          if (nav) {\n            const toggleTab = () => {\n              if (tab) {\n                removeClass(tab, activeClass);\n                setAttribute(tab, ariaSelected, 'false');\n              }\n              if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n            };\n\n            if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n              Timer.set(nav, toggleTab, 1);\n            } else toggleTab();\n          }\n\n          if (content) {\n            removeClass(content, showClass);\n            if (hasClass(content, fadeClass)) {\n              emulateTransitionEnd(content, () => triggerTabHide(this));\n            } else {\n              triggerTabHide(this);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, tabClickHandler);\n  };\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  self._toggleEventListeners();\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.show();\n  }\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore else: a solid filter is required */\n  if (self && element !== relatedTarget && !element.contains(relatedTarget as Node)) {\n    if ([mouseenterEvent, focusinEvent].includes(type)) {\n      Timer.clear(element, toastString);\n    } else {\n      Timer.set(element, () => self.hide(), self.options.delay, toastString);\n    }\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (!showToastEvent.defaultPrevented) {\n        showToast(this);\n      }\n    }\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (!hideToastEvent.defaultPrevented) {\n        hideToast(this);\n      }\n    }\n  };\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, it will add the listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { element, triggers, dismiss, options, hide } = this;\n\n    /* istanbul ignore else */\n    if (dismiss) {\n      action(dismiss, mouseclickEvent, hide);\n    }\n\n    /* istanbul ignore else */\n    if (options.autohide) {\n      [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n        action(element, e, interactiveToastHandler),\n      );\n    }\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\n[Alert, Button, Carousel, Collapse, Dropdown, Modal, Offcanvas, Popover, ScrollSpy, Tab, Toast, Tooltip].forEach(c =>\n  componentsList.set(c.prototype.name, c),\n);\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  componentsList.forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach(comp => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n"],"names":["fe","ge","Ee","ye","we","Ae","P","$","_","tt","st","rt","it","lt","pt","mt","ft","St","kt","Mt","Ct","zt","Vt","Ce","Re","Qe","je","qe","$e","Rt","Qt","C","U","jt","A","qt","S","z","x","vn","N","Gt","e","n","o","s","Jt","Kt","r","Xt","Yt","kn","Tn","Cn","Ln","In","zn","v","i","u","E","L","Hn","k","W","R","d","M","Zt","Q","g","ee","ne","Un","a","l","Qn","V","w","oe","jn","p","c","m","y","j","Gn","Xn","Yn","Zn","$n","I","se","f","_n","h","eo","T","ce","so","B","H","b","ae","ro","ie","uo","mo","ho","yo","Ao","le","So","de","Mo","To","Do","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","version","BaseComponent","target","config","__publicField","element","querySelector","isString","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","self","dispatchEvent","hasClass","removeClass","emulateTransitionEnd","add","action","addListener","removeListener","dismiss","close","mouseclickEvent","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","isActive","getAttribute","addClass","setAttribute","ariaPressed","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","closest","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","keyArrowRight","keyArrowLeft","carouselDragHandler","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","_a","activateCarouselIndicator","pointermoveEvent","passiveHandler","pointerupEvent","isHTMLElement","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","touchstartEvent","dragstartEvent","arrow","indicator","keydownEvent","getElementsByClassName","activeIndex","transitionItem","matches","ar","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","isAnimating","clone","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","getCurrentOpenDropdown","currentParent","type","isForm","mousedownEvent","dropdownClickHandler","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","pad","padStyle","toggleModalDismiss","update","modalDismissHandler","modalKeyHandler","afterModalHide","relatedTarget","focusElement","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","modalClickHandler","_b","currentTarget","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","that","callback","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offcanvasTriggerHandler","offCanvasDismiss","selection","visibleTrigger","delay","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","toLowerCase","tooltipDefaults","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","isFunction","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","offsetParent","ariaDescribedBy","hasTip","disposeTooltipComplete","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","toggleTooltipOpenHandlers","offsetHeight","parentModal","parentOffcanvas","win","scrollTarget","titleAtt","tr","mousehoverEvent","focusinEvent","focusoutEvent","isApple","tipComponent","elem","getUID","position","outTimer","tipContainer","showTooltipEvent","hideTooltipEvent","enabled","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","itemsLength","isWin","isWindow","links","getElementsByTagName","scrollHEIGHT","getScrollHeight","href","targetItem","rect","getOffsetHeight","link","clear","item","activate","parents","parentItem","menuItem","parentLink","scrollTop","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","completeDisposeToast","toastClickHandler","interactiveToastHandler","isShown","hide","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","cs","init","selector","removeDataAPI","comp"],"mappings":";;;AAAK,MAA+CA,KAAK,oBAAoBC,KAAK,iBAAuCC,KAAK,eAA0DC,KAAK,cAAcC,KAAK,gBAAgBC,KAAK,iBAAwLC,KAAI,oBAAuDC,KAAI,SAASC,KAAI,WAAWC,KAAK,YAA0EC,KAAK,WAA4BC,KAAK,SAAsBC,IAAK,SAA0BC,KAAK,aAA6BC,KAAK,SAASC,KAAK,cAAcC,KAAK,cAAmKC,KAAK,eAAoCC,KAAK,eAAeC,KAAK,aAAoDC,KAAK,UAA+DC,KAAK,UAAyBC,KAAK,cAmDtlCC,KAAK,aAoDNC,KAAK,aAAaC,KAAK,WAAWC,KAAK,aAAaC,KAAK,cAAkHC,KAAK,UAAyMC,KAAK,sBAAsBC,KAAK,mBAAmBC,KAAI,iBAAiBC,KAAI,sBA0B9WC,KAAK,UAAU,eAAeC,KAAID,IAAI,EAAE,WAAWE,GAAE,IAAK,WAAWC,KAAID,IAAIE,KAAI;AAEvLH,KAAQA,GAAE,OAAO,KAAK,CAAC,MAAMG,GAAE,KAAK,EAAE,KAAK,CAAC,IAAQA,GAAE,KAAKD,EAAC;AACvD,MAASE,KAAI,sBAAsBC,KAAKL,KAAIA,GAAE,OAAO,KAAK,CAAC,MAAMI,GAAE,KAAK,EAAE,KAAK,CAAC;AAAA;AAAA,EAEnFA,GAAE,KAAKF,EAAC;AAAA;AACFA,MAAIA,GAAE,SAAS,SAAS;AAG7B,MAAA,EAAE,MAAMI,OAAM;AAAe,CAAC,qBAAqB,aAAa,EAAE,KAAK,CAAC,MAAM,KAAKA,GAAE,KAAK;AAAG,MAAAC,KAAK,CAAC,GAAGC,GAAGC,GAAGC,MAAM;AACnH,QAAMC,IAAID,KAAK;AACf,IAAE,iBAAiBF,GAAGC,GAAGE,CAAC;AAC5B,GAAGC,KAAK,CAAC,GAAGJ,GAAGC,GAAGC,MAAM;AACtB,QAAMC,IAAID,KAAK;AACf,IAAE,oBAAoBF,GAAGC,GAAGE,CAAC;AAC/B,GAAGE,KAAK,CAAC,GAAGL,GAAGC,GAAGC,MAAM;AACtB,QAAMC,IAAI,CAACG,MAAM;AACf,KAACA,EAAE,WAAW,KAAKA,EAAE,kBAAkB,OAAOL,EAAE,MAAM,GAAG,CAACK,CAAC,CAAC,GAAGF,GAAG,GAAGJ,GAAGG,GAAGD,CAAC;AAAA,EAChF;AACE,EAAAH,GAAG,GAAGC,GAAGG,GAAGD,CAAC;AACf,GAAGK,KAAK,MAAM;AACd;AAAA,CAAS,MAAM;AACb,MAAI,IAAI;AACR,MAAI;AACF,UAAMP,IAAI,OAAO,eAAe,CAAA,GAAI,WAAW;AAAA,MAC7C,KAAK,OAAO,IAAI,IAAI;AAAA,IAC1B,CAAK;AACD,IAAAK,GAAG,UAAUzC,IAAG2C,IAAIP,CAAC;AAAA,EACzB,QAAU;AAAA,EACP;AACD,SAAO;AACT,GAAI;AAAO,CAAC,mBAAmB,WAAW,EAAE,KAAK,CAAC,MAAM,KAAKF,GAAE,KAAK;AAC9B,CAAC,mBAAmB,WAAW,EAAE,KAAK,CAAC,MAAM,KAAKA,GAAE,KAAK;AAAQ,CAAC,oBAAoB,YAAY,EAAE,KAAK,CAAC,MAAM,KAAKA,GAAE,KAAK;AAAE,MAACU,KAAK,CAAC,GAAGR,MAAM,EAAE,aAAaA,CAAC,GAA6CS,KAAK,CAAC,GAAGT,MAAM,EAAE,aAAaA,CAAC,GAA6CU,IAAK,CAAC,GAAGV,GAAGC,MAAM,EAAE,aAAaD,GAAGC,CAAC,GAAmDU,KAAK,CAAC,GAAGX,MAAM,EAAE,gBAAgBA,CAAC,GAAgDY,IAAK,CAAC,MAAMZ,MAAM;AACvf,IAAE,UAAU,IAAI,GAAGA,CAAC;AACtB,GAAGa,IAAK,CAAC,MAAMb,MAAM;AACnB,IAAE,UAAU,OAAO,GAAGA,CAAC;AACzB,GAAGc,IAAK,CAAC,GAAGd,MAAM,EAAE,UAAU,SAASA,CAAC,GAA2Fe,KAAI,CAAC,MAAM,KAAK,QAAQ,OAAO,KAAK,YAAY,IAAIC,IAAI,CAAC,MAAMD,GAAE,CAAC,KAAK,OAAO,EAAE,YAAY,YAAY,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE,KAAK,CAACf,MAAM,EAAE,aAAaA,CAAC,KAAK,IAAIiB,IAAI,CAAC,MAAMD,EAAE,CAAC,KAAK,EAAE,aAAa,KAAK,IAAIE,KAAoB,oBAAI,IAAK,GAAEC,KAAI;AAAA,EAChY,MAAMD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAQN,KAAK,CAAC,GAAGlB,GAAGC,MAAM;AAChB,IAAKgB,EAAE,CAAC,MAERC,GAAE,IAAIlB,CAAC,KAAKkB,GAAE,IAAIlB,GAAmB,oBAAI,IAAK,CAAA,GAAGkB,GAAE,IAAIlB,CAAC,EAAE,IAAI,GAAGC,CAAC;AAAA,EACnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,WAAW,CAAC,MAAMiB,GAAE,IAAI,CAAC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ9B,KAAK,CAAC,GAAGlB,MAAM;AACb,QAAI,CAACiB,EAAE,CAAC,KAAK,CAACjB;AACZ,aAAO;AACT,UAAMC,IAAIkB,GAAE,UAAUnB,CAAC;AACvB,WAAO,KAAKC,KAAKA,EAAE,IAAI,CAAC,KAAK;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,QAAQ,CAAC,GAAGD,MAAM;AAChB,UAAMC,IAAIkB,GAAE,UAAUnB,CAAC;AACvB,KAACC,KAAK,CAACgB,EAAE,CAAC,MAAMhB,EAAE,OAAO,CAAC,GAAGA,EAAE,SAAS,KAAKiB,GAAE,OAAOlB,CAAC;AAAA,EACxD;AACH,GAAGoB,IAAK,CAAC,GAAGpB,MAAMmB,GAAE,IAAI,GAAGnB,CAAC,GAAGqB,KAAI,CAAC,MAAM,OAAO,KAAK,YAAY,IAAIC,KAAI,CAAC,MAAMP,GAAE,CAAC,KAAK,EAAE,YAAY,SAAS,YAAY,IAAIQ,KAAI,CAAC,MAAMP,EAAE,CAAC,KAAK,EAAE,aAAa,KAAK,IAAIQ,IAAI,CAAC,MAAMF,GAAE,CAAC,IAAI,EAAE,WAAWC,GAAE,CAAC,IAAI,IAAIP,EAAE,CAAC,IAAI,EAAE,gBAAgB,OAAO,UAAUS,KAAI,CAAC,MAAMzB,MAAM,OAAO,OAAO,GAAG,GAAGA,CAAC,GAAG0B,KAAK,CAAC,MAAM;AAClT,MAAI,CAAC;AACH;AACF,MAAIL,GAAE,CAAC;AACL,WAAOG,EAAG,EAAC,cAAc,CAAC;AAC5B,QAAM,EAAE,SAASxB,EAAG,IAAG,GAAGC,IAAIyB,GAAG1B,CAAC;AAClC,MAAI,CAACC;AACH;AACF,QAAMC,IAAI,EAAE,GAAG;AACf,SAAO,OAAOA,EAAE,SAASuB,GAAExB,GAAGC,CAAC;AACjC,GAUGyB,IAAI,CAAC,GAAG3B,MAAM,EAAE,cAAcA,CAAC,GAAyC4B,IAAI,CAAC,GAAG5B,MAAM;AACvF,QAAMC,IAAI,iBAAiB,CAAC,GAAGC,IAAIF,EAAE,QAAQ,UAAU,QAAQ,EAAE,QAAQ,YAAY,KAAK,EAAE,YAAW;AACvG,SAAOC,EAAE,iBAAiBC,CAAC;AAC7B,GA8BG2B,KAAK,CAAC,MAAM;AACb,QAAM7B,IAAI4B,EAAE,GAAGtC,EAAC,GAAGW,IAAI2B,EAAE,GAAGxC,EAAE,GAAGc,IAAID,EAAE,SAAS,IAAI;AAAA;AAAA,IAElD;AAAA,MACE,KAAKE,IAAIH,KAAKA,MAAM,SAAS,WAAWC,CAAC,IAAIC;AAAA;AAAA,IAE/C;AAAA;AAEF,SAAO,OAAO,MAAMC,CAAC;AAAA;AAAA,IAEnB;AAAA,MACEA;AACN,GAAG2B,KAAK,CAAC,MAAM;AACb,QAAM9B,IAAI4B,EAAE,GAAGtC,EAAC,GAAGW,IAAI2B,EAAE,GAAGzC,EAAE,GAAGe,IAAID,EAAE,SAAS,IAAI;AAAA;AAAA,IAElD;AAAA,MACE,KAAKE,IAAIH,KAAKA,MAAM,SAAS,WAAWC,CAAC,IAAIC;AAAA;AAAA,IAE/C;AAAA;AAEF,SAAO,OAAO,MAAMC,CAAC;AAAA;AAAA,IAEnB;AAAA,MACEA;AACN,GAAG4B,IAAK,CAAC,GAAG/B,MAAM;AAChB,MAAIC,IAAI;AACR,QAAMC,IAAI,IAAI,MAAMb,EAAC,GAAGc,IAAI2B,GAAG,CAAC,GAAGxB,IAAIuB,GAAG,CAAC;AAC3C,MAAI1B,GAAG;AACL,UAAM6B,IAAI,CAACC,MAAM;AACf,MAAAA,EAAE,WAAW,MAAMjC,EAAE,MAAM,GAAG,CAACiC,CAAC,CAAC,GAAG,EAAE,oBAAoB5C,IAAG2C,CAAC,GAAG/B,IAAI;AAAA,IAC3E;AACI,MAAE,iBAAiBZ,IAAG2C,CAAC,GAAG,WAAW,MAAM;AACzC,MAAA/B,KAAK0B,EAAE,GAAGzB,CAAC;AAAA,IACjB,GAAOC,IAAIG,IAAI,EAAE;AAAA,EACd;AACC,IAAAN,EAAE,MAAM,GAAG,CAACE,CAAC,CAAC;AAClB,GAA+FgC,KAAK,CAAC,GAAGlC,MAAM,EAAE,MAAMA,CAAC,GAAGmC,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,IAAI,KAAK,CAAC,SAAS,EAAE,EAAE,SAAS,CAAC,IAAI,KAAK,CAAC,QAAQ,IAAI,MAAM,MAAM,EAAE,SAAS,CAAC,IAAI,OAAO,MAAM,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,GAAGC,KAAI,CAAC,MAAM,OAAO,QAAQ,CAAC,GAAGC,KAAK,CAAC,MAAM,EAAE,YAAW,GAAIC,KAAK,CAAC,GAAGtC,GAAGC,GAAGC,MAAM;AAC5W,QAAMC,IAAI,EAAE,GAAGF,EAAG,GAAEK,IAAI,EAAE,GAAG,EAAE,QAAS,GAAE0B,IAAI,EAAE,GAAGhC,EAAG,GAAEiC,IAAI,CAAE,GAAEM,IAAI;AACpE,SAAOH,GAAE9B,CAAC,EAAE,QAAQ,CAAC,CAACkC,GAAGC,CAAC,MAAM;AAC9B,UAAMC,IAAIxC,KAAK,OAAOsC,KAAK,YAAYA,EAAE,SAAStC,CAAC,IAAIsC,EAAE,QAAQtC,GAAG,EAAE,EAAE,QAAQ,UAAU,CAACyC,MAAMN,GAAGM,CAAC,CAAC,IAAIH;AAC1G,IAAAP,EAAES,CAAC,IAAIP,GAAEM,CAAC;AAAA,EACd,CAAG,GAAGL,GAAEjC,CAAC,EAAE,QAAQ,CAAC,CAACqC,GAAGC,CAAC,MAAM;AAC3B,IAAAtC,EAAEqC,CAAC,IAAIL,GAAEM,CAAC;AAAA,EACd,CAAG,GAAGL,GAAEpC,CAAC,EAAE,QAAQ,CAAC,CAACwC,GAAGC,CAAC,MAAM;AAC3B,IAAAD,KAAKrC,IAAI6B,EAAEQ,CAAC,IAAIrC,EAAEqC,CAAC,IAAIA,KAAKP,IAAID,EAAEQ,CAAC,IAAIP,EAAEO,CAAC,IAAIR,EAAEQ,CAAC,IAAIA,MAAMD,IAAI/B,GAAG,GAAG+B,CAAC,IAAIE;AAAA,EAC3E,CAAA,GAAGT;AACN,GAA2DY,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,GAAoEC,IAAK,CAAC,GAAG7C,MAAM;AACrK,QAAMC,IAAI,IAAI,YAAY,GAAG;AAAA,IAC3B,YAAY;AAAA,IACZ,SAAS;AAAA,EACb,CAAG;AACD,SAAOc,GAAEf,CAAC,KAAKyB,GAAExB,GAAGD,CAAC,GAAGC;AAC1B,GAAG6C,KAAK,EAAE,SAAS,GAAE,GAAIC,KAAK,CAAC,MAAM,EAAE,cAAcC,IAAK,CAAC,GAAGhD,MAAM;AAClE,EAAAoC,GAAEpC,CAAC,EAAE,QAAQ,CAAC,CAACC,GAAGC,CAAC,MAAM;AACvB,QAAIA,KAAKmB,GAAEpB,CAAC,KAAKA,EAAE,SAAS,IAAI;AAC9B,QAAE,MAAM,YAAYA,GAAGC,CAAC;AAAA,SACrB;AACH,YAAMC,IAAI,CAAA;AACV,MAAAA,EAAEF,CAAC,IAAIC,GAAGuB,GAAE,EAAE,OAAOtB,CAAC;AAAA,IACvB;AAAA,EACL,CAAG;AACH,GAAG8C,KAAI,CAAC,MAAMlC,GAAE,CAAC,KAAK,EAAE,YAAY,SAAS,SAAS,IAAImC,KAAK,CAAC,MAAM,OAAO,KAAK,YAAY,IAAIC,KAAoB,oBAAI,IAAK,GAAEC,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASpI,KAAK,CAAC,GAAGpD,GAAGC,GAAGC,MAAM;AACnB,IAAAe,EAAE,CAAC,MAAMf,KAAKA,EAAE,UAAUiD,GAAE,IAAI,CAAC,KAAKA,GAAE,IAAI,GAAmB,oBAAI,IAAK,CAAA,GAAGA,GAAE,IAAI,CAAC,EAAE,IAAIjD,GAAG,WAAWF,GAAGC,CAAC,CAAC,KAAKkD,GAAE,IAAI,GAAG,WAAWnD,GAAGC,CAAC,CAAC;AAAA,EAC1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQD,KAAK,CAAC,GAAGD,MAAM;AACb,QAAI,CAACiB,EAAE,CAAC;AACN,aAAO;AACT,UAAMhB,IAAIkD,GAAE,IAAI,CAAC;AACjB,WAAOnD,KAAKC,KAAKgD,GAAEhD,CAAC,IAAIA,EAAE,IAAID,CAAC;AAAA,IAC/B,OAAOkD,GAAGjD,CAAC,IAAIA,IAAI;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,OAAO,CAAC,GAAGD,MAAM;AACf,QAAI,CAACiB,EAAE,CAAC;AACN;AACF,UAAMhB,IAAIkD,GAAE,IAAI,CAAC;AACjB,IAAAnD,KAAKA,EAAE,UAAUiD,GAAEhD,CAAC,KAAK,aAAaA,EAAE,IAAID,CAAC,CAAC,GAAGC,EAAE,OAAOD,CAAC,GAAGC,EAAE,SAAS,KAAKkD,GAAE,OAAO,CAAC,MAAM,aAAalD,CAAC,GAAGkD,GAAE,OAAO,CAAC;AAAA,EAC1H;AACH,GAAgCE,KAAI,CAAC,GAAGrD,MAAM;AAC5C,QAAM,EAAE,OAAOC,GAAG,QAAQC,GAAG,KAAKC,GAAG,OAAOG,GAAG,QAAQ0B,GAAG,MAAMC,EAAC,IAAK,EAAE;AACxE,MAAIM,IAAI,GAAGC,IAAI;AACf,MAAIxC,KAAKiB,EAAE,CAAC,GAAG;AACb,UAAM,EAAE,aAAawB,GAAG,cAAcC,EAAC,IAAK;AAC5C,IAAAH,IAAIE,IAAI,IAAI,KAAK,MAAMxC,CAAC,IAAIwC;AAAA;AAAA,MAE1B;AAAA,OACCD,IAAIE,IAAI,IAAI,KAAK,MAAMxC,CAAC,IAAIwC;AAAA;AAAA,MAE7B;AAAA;AAAA,EAEH;AACD,SAAO;AAAA,IACL,OAAOzC,IAAIsC;AAAA,IACX,QAAQrC,IAAIsC;AAAA,IACZ,KAAKrC,IAAIqC;AAAA,IACT,OAAOlC,IAAIiC;AAAA,IACX,QAAQP,IAAIQ;AAAA,IACZ,MAAMP,IAAIM;AAAA,IACV,GAAGN,IAAIM;AAAA,IACP,GAAGpC,IAAIqC;AAAA,EACX;AACA,GAAGc,KAAK,CAAC,MAAM9B,EAAE,CAAC,EAAE,MAAM+B,KAAI,CAAC,MAAM/B,EAAE,CAAC,EAAE,iBAGvCgC,KAAK,CAAC,MAAMxC,EAAE,CAAC,KAAK,EAAE,YAAY,SAAS,gBAAgB,IAAIyC,KAAK,CAAC,MAAM,EAAE,aAAa,SAAS,IAAIxC,EAAE,CAAC,KAAK,EAAE;AACpHD,EAAE,CAAC,KAAK,EAAE;AACVwC,GAAG,CAAC,KAAK,EAAE;AACXD,GAAE,CAAC;AAkBH,IAAIG,KAAI,GAAGC,KAAI;AACV,MAACC,KAAoB,oBAAI,IAAK,GAAEC,KAAK,CAAC,GAAG7D,MAAM;AAClD,MAAIC,IAAID,IAAI0D,KAAIC;AAChB,MAAI3D,GAAG;AACL,UAAME,IAAI2D,GAAG,CAAC,GAAG1D,IAAIyD,GAAE,IAAI1D,CAAC,KAAqB,oBAAI;AACrD,IAAA0D,GAAE,IAAI1D,CAAC,KAAK0D,GAAE,IAAI1D,GAAGC,CAAC,GAAG8C,GAAE9C,CAAC,KAAK,CAACA,EAAE,IAAIH,CAAC,KAAKG,EAAE,IAAIH,GAAGC,CAAC,GAAGyD,MAAK,KAAKzD,IAAIE,EAAE,IAAIH,CAAC;AAAA,EACpF,OAAS;AACL,UAAME,IAAI,EAAE,MAAM;AAClB,IAAA0D,GAAE,IAAI1D,CAAC,IAAID,IAAI2D,GAAE,IAAI1D,CAAC,KAAK0D,GAAE,IAAI1D,GAAGD,CAAC,GAAG0D,MAAK;AAAA,EAC9C;AACD,SAAO1D;AACT,GAAG6D,KAAK,CAAC,MAAM;AACb,MAAI9D;AACJ,SAAO,IAAIuB,GAAE,CAAC,IAAI,EAAE,cAAcP,EAAE,CAAC,KAAKhB,IAAI,KAAK,OAAO,SAAS,EAAE,kBAAkB,OAAO,SAASA,EAAE,cAAc,IAAI;AAC7H,GAAG+D,KAAK,CAAC,MAAM,MAAM,QAAQ,CAAC,KAAK,IAAmLC,KAAK,CAAC,MAAM;AAChO,MAAI,CAAChD,EAAE,CAAC;AACN,WAAO;AACT,QAAM,EAAE,KAAKhB,GAAG,QAAQC,EAAG,IAAGoD,GAAE,CAAC,GAAG,EAAE,cAAcnD,EAAG,IAAGqD,GAAE,CAAC;AAC7D,SAAOvD,KAAKE,KAAKD,KAAK;AACxB,GAK0CgE,KAAK,CAAC,MAAM,OAAO,KAAK,cAAc,IAS0FC,KAAK,CAAC,MAAMnD,GAAE,CAAC,KAAK,EAAE,YAAY,SAAS,cAAc,IAAIoD,KAAK,CAAC,MAAMZ,GAAE,CAAC,EAAE,QAAQ,OAAqEa,KAAK,CAAC,MAAMpD,EAAE,CAAC,KAAK,CAAC,SAAS,MAAM,IAAI,EAAE,SAAS,EAAE,QAAQ,KAAK,IAAIqD,IAAK,CAAC,GAAGrE,MAAM,IAAI,EAAE,QAAQA,CAAC;AACzaqE,EAAG,EAAE,YAAW,EAAG,MAAMrE,CAAC,IAAI,MAAMsE,IAAK,CAAC,GAAGtE,MAAMiB,EAAE,CAAC,IAAI,KAAKD,EAAEhB,CAAC,IAAIA,IAAIwB,EAAG,GAAE,cAAc,CAAC,GAAG+C,KAAK,CAAC,GAAGvE,OAAOgB,EAAEhB,CAAC,IAAIA,IAAIwB,EAAG,GAAE,qBAAqB,CAAC,GAA0FgD,KAAK,CAAC,GAAGxE,OAAOgB,EAAEhB,CAAC,IAAIA,IAAIwB,KAAK,iBAAiB,CAAC,GAAGiD,KAAK,CAAC,GAAGzE,OAAOA,KAAKgB,EAAEhB,CAAC,IAAIA,IAAIwB,EAAG,GAAE;AAAA,EACzU;AACF,GAAGkD,KAAK,CAAC,GAAG1E,MAAM,EAAE,QAAQA,CAAC,GC5bvBA,KAAI,CAAE,GAAEmD,KAAI,CAAC,MAAM;AACvB,QAAM,EAAE,MAAMX,GAAG,eAAexB,EAAC,IAAK;AACtC,GAAC,GAAGhB,GAAEwC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAGrC,CAAC,MAAM;AAC5B,IAAAa,MAAM,KAAK,CAAC,GAAGb,CAAC,EAAE,QAAQ,CAAC,CAACD,GAAG8B,CAAC,MAAM;AACpC,MAAA9B,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO8B,KAAK,YAAYA,EAAE,QAAQ1B,EAAE,GAAGkC,GAAGtC,GAAG8B,CAAC;AAAA,IACrE,CAAK;AAAA,EACL,CAAG;AACH,GAAGd,IAAI,CAAC,GAAGsB,GAAGxB,GAAG,MAAM;AACrB,EAAAhB,GAAEwC,CAAC,MAAMxC,GAAEwC,CAAC,IAAoB,oBAAI,IAAG;AACvC,QAAMrC,IAAIH,GAAEwC,CAAC;AACb,EAAArC,EAAE,IAAI,CAAC,KAAKA,EAAE,IAAI,GAAmB,oBAAI,IAAG,CAAE;AAC9C,QAAMD,IAAIC,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM6B,EAAG,IAAG9B;AAClC,EAAAA,EAAE,IAAIc,GAAG,CAAC,GAAGgB,KAAK,EAAE,iBAAiBQ,GAAGW,IAAG,CAAC;AAC9C,GAAG7C,IAAI,CAAC,GAAGkC,GAAGxB,GAAG,MAAM;AACrB,QAAMb,IAAIH,GAAEwC,CAAC,GAAGtC,IAAIC,KAAKA,EAAE,IAAI,CAAC,GAAG6B,IAAI9B,KAAKA,EAAE,IAAIc,CAAC,GAAGQ,IAAIQ,MAAM,SAASA,IAAI;AAC7E,EAAA9B,KAAKA,EAAE,IAAIc,CAAC,KAAKd,EAAE,OAAOc,CAAC,GAAGb,MAAM,CAACD,KAAK,CAACA,EAAE,SAASC,EAAE,OAAO,CAAC,IAAI,CAACA,KAAK,CAACA,EAAE,SAAS,OAAOH,GAAEwC,CAAC,IAAI,CAACtC,KAAK,CAACA,EAAE,SAAS,EAAE;AAAA,IACtHsC;AAAA,IACAW;AAAA,IACA3B;AAAA,EACJ;AACA,GCjBMmD,IAAY,QCAZC,IAAY,QCAZC,KAAgB,mBCFhBC,KAAc,SCAdC,KAAiB,wBCCjBC,KAAUC;ACMhB,MAAqBC,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAQjC,YAAYC,GAA8BC,GAAsB;AA4ChE;AAAA,IAAAC,EAAA,+BAAwB,MAAM;AAAA,IAAA;AA3CtB,UAAAC,IAAUC,EAAcJ,CAAM;AAEpC,QAAI,CAACG;AACC,YAAAE,GAASL,CAAM,IACX,MAAM,GAAG,KAAK,IAAI,YAAYA,CAAM,4BAA4B,IAEhE,MAAM,GAAG,KAAK,IAAI,wDAAwD;AAIpF,UAAMM,IAAeC,GAAK,IAAiBJ,GAAS,KAAK,IAAI;AAE7D,IAAIG,KAGFA,EAAa,sBAAsB,GAGrC,KAAK,UAAUH,GACf,KAAK,UACH,KAAK,YAAYK,GAAW,KAAK,QAAQ,EAAE,SACvCC,GAAiBN,GAAS,KAAK,UAAUF,KAAU,IAAI,IAAI,IAC3D,IAENM,GAAK,IAAIJ,GAAS,KAAK,MAAM,IAAI;AAAA,EACnC;AAAA;AAAA,EAGA,IAAI,UAAU;AACL,WAAAN;AAAA,EACT;AAAA;AAAA,EAGA,IAAI,OAAO;AACF,WAAA;AAAA,EACT;AAAA;AAAA,EAGA,IAAI,WAAW;AACb,WAAO;EACT;AAAA;AAAA,EAQA,UAAU;AACRU,IAAAA,GAAK,OAAoB,KAAK,SAAS,KAAK,IAAI,GACrCC,GAAA,IAAI,EAAE,QAAQ,CAAQE,MAAA;AAC/B,aAAO,KAAKA,CAAI;AAAA,IAAA,CACjB;AAAA,EACH;AACF;AC7CA,MAAMC,KAAgB,IAAIhB,EAAW,IAC/BiB,KAAuB,IAAIlB,EAAa,KAAKC,EAAW,MAOxDkB,KAAmB,CAACV,MAAyBW,EAAmBX,GAASP,EAAc,GAKvFmB,KAAoB,CAAIZ,MAAyB,IAAIa,GAAMb,CAAO,GAIlEc,KAAkBC,EAA8B,YAAYvB,EAAW,EAAE,GACzEwB,KAAmBD,EAA8B,aAAavB,EAAW,EAAE,GAS3EyB,KAAqB,CAACC,MAAgB;AACpC,QAAA,EAAE,SAAAlB,EAAY,IAAAkB;AACpBC,EAAAA,EAAcnB,GAASgB,EAAgB,GAEvCE,EAAK,sBAAsB,GAC3BA,EAAK,QAAQ,GACblB,EAAQ,OAAO;AACjB;AAKA,MAAqBa,WAAcjB,GAAc;AAAA,EAM/C,YAAYC,GAA8B;AACxC,UAAMA,CAAM;AAHd,IAAAE,EAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,EAAA,eAAQ,MAAM;AACN,YAAA,EAAE,SAAAC,EAAY,IAAA;AAGpB,MAAIA,KAAWoB,EAASpB,GAASV,CAAS,MACxC6B,EAAcnB,GAASc,EAAe,GAEjCA,GAAgB,qBACnBO,EAAYrB,GAASV,CAAS,GAE1B8B,EAASpB,GAASX,CAAS,IAC7BiC,EAAqBtB,GAAS,MAAMiB,GAAmB,IAAI,CAAC,IACvDA,GAAmB,IAAI;AAAA,IAElC;AAOF;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAlB,EAAA,+BAAwB,CAACwB,MAAkB;AACnC,YAAAC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAAC,GAAS,OAAAC,EAAU,IAAA;AAEvB,MAAAD,KAAgBH,EAAAG,GAASE,GAAiBD,CAAK;AAAA,IAAA;AA3CnD,SAAK,UAAU3B,EAAcQ,IAAsB,KAAK,OAAO,GAG/D,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA;AAAA,EAGA,IAAI,OAAO;AACF,WAAAhB;AAAA,EACT;AAAA;AAAA,EAsCA,UAAU;AACR,SAAK,sBAAsB,GAC3B,MAAM,QAAQ;AAAA,EAChB;AACF;AA5DEM,EADmBc,IACZ,YAAWL,KAClBT,EAFmBc,IAEZ,QAAOD,KACdb,EAHmBc,IAGZ,eAAcH;ACjEvB,MAAMoB,IAAc,UCAdC,KAAe,kBCFfC,KAAe,UCAfC,KAAkB,UCuBlBC,KAAiB,IAAIH,EAAY,KAAKC,EAAY,MAMlDG,KAAoB,CAACnC,MAAyBW,EAAoBX,GAASiC,EAAe,GAG1FG,KAAqB,CAACpC,MAAyB,IAAIqC,GAAOrC,CAAO;AAKvE,MAAqBqC,WAAezC,GAAc;AAAA;AAAA;AAAA;AAAA,EAUhD,YAAYC,GAA8B;AACxC,UAAMA,CAAM;AANd,IAAAE,EAAA,kBAAW;AAiCX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,EAAA,gBAAS,CAAC,MAAa;AACjB,MAAA,KAAG,EAAE,eAAe;AAElB,YAAA,EAAE,SAAAC,GAAS,UAAAsC,EAAa,IAAA;AAC1B,MAAA,CAAClB,EAASpB,GAAS,UAAU,KAAK,CAACuC,GAAavC,GAAS,UAAU,OACtDsC,IAAWjB,IAAcmB,GACjCxC,GAAS8B,CAAW,GAC3BW,EAAazC,GAAS0C,IAAaJ,IAAW,UAAU,MAAM,GACzD,KAAA,WAAWlB,EAASpB,GAAS8B,CAAW;AAAA,IAC/C;AAUF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAA/B,EAAA,+BAAwB,CAACwB,MAAkB;AAEzC,OADeA,IAAME,IAAcC,GAC5B,KAAK,SAASG,GAAiB,KAAK,MAAM;AAAA,IAAA;AA7C3C,UAAA,EAAE,SAAA7B,EAAY,IAAA;AAGf,SAAA,WAAWoB,EAASpB,GAAS8B,CAAW,GAC7CW,EAAazC,GAAS0C,IAAa,OAAO,CAAC,CAAC,KAAK,QAAQ,CAAC,GAG1D,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAAT;AAAA,EACT;AAAA;AAAA,EAkCA,UAAU;AACR,SAAK,sBAAsB,GAC3B,MAAM,QAAQ;AAAA,EAChB;AACF;AAlEElC,EADmBsC,IACZ,YAAWH,KAClBnC,EAFmBsC,IAEZ,QAAOD,KACdrC,EAHmBsC,IAGZ,eAAcF;ACtCvB,MAAMQ,KAAe,kBCFfC,KAAiB,YCAjBC,KAAoB,YCEpBC,KAAe,kBCAfC,KAAkB,qBCUlBC,IAAmB,CAAChD,MAAyB;AACjD,QAAMiD,IAAa,CAACN,IAAcG,IAAcC,IAAiB,MAAM,GACjEG,IAAMC,EAAYnD,CAAO;AAExB,SAAAiD,EACJ,IAAI,CAAOG,MAAA;AACJ,UAAAC,IAAWd,GAAavC,GAASoD,CAAG;AAC1C,WAAIC,IACKD,MAAQN,KAAeQ,EAAQtD,GAASqD,CAAQ,IAAIpD,EAAcoD,GAAUH,CAAG,IAEjF;AAAA,EAAA,CACR,EACA,OAAO,CAAK5I,MAAAA,CAAC,EAAE,CAAC;AACrB,GCwBMiJ,KAAmB,kBAAkBX,EAAc,MACnDY,IAAe,GAAGZ,EAAc,SAChCa,KAAgB,oBAChBC,KAAc,iBACdC,KAAc,UAEdC,KAAoC;AAAA,EACxC,OAAO;AAAA,EACP,UAAU;AAAA,EACV,OAAO;AAAA,EACP,UAAU;AACZ,GAMMC,KAAsB,CAAC7D,MAAyBW,EAAsBX,GAAS6C,EAAiB,GAKhGiB,KAAuB,CAAC9D,MAAyB,IAAI+D,GAAS/D,CAAO;AAE3E,IAAIgE,KAAS,GACTC,KAAW,GACXC,KAAO;AAIX,MAAMC,KAAqBpD,EAAiC,YAAY6B,EAAc,EAAE,GAClFwB,KAAoBrD,EAAiC,WAAW6B,EAAc,EAAE,GAShFyB,KAA+B,CAACnD,MAAmB;AACvD,QAAM,EAAE,OAAAoD,GAAO,WAAAC,GAAW,SAAAvE,GAAS,QAAAwE,GAAQ,SAAAC,EAAY,IAAAvD;AAGvD,MAAIA,EAAK,aAAa;AACd,UAAAwD,IAAaC,GAAezD,CAAI,GAChC0D,IAAcL,MAAc,SAAS,SAAS,QAC9CM,IAAiBN,MAAc,SAAS,UAAU;AAE/C/B,IAAAA,EAAAgC,EAAOF,CAAK,GAAGxC,CAAW,GACnCT,EAAYmD,EAAOF,CAAK,GAAG,GAAGd,CAAY,IAAIoB,CAAW,EAAE,GAC3DvD,EAAYmD,EAAOF,CAAK,GAAG,GAAGd,CAAY,IAAIqB,CAAc,EAAE,GAElDxD,EAAAmD,EAAOE,CAAU,GAAG5C,CAAW,GAC3CT,EAAYmD,EAAOE,CAAU,GAAG,GAAGlB,CAAY,IAAIqB,CAAc,EAAE,GAEnE1D,EAAcnB,GAASoE,EAAiB,GAClCU,EAAA,MAAM9E,GAAS0D,EAAW,GAG5BxC,EAAK,SAAS,CAACiC,EAAYnD,CAAO,EAAE,UAAUyE,EAAQ,YAAY,CAACvD,EAAK,YAC1EA,EAAK,MAAM;AAAA,EAEf;AACF;AAMA,SAAS6D,KAAwC;AAEzC,QAAA7D,IAAO2C,GAAoB,IAAI;AAEjC,EAAA3C,KAAQ,CAACA,EAAK,YAAY,CAAC4D,EAAM,IAAI,MAAMnB,EAAW,KACxDnB,EAAS,MAAMmB,EAAW;AAE9B;AAOA,SAASqB,KAAyC;AAE1C,QAAA9D,IAAO2C,GAAoB,IAAI;AAEjC,EAAA3C,KAAQA,EAAK,YAAY,CAAC4D,EAAM,IAAI,MAAMnB,EAAW,KACvDzC,EAAK,MAAM;AAEf;AAOA,SAAS+D,GAA4CvK,GAAe;AAClE,EAAAA,EAAE,eAAe;AAEjB,QAAMsF,IAAWsD,EAAQ,MAAMC,EAAgB,KAAKP,EAAiB,IAAI,GACnE9B,IAAO2C,GAAoB7D,CAAO;AAEpC,MAAAkB,KAAQ,CAACA,EAAK,aAAa;AAC7B,UAAMgE,IAAW,EAAE3C,GAAa,MAAMkB,EAAa;AAAA,IAAgC;AAEnF,IACE,QACA,CAACrC,EAAS,MAAMU,CAAW;AAAA,IAC3B,CAAC,OAAO,MAAMoD,CAAQ,KAGtBhE,EAAK,GAAGgE,CAAQ;AAAA,EAEpB;AACF;AAOA,SAASC,GAA2CzK,GAAe;AACjE,EAAAA,EAAE,eAAe;AACjB,QAAMsF,IAAUsD,EAAQ,MAAMC,EAAgB,KAAMP,EAAiB,IAAI,GACnE9B,IAAO2C,GAAoB7D,CAAO;AAEpC,MAAAkB,KAAQ,CAACA,EAAK,aAAa;AACvB,UAAA0D,IAAcrC,GAAa,MAAMmB,EAAW;AAGlD,IAAIkB,MAAgB,SAClB1D,EAAK,KAAK,IACD0D,MAAgB,UACzB1D,EAAK,KAAK;AAAA,EAEd;AACF;AAOA,MAAMkE,KAAqB,CAAC,EAAE,MAAAC,GAAM,QAAAxF,QAA+C;AAC3E,QAAAqD,IAAMC,EAAYtD,CAAM,GACxB,CAACG,CAAO,IAAI,CAAC,GAAGsF,GAAiB/B,IAAkBL,CAAG,CAAC,EAAE,OAAO,CAAK5I,MAAAiL,GAAuBjL,CAAC,CAAC,GAC9F4G,IAAO2C,GAAoB7D,CAAO;AAGpC,MAAAkB,KAAQ,CAACA,EAAK,eAAe,CAAC,kBAAkB,KAAKrB,EAAO,QAAQ,GAAG;AACnE,UAAA2F,IAAMC,GAAMzF,CAAO;AAKzB,IAAIqF,OAHkBG,IAAqBE,KAAfC,MAGDzE,EAAK,KAAK,IAC5BmE,OALaG,IAAsBG,KAAhBD,OAKIxE,EAAK,KAAK;AAAA,EAC5C;AACF;AASA,SAAS0E,GAAuClL,GAA2B;AACnE,QAAA,EAAE,QAAAmF,EAAW,IAAAnF,GACbwG,IAAO2C,GAAoB,IAAI;AAGrC,EACE3C,KACAA,EAAK,YACHA,EAAK,aAAa,CAACA,EAAK,UAAU,SAASrB,CAAc,KAAM,CAACqB,EAAK,SAAS,SAASrB,CAAqB,OAE9GnF,EAAE,yBAAyB,GAC3BA,EAAE,gBAAgB,GAClBA,EAAE,eAAe;AAErB;AASA,SAASmL,GAA8CnL,GAAiB;AAChE,QAAA,EAAE,QAAAmF,EAAW,IAAAnF,GACbwG,IAAO2C,GAAoB,IAAI;AAErC,MAAI3C,KAAQ,CAACA,EAAK,eAAe,CAACA,EAAK,SAAS;AAExC,UAAA,EAAE,UAAA4E,GAAU,YAAAC,EAAe,IAAA7E;AACjC,IAAK,CAAC,GAAG4E,GAAU,GAAGC,CAAU,EAAE,MAAM,CAAAC,MAAMA,MAAOnG,KAAUmG,EAAG,SAASnG,CAAc,CAAC,MACxFmE,KAAStJ,EAAE,OAGP,KAAK,SAASmF,CAAc,MAC9BqB,EAAK,UAAU,IACf+E,GAA4B/E,GAAM,EAAI;AAAA,EAG5C;AACF;AAOA,MAAMgF,KAA6B,CAACxL,MAAoB;AACtD,EAAAuJ,KAAWvJ,EAAE;AACf,GAOMyL,KAA2B,CAACzL,MAAoB;ArBnRjD,MAAA0L;AqBoRG,QAAA,EAAE,QAAAvG,EAAW,IAAAnF,GACbwI,IAAMC,EAAYtD,CAAc,GAChCqB,IAAO,CAAC,GAAGoE,GAAiB/B,IAAkBL,CAAG,CAAC,EACrD,IAAI,CAAAhG,MAAK2G,GAAoB3G,CAAC,CAAa,EAC3C,KAAK,CAAA,MAAK,EAAE,OAAO;AAItB,MAAIgE,GAAM;AACF,UAAA,EAAE,SAAAlB,GAAS,OAAAsE,EAAU,IAAApD,GACrBsE,IAAMC,GAAMzF,CAAO;AACzB,IAAAkE,KAAOxJ,EAAE,OAETwG,EAAK,UAAU,IACf+E,GAA4B/E,CAAI,GAG9B,GAACkF,IAAAlD,EAAI,aAAA,MAAJ,QAAAkD,EAAoB,WAAW,WAChCpG,EAAQ,SAASH,CAAqB,KACtC,KAAK,IAAImE,KAASE,EAAI,IAAI,QAItBD,KAAWD,KACb9C,EAAK,GAAGoD,KAASkB,IAAM,KAAK,EAAE,IACrBvB,KAAWD,MACpB9C,EAAK,GAAGoD,KAASkB,IAAM,IAAI,GAAG,IAKzBxB,KAAA,GACEC,KAAA,GACJC,KAAA;AAAA,EACT;AACF,GAUMmC,KAA4B,CAACnF,GAAgBoD,MAAkB;AAC7D,QAAA,EAAE,YAAAyB,EAAe,IAAA7E;AACtB,GAAA,GAAG6E,CAAU,EAAE,QAAQ,OAAK1E,EAAY/G,GAAGwH,CAAW,CAAC,GAGpDZ,EAAK,WAAWoD,CAAK,KAAY9B,EAAAuD,EAAWzB,CAAK,GAAGxC,CAAW;AACrE,GAQMmE,KAA8B,CAAC/E,GAAgBK,MAAkB;AAC/D,QAAA,EAAE,SAAAvB,EAAY,IAAAkB,GACdM,IAASD,IAAME,IAAcC;AACnC,EAAAF,EAAO2B,EAAYnD,CAAO,GAAGsG,IAAkBJ,IAA4BK,EAAc,GACzF/E,EAAO2B,EAAYnD,CAAO,GAAGwG,IAAgBL,IAA0BI,EAAc;AACvF,GAQM5B,KAAiB,CAACzD,MAAmB;AACnC,QAAA,EAAE,QAAAsD,GAAQ,SAAAxE,EAAY,IAAAkB,GACtBwD,IAAazE,EAAc,IAAIuD,CAAY,IAAI1B,CAAW,IAAI9B,CAAO;AACpE,SAAAyG,EAAc/B,CAAU,IAAI,CAAC,GAAGF,CAAM,EAAE,QAAQE,CAAU,IAAI;AACvE;AAKA,MAAqBX,WAAiBnE,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBlD,YAAYC,GAA8BC,GAAmC;AAC3E,UAAMD,GAAQC,CAAM;AA4PtB;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC,EAAA,+BAAwB,CAACwB,MAAkB;AACzC,YAAM,EAAE,SAAAvB,GAAS,SAAAyE,GAAS,QAAAD,GAAQ,UAAAsB,GAAU,YAAAC,EAAe,IAAA,MACrD,EAAE,OAAAW,GAAO,OAAAC,GAAO,UAAAC,GAAU,UAAAC,MAAapC,GACvCjD,IAASD,IAAME,IAAcC;AAEnC,MAAIiF,KAASC,MACJpF,EAAAxB,GAAS8G,IAAiB/B,EAAoB,GAC9CvD,EAAAxB,GAAS+G,IAAiB/B,EAAqB,IAGpD0B,KAASlC,EAAO,SAAS,MACpBhD,EAAAxB,GAASgH,IAAkBnB,IAA4BU,EAAc,GAC5E/E,EAAOxB,GAASiH,IAAiBrB,IAAqB,EAAE,SAAS,IAAO,GACxEpE,EAAOxB,GAASkH,IAAgBtB,IAAqB,EAAE,SAAS,IAAO,IAIrEE,EAAS,UACXA,EAAS,QAAQ,CAASqB,MAAA;AAEpB,QAAAA,KAAc3F,EAAA2F,GAAOtF,GAAiBsD,EAAuB;AAAA,MAAA,CAClE,GAICY,EAAW,UACbA,EAAW,QAAQ,CAAaqB,MAAA;AACvB,QAAA5F,EAAA4F,GAAWvF,GAAiBoD,EAAwB;AAAA,MAAA,CAC5D,GAGC4B,KAAUrF,EAAO2B,EAAYnD,CAAO,GAAGqH,IAAcjC,EAAkB;AAAA,IAAA;AAxRrE,UAAA,EAAE,SAAApF,EAAY,IAAA;AAGpB,SAAK,YAAYyF,GAAMzF,CAAO,IAAI,UAAU,QAC5C,KAAK,UAAU,IAIV,KAAA,SAASsH,GAAuB9D,GAAcxD,CAAO;AACpD,UAAA,EAAE,QAAAwE,EAAW,IAAA;AAIf,QAAAA,EAAO,UAAU,GAAG;AAChB,YAAA+C,IAAc5C,GAAe,IAAI,GAEjC6C,IAAiB,CAAC,GAAGhD,CAAM,EAAE,KAAK,CAAA3J,MAAK4M,GAAQ5M,GAAG,IAAI2I,CAAY,UAAUA,CAAY,OAAO,CAAC;AACtG,WAAK,QAAQ+D;AAGP,YAAArE,IAAMC,EAAYnD,CAAO;AAE/B,WAAK,WAAW;AAAA,QACd,GAAGsF,GAAiB,IAAI5B,EAAW,KAAK1D,CAAO;AAAA,QAC/C,GAAGsF,GAAiB,IAAI5B,EAAW,KAAKf,EAAY,MAAM3C,EAAQ,EAAE,MAAMkD,CAAG;AAAA,MAAA,EAC7E,OAAO,CAAChG,GAAGxB,GAAGgM,MAAOhM,MAAMgM,EAAG,QAAQxK,CAAC,CAAC,GAE1C,KAAK,YAAY+C,EAAc,IAAI2C,EAAc,eAAe5C,CAAO,GAGvE,KAAK,aAAa;AAAA,QAChB,GAAI,KAAK,YAAYsF,GAAiB,IAAI7B,EAAa,KAAK,KAAK,SAAS,IAAI,CAAC;AAAA,QAC/E,GAAG6B,GAAiB,IAAI7B,EAAa,KAAKd,EAAY,MAAM3C,EAAQ,EAAE,MAAMkD,CAAG;AAAA,MAAA,EAC/E,OAAO,CAAChG,GAAGxB,GAAGgM,MAAOhM,MAAMgM,EAAG,QAAQxK,CAAC,CAAC;AAGpC,YAAA,EAAE,SAAAuH,EAAY,IAAA;AAGpB,WAAK,QAAQ,WAAWA,EAAQ,aAAa,KAAOb,GAAiB,WAAWa,EAAQ,UAIpF+C,IACF,KAAK,QAAQ,CAAC,GAAGhD,CAAM,EAAE,QAAQgD,CAAc,IACtCD,IAAc,MACvB,KAAK,QAAQ,GACJ/E,EAAAgC,EAAO,CAAC,GAAG1C,CAAW,GAC3B,KAAK,WAAW,UAAQuE,GAA0B,MAAM,CAAC,IAI3D,KAAK,WAAW,UAAkCA,GAAA,MAAM,KAAK,KAAK,GAGtE,KAAK,sBAAsB,EAAI,GAG3B5B,EAAQ,YAAU,KAAK,MAAM;AAAA,IACnC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAA5B;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAe;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,WAAW;AACN,WAAAxC,EAAS,KAAK,SAASuC,EAAW;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,cAAc;AACT,WAAA1D,EAAc,IAAIuD,CAAY,UAAUA,CAAY,SAAS,KAAK,OAAO,MAAM;AAAA,EACxF;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ;AACN,UAAM,EAAE,SAAAxD,GAAS,SAAAyE,GAAS,UAAAkD,GAAU,OAAArD,MAAU;AAExCQ,IAAAA,EAAA,MAAM9E,GAAS4C,EAAc,GAC/B+E,MACI7C,EAAA,MAAM9E,GAAS2D,EAAW,GAChCtC,EAAYrB,GAAS2D,EAAW,IAG5BmB,EAAA;AAAA,MACJ9E;AAAA,MACA,MAAM;AAIA,QAAA,KAAK,WAAW,CAAC,KAAK,YAAY,CAAC,KAAK,WAAWuF,GAAuBvF,CAAO,KAC9E,KAAA,GAAGsE,IAAQ,CAAC;AAAA,MAErB;AAAA,MACAG,EAAQ;AAAA,MACR7B;AAAA,IAAA;AAAA,EAEJ;AAAA;AAAA,EAGA,QAAQ;AACA,UAAA,EAAE,SAAA5C,GAAS,SAAAyE,EAAY,IAAA;AAE7B,IAAI,CAAC,KAAK,YAAYA,EAAQ,aAC5BjC,EAASxC,GAAS2D,EAAW,GACvBmB,EAAA;AAAA,MACJ9E;AAAA,MACA,MAAM;AAAA,MAEN;AAAA,MACA;AAAA,MACA2D;AAAA,IAAA;AAAA,EAGN;AAAA;AAAA,EAGA,OAAO;AAED,IAAC,KAAK,eACH,KAAA,GAAG,KAAK,QAAQ,CAAC;AAAA,EAE1B;AAAA;AAAA,EAGA,OAAO;AAED,IAAC,KAAK,eACH,KAAA,GAAG,KAAK,QAAQ,CAAC;AAAA,EAE1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,GAAGiE,GAAa;AACd,UAAM,EAAE,SAAA5H,GAAS,QAAAwE,GAAQ,SAAAC,EAAA,IAAY,MAC/BC,IAAaC,GAAe,IAAI,GAChCa,IAAMC,GAAMzF,CAAO;AACzB,QAAI6H,IAAOD;AAKP,QAAA,CAAC,KAAK,eAAelD,MAAemD,KAAQ,CAAC/C,EAAM,IAAI9E,GAAS0D,EAAW,GAAG;AAGhF,MAAIgB,IAAamD,KAASnD,MAAe,KAAKmD,MAASrD,EAAO,SAAS,IAChE,KAAA,YAAYgB,IAAM,UAAU,UACxBd,IAAamD,KAASnD,MAAeF,EAAO,SAAS,KAAKqD,MAAS,OACvE,KAAA,YAAYrC,IAAM,SAAS;AAE5B,YAAA,EAAE,WAAAjB,EAAc,IAAA;AAGtB,MAAIsD,IAAO,IACTA,IAAOrD,EAAO,SAAS,IACdqD,KAAQrD,EAAO,WACjBqD,IAAA;AAIH,YAAAjD,IAAcL,MAAc,SAAS,SAAS,QAC9CM,IAAiBN,MAAc,SAAS,UAAU,OAElDuD,IAAkB;AAAA,QACtB,eAAetD,EAAOqD,CAAI;AAAA,QAC1B,MAAMnD;AAAA,QACN,IAAImD;AAAA,QACJ,WAAAtD;AAAA,MAAA;AAIFwD,MAAAA,GAAa5D,IAAoB2D,CAAe,GAChDC,GAAa3D,IAAmB0D,CAAe,GAG/C3G,EAAcnB,GAASmE,EAAkB,GACpCA,GAAmB,qBAEtB,KAAK,QAAQ0D,GACbxB,GAA0B,MAAMwB,CAAI,GAEhCG,GAA6BxD,EAAOqD,CAAI,CAAC,KAAKzG,EAASpB,GAAS,OAAO,IACnE8E,EAAA;AAAA,QACJ9E;AAAA,QACA,MAAM;AACJwC,UAAAA,EAASgC,EAAOqD,CAAI,GAAG,GAAGrE,CAAY,IAAIoB,CAAW,EAAE,GAChDqD,GAAAzD,EAAOqD,CAAI,CAAC,GACnBrF,EAASgC,EAAOqD,CAAI,GAAG,GAAGrE,CAAY,IAAIqB,CAAc,EAAE,GAC1DrC,EAASgC,EAAOE,CAAU,GAAG,GAAGlB,CAAY,IAAIqB,CAAc,EAAE,GAGhEvD;AAAAA,YACEkD,EAAOqD,CAAI;AAAA,YACX,MAAM,KAAK,UAAU,KAAK,OAAO,UAAUxD,GAA6B,IAAI;AAAA,UAAA;AAAA,QAEhF;AAAA,QACA;AAAA,QACAX;AAAA,MAAA,KAGOlB,EAAAgC,EAAOqD,CAAI,GAAG/F,CAAW,GACtBT,EAAAmD,EAAOE,CAAU,GAAG5C,CAAW,GAErCgD,EAAA;AAAA,QACJ9E;AAAA,QACA,MAAM;AACE8E,UAAAA,EAAA,MAAM9E,GAAS0D,EAAW,GAG5B1D,KAAWyE,EAAQ,YAAY,CAAC,KAAK,YACvC,KAAK,MAAM,GAGbtD,EAAcnB,GAASoE,EAAiB;AAAA,QAC1C;AAAA,QACA;AAAA,QACAV;AAAA,MAAA;AAAA,IAIR;AAAA,EACF;AAAA;AAAA,EA0CA,UAAU;AACF,UAAA,EAAE,aAAAwE,EAAgB,IAAA,MAElBC,IAAQ;AAAA,MACZ,GAAG;AAAA,MACH,aAAAD;AAAA,IAAA;AAEF,SAAK,sBAAsB,GAC3B,MAAM,QAAQ,GAGVC,EAAM,eACR7G,EAAqB6G,EAAM,OAAOA,EAAM,KAAK,GAAG,MAAM;AACpD,MAAA9D,GAA6B8D,CAAK;AAAA,IAAA,CACnC;AAAA,EAEL;AACF;AAjUEpI,EADmBgE,IACZ,YAAWR,KAClBxD,EAFmBgE,IAEZ,QAAOD,KACd/D,EAHmBgE,IAGZ,eAAcF;ACpWvB,MAAMuE,KAAkB,cCHlBC,IAAiB,YCAjBC,KAAoB,YCsCpBC,KAAmB,IAAIF,CAAc,IACrCG,KAAyB,IAAIzG,EAAY,KAAKsG,CAAc,MAC5DI,KAAmB,EAAE,QAAQ,QAM7BC,KAAsB,CAAC1I,MAAyBW,EAAsBX,GAASsI,EAAiB,GAKhGK,KAAuB,CAAC3I,MAAyB,IAAI4I,GAAS5I,CAAO,GAIrE6I,KAAoB9H,EAAiC,WAAWsH,CAAc,EAAE,GAChFS,KAAqB/H,EAAiC,YAAYsH,CAAc,EAAE,GAClFU,KAAoBhI,EAAiC,WAAWsH,CAAc,EAAE,GAChFW,KAAsBjI,EAAiC,aAAasH,CAAc,EAAE,GASpFY,KAAiB,CAAC/H,MAAmB;AACzC,QAAM,EAAE,SAAAlB,GAAS,QAAAkJ,GAAQ,UAAAC,EAAA,IAAajI;AAEtCC,EAAAA,EAAcnB,GAAS6I,EAAiB,GACnCA,GAAkB,qBACf/D,EAAA,IAAI9E,GAASoJ,IAAM,EAAE,GACvBF,KAAcpE,EAAA,IAAIoE,GAAQE,IAAM,EAAE,GAEtC5G,EAASxC,GAASoI,EAAe,GACjC/G,EAAYrB,GAASqI,CAAc,GAEnCgB,EAAgBrJ,GAAS,EAAE,QAAQ,GAAGA,EAAQ,YAAY,MAAM,GAEhEsB,EAAqBtB,GAAS,MAAM;AAClC8E,IAAAA,EAAM,MAAM9E,CAAO,GACfkJ,KAAQpE,EAAM,MAAMoE,CAAM,GAE9BC,EAAS,QAAQ,CAAOG,MAAA7G,EAAa6G,GAAKC,IAAc,MAAM,CAAC,GAE/DlI,EAAYrB,GAASoI,EAAe,GACpC5F,EAASxC,GAASqI,CAAc,GAChC7F,EAASxC,GAASV,CAAS,GAE3B+J,EAAgBrJ,GAAS,EAAE,QAAQ,GAAI,CAAA,GAEvCmB,EAAcnB,GAAS8I,EAAkB;AAAA,EAAA,CAC1C;AAEL,GAOMU,KAAkB,CAACtI,MAAmB;AAC1C,QAAM,EAAE,SAAAlB,GAAS,QAAAkJ,GAAQ,UAAAC,EAAA,IAAajI;AAEtCC,EAAAA,EAAcnB,GAAS+I,EAAiB,GAEnCA,GAAkB,qBACfjE,EAAA,IAAI9E,GAASoJ,IAAM,EAAE,GACvBF,KAAcpE,EAAA,IAAIoE,GAAQE,IAAM,EAAE,GAEtCC,EAAgBrJ,GAAS,EAAE,QAAQ,GAAGA,EAAQ,YAAY,MAAM,GAEhEqB,EAAYrB,GAASqI,CAAc,GACnChH,EAAYrB,GAASV,CAAS,GAC9BkD,EAASxC,GAASoI,EAAe,GAEjCH,GAAOjI,CAAO,GACdqJ,EAAgBrJ,GAAS,EAAE,QAAQ,MAAO,CAAA,GAE1CsB,EAAqBtB,GAAS,MAAM;AAClC8E,IAAAA,EAAM,MAAM9E,CAAO,GAEfkJ,KAAQpE,EAAM,MAAMoE,CAAM,GAE9BC,EAAS,QAAQ,CAAOG,MAAA7G,EAAa6G,GAAKC,IAAc,OAAO,CAAC,GAEhElI,EAAYrB,GAASoI,EAAe,GACpC5F,EAASxC,GAASqI,CAAc,GAEhCgB,EAAgBrJ,GAAS,EAAE,QAAQ,GAAI,CAAA,GAEvCmB,EAAcnB,GAASgJ,EAAmB;AAAA,EAAA,CAC3C;AAEL,GASMS,KAAuB,CAAC/O,MAAkB;AACxC,QAAA,EAAE,QAAAmF,EAAW,IAAAnF,GACbgP,IAAU7J,KAAUyD,EAAQzD,GAAuB2I,EAAsB,GACzExI,IAAU0J,KAAW1G,EAAiB0G,CAAO,GAC7CxI,IAAOlB,KAAW0I,GAAoB1I,CAAO;AAE/C,EAAAkB,KAAMA,EAAK,OAAO,GAGlBwI,KAAWA,EAAQ,YAAY,OAAKhP,EAAE,eAAe;AAC3D;AAMA,MAAqBkO,WAAiBhJ,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAYlD,YAAYC,GAA8BC,GAAmC;AAC3E,UAAMD,GAAQC,CAAM;AAuFtB;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC,EAAA,+BAAwB,CAACwB,MAAkB;AACnC,YAAAC,IAASD,IAAME,IAAcC,GAC7B,EAAE,UAAAyH,EAAa,IAAA;AAGrB,MAAIA,EAAS,UACXA,EAAS,QAAQ,CAAOG,MAAA9H,EAAO8H,GAAKzH,GAAiB4H,EAAoB,CAAC;AAAA,IAC5E;AA3FM,UAAA,EAAE,SAAAzJ,GAAS,SAAAyE,EAAY,IAAA,MACvBvB,IAAMC,EAAYnD,CAAO;AAG/B,SAAK,WAAW,CAAC,GAAGsF,GAAiBkD,IAAwBtF,CAAG,CAAC,EAAE,OAAO,CAAAoG,MAAOtG,EAAiBsG,CAAG,MAAMtJ,CAAO,GAGlH,KAAK,SAASyG,EAAchC,EAAQ,MAAM,IACtCA,EAAQ,SACRvE,GAASuE,EAAQ,MAAM,IACvBzB,EAAiBhD,CAAO,KAAKC,EAAcwE,EAAQ,QAAkBvB,CAAG,IACxE,MAGJ,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAAoF;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAG;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO;AACC,UAAA,EAAE,UAAAU,GAAU,SAAAnJ,EAAY,IAAA;AAC9B,IAAK8E,EAAM,IAAI9E,CAAO,MACpBwJ,GAAgB,IAAI,GAEhBL,EAAS,UACXA,EAAS,QAAQ,CAAOG,MAAA9G,EAAS8G,GAAK,GAAGjB,CAAc,GAAG,CAAC;AAAA,EAGjE;AAAA;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAArI,GAAS,QAAAkJ,GAAQ,UAAAC,EAAA,IAAa;AAClC,QAAAQ,GACAC;AAEJ,IAAIV,MACeS,IAAA,CAAC,GAAGrE,GAAiB,IAAI+C,CAAc,IAAI/I,CAAS,IAAI4J,CAAM,CAAC,EAAE;AAAA,MAAK,CAAAxN,MACrFgN,GAAoBhN,CAAC;AAAA,IAAA,GAEEkO,IAAAD,KAAkBjB,GAAoBiB,CAAc,KAG1E,CAACT,KAAU,CAACpE,EAAM,IAAIoE,CAAM,MAAM,CAACpE,EAAM,IAAI9E,CAAO,MACnD4J,KAA0BD,MAAmB3J,MAC/CwJ,GAAgBI,CAAsB,GACfA,EAAA,SAAS,QAAQ,CAAON,MAAA;AACpC9G,MAAAA,EAAA8G,GAAK,GAAGjB,CAAc,GAAG;AAAA,IAAA,CACnC,IAGHY,GAAe,IAAI,GAEfE,EAAS,UACXA,EAAS,QAAQ,CAAOG,MAAAjI,EAAYiI,GAAK,GAAGjB,CAAc,GAAG,CAAC;AAAA,EAGpE;AAAA;AAAA,EAGA,SAAS;AACP,IAAKjH,EAAS,KAAK,SAAS9B,CAAS,IAChC,KAAK,KAAK,IADyB,KAAK,KAAK;AAAA,EAEpD;AAAA;AAAA,EAkBA,UAAU;AACR,SAAK,sBAAsB,GAE3B,MAAM,QAAQ;AAAA,EAChB;AACF;AAnHES,EADmB6I,IACZ,YAAWL,KAClBxI,EAFmB6I,IAEZ,QAAOD,KACd5I,EAHmB6I,IAGZ,eAAcF;ACjKvB,MAAMmB,KAAsB,CAAC,YAAY,UAAU,aAAa,SAAS,GCFnEC,KAAoB,YCEpBC,KAAoB,iBCMpBC,KAAgB,CAAChK,MAAyB;AAExC,QAAAiK,IAAe3G,EAAQtD,GAAS,GAAG;AACzC,SACGA,EAAQ,YAAY;AAAA,EAEnBkK,GAAalK,GAAS,MAAM,KAC3BuC,GAAavC,GAAS,MAAM,EAAa,MAAM,EAAE,MAAM;AAAA,EAEzDiK,KACCC,GAAaD,GAAc,MAAM,KAChC1H,GAAa0H,GAAc,MAAM,EAAa,MAAM,EAAE,MAAM;AAEnE,GC8BM,CAACE,IAAgBC,IAAcC,IAAiBC,EAAa,IAAIC,IACjEC,KAAmB,IAAIzI,EAAY,KAAKoI,EAAc,MAMtDM,KAAsB,CAACzK,MAAyBW,EAAsBX,GAAS8J,EAAiB,GAKhGY,KAAuB,CAAC1K,MAAyB,IAAI2K,GAAS3K,CAAO,GAKrE4K,KAAuB,GAAGb,EAAiB,QAC3Cc,KAAgB,CAACV,IAAgBC,EAAY,GAC7CU,KAAkB,CAACT,IAAiBC,EAAa,GACjDS,KAAgB,CAAC,KAAK,QAAQ,GAE9BC,KAAmB;AAAA,EACvB,QAAQ;AAAA;AAAA,EACR,SAAS;AAAA;AACX,GAIMC,KAAoBlK,EAAiC,WAAWoJ,EAAc,EAAE,GAChFe,KAAqBnK,EAAiC,YAAYoJ,EAAc,EAAE,GAClFgB,KAAoBpK,EAAiC,WAAWoJ,EAAc,EAAE,GAChFiB,KAAsBrK,EAAiC,aAAaoJ,EAAc,EAAE,GACpFkB,KAAuBtK,EAAiC,cAAcoJ,EAAc,EAAE,GAUtFmB,KAAgB,CAACpK,MAAmB;AACxC,QAAM,EAAE,SAAAlB,GAAS,MAAAuL,GAAM,eAAAC,GAAe,SAAA/G,MAAYvD,GAC5C,EAAE,QAAAuK,EAAW,IAAAhH;AAInB,MAAIiH,EAAgBH,GAAM,UAAU,MAAM,UAAU;AAC5C,UAAA/F,IAAMC,GAAMzF,CAAO,GAEnB2L,IAAUvK,EAASmK,GAAMX,EAAoB;AAInD,IADmB,CAAC,UAAU,OAAO,UAAU,QAAQ,OAAO,EACnD,QAAQ,CAAK3N,MAAA;AAEtB,YAAM2O,KAAmC,CAAA;AACzC,MAAAA,GAAM3O,CAAC,IAAI,IACXoM,EAAgBkC,GAAMK,EAAK;AAAA,IAAA,CAC5B;AAKD,QAAIC,IACFtB,GAAgB,KAAK,OAAKnJ,EAASoK,GAAetO,CAAC,CAAC;AAAA,IACNiN;AAEhD,UAAM2B,IAA8C;AAAA,MAClD,UAAU,CAACL,GAAQ,GAAG,CAAC;AAAA,MACvB,QAAQ,CAAC,GAAG,GAAGA,CAAM;AAAA,MACrB,WAAWjG,IAAM,CAAC,IAAI,GAAG,GAAGiG,CAAM,IAAI,CAAC,IAAIA,GAAQ,CAAC;AAAA,MACpD,SAASjG,IAAM,CAAC,IAAIiG,GAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAGA,CAAM;AAAA,IAAA,GAG9CM,IAAgE;AAAA,MACpE,UAAU,EAAE,KAAK,OAAO;AAAA,MACxB,QAAQ,EAAE,KAAK,QAAQ,QAAQ,OAAO;AAAA,MACtC,WAAWvG,IAAM,EAAE,MAAM,QAAQ,OAAO,OAAO,IAAI,EAAE,MAAM,QAAQ,OAAO,OAAO;AAAA,MACjF,SAASA,IAAM,EAAE,MAAM,QAAQ,OAAO,OAAO,IAAI,EAAE,MAAM,QAAQ,OAAO,OAAO;AAAA,MAC/E,WAAWA,IAAM,EAAE,OAAO,KAAK,MAAM,OAAO,IAAI,EAAE,OAAO,QAAQ,MAAM,IAAI;AAAA,MAC3E,SAASA,IAAM,EAAE,OAAO,QAAQ,MAAM,IAAI,IAAI,EAAE,OAAO,KAAK,MAAM,OAAO;AAAA,IAAA,GAGrE,EAAE,aAAawG,GAAW,cAAcC,MAAeV,GAEvD,EAAE,aAAAW,GAAa,cAAAC,EAAa,IAAIC,GAAmBpM,CAAO,GAC1D;AAAA,MACJ,MAAMqM;AAAA,MACN,KAAKC;AAAA,MACL,OAAOC;AAAA,MACP,QAAQC;AAAA,IAAA,IACNC,GAAsBzM,CAAO,GAG3B0M,IAAiBL,IAAaL,IAAYP,IAAS,GAEnDkB,IAAkBN,IAAaL,IAAYO,KAAcd,KAAUS,GAEnEU,KAAeN,IAAYL,IAAaR,KAAUU,GAElDU,IAAmBP,IAAYL,IAAaO,KAAef,KAAUU,GAErEW,IAAYR,IAAYL,IAAaR,IAAS,GAE9CsB,KAAe,CAACvH,KAAOmG,KAAanG,KAAO,CAACmG,MAAaU,IAAaE,KAAcP,IAAY,GAChGgB,MAAgBxH,KAAOmG,KAAa,CAACnG,KAAO,CAACmG,MAAaU,IAAaL,KAAaE;AA6B1F,QAzBIpB,GAAgB,SAASe,CAAa,KAAKa,KAAkBC,MAC/Cd,IAAA1B,KAEd0B,MAAkBxB,OAAqB7E,IAAuBmH,IAAjBD,OAC/Bb,IAAAvB,KAEduB,MAAkBvB,OAAkB9E,IAAMkH,IAAiBC,OAC7Cd,IAAAxB,KAEdwB,MAAkBzB,MAAgB0C,KAAa,CAACD,MAClChB,IAAA1B,KAEd0B,MAAkB1B,MAAkB0C,KAAoB,CAACC,MAC3CjB,IAAAzB,KAIdU,GAAgB,SAASe,CAAa,KAAKe,MAChC7E,GAAAgE,EAAiBF,CAAa,GAAG;AAAA,MAC5C,KAAK;AAAA,MACL,QAAQ;AAAA,IAAA,CACT,GAIChB,GAAc,SAASgB,CAAa,MAAMkB,KAAcC,KAAc;AAGxE,UAAIC,IAA0E,EAAE,MAAM,QAAQ,OAAO,OAAO;AACxG,MAAA,CAACF,KAAcC,MAAe,CAACxH,MAAKyH,IAAW,EAAE,MAAM,QAAQ,OAAO,EAAE,IACxEF,KAAc,CAACC,MAAexH,MAAKyH,IAAW,EAAE,MAAM,GAAG,OAAO,OAAO,IACvEA,KAAuBlF,GAAAgE,EAAiBF,CAAa,GAAGoB,CAAQ;AAAA,IACtE;AAEM,UAAAC,KAAoBpB,EAAeD,CAAa;AACtDxC,IAAAA,EAAgBkC,GAAM;AAAA,MACpB,GAAGQ,EAAiBF,CAAa;AAAA,MACjC,QAAQ,GAAGqB,GAAQ,IAAI,CAAM5S,MAAAA,KAAI,GAAGA,CAAC,IAAS,EAAE,KAAK,GAAG,CAAC;AAAA,IAAA,CAC1D,GAGGuQ,GAAc,SAASgB,CAAa,KAAKF,KAEvCA,KAGctC,EAAAkC,GAAMQ,EADnB,CAACvG,KAAOuH,KAAgBvH,KAAOwH,KAAe;AAAA;AAAA,MAAyC;AAAA,KAC1C,CAAC,GAIrD7L,EAAcqK,GAAeH,EAAoB;AAAA,EACnD;AACF,GAQM8B,KAAe,CAAC5B,MACb,CAAC,GAAGA,EAAK,QAAQ,EACrB,IAAI,CAAKrO,MAAA;AACR,MAAIA,KAAK6N,GAAc,SAAS7N,EAAE,OAAO;AAAU,WAAAA;AAC7C,QAAA,EAAE,mBAAAkQ,EAAsB,IAAAlQ;AAC9B,SAAIkQ,KAAqBrC,GAAc,SAASqC,EAAkB,OAAO,IAChEA,IAEF;AACR,CAAA,EACA,OAAO,CAAAlQ,MAAKA,CAAC,GASZmQ,KAAwB,CAACnM,MAAmB;AAC1C,QAAA,EAAE,SAAAlB,GAAS,SAAAyE,EAAY,IAAAvD,GACvBM,IAASN,EAAK,OAAOO,IAAcC,GACnCwB,IAAMC,EAAYnD,CAAO;AAExB,EAAAwB,EAAA0B,GAAKrB,GAAiByL,EAAsB,GAC5C9L,EAAA0B,GAAKqK,IAAYD,EAAsB,GACvC9L,EAAA0B,GAAKmE,IAAcmG,EAAqB,GACxChM,EAAA0B,GAAKuK,IAAYC,EAAkB,GAGtCjJ,EAAQ,YAAY,aACtB,CAACkJ,IAAaC,EAAW,EAAE,QAAQ,CAAMC,MAAA;AACvC,IAAArM,EAAOsM,GAAU9N,CAAO,GAAG6N,GAAIE,IAAuBxH,EAAc;AAAA,EAAA,CACrE;AAEL,GAQMyH,KAAyB,CAAChO,MAAkD;AAC1E,QAAAiO,IAAgB,CAAC,GAAG1D,IAAiB,aAAa,aAAa,EAClE,IAAI,CAAArN,MAAKoK,GAAuB,GAAGpK,CAAC,IAAIoC,CAAS,IAAI6D,EAAYnD,CAAO,CAAC,CAAC,EAC1E,KAAK,CAAK1F,MAAAA,EAAE,MAAM;AAEjB,MAAA2T,KAAiBA,EAAc;AACjC,WAAO,CAAC,GAAIA,EAAc,CAAC,EAAE,QAA0C,EAAE;AAAA,MAAK,CAAA3T,MAC5EiQ,GAAgB,KAAK,CAAArN,MAAKA,MAAMqF,GAAajI,GAAGyH,EAAY,CAAC;AAAA,IAAA;AAInE,GASMuL,KAAyB,CAAC5S,MAAkB;AAC1C,QAAA,EAAE,QAAAmF,GAAQ,MAAAqO,EAAS,IAAAxT;AAGrB,MAAAmF,KAAU4G,EAAc5G,CAAM,GAAG;AAE7B,UAAAG,IAAUgO,GAAuBnO,CAAM,GACvCqB,IAAOlB,KAAWyK,GAAoBzK,CAAO;AAGnD,QAAIkB,GAAM;AACF,YAAA,EAAE,eAAAsK,GAAe,MAAAD,EAAS,IAAArK,GAE1BiN,IACJ3C,KACAA,EAAc,SAAS3L,CAAM,MAC5BA,EAAO,YAAY,UAAUyD,EAAQzD,GAAQ,MAAM,MAAM;AAExD,MAAA,CAACgC,GAAiBuM,EAAc,EAAE,SAASF,CAAI,KAAKlE,GAAcnK,CAAM,KAC1EnF,EAAE,eAAe,GAIf,CAACyT,KAAUD,MAASX,MAAc1N,MAAWG,KAAWH,MAAW0L,KACrErK,EAAK,KAAK;AAAA,IAEd;AAAA,EACF;AACF,GAOMmN,KAAuB,CAAC3T,MAAkB;AACxC,QAAA,EAAE,QAAAmF,EAAW,IAAAnF,GACbsF,IAAUH,KAAUyD,EAAQzD,GAAuB2K,EAAgB,GACnEtJ,IAAOlB,KAAWyK,GAAoBzK,CAAO;AAGnD,EAAIkB,MACFxG,EAAE,gBAAgB,GAClBwG,EAAK,OAAO,GAERlB,KAAWgK,GAAchK,CAAO,KAAGtF,EAAE,eAAe;AAE5D,GAOM8S,KAAwB,CAAC9S,MAAqB;AAElD,EAAI,CAAC4T,IAAcC,EAAU,EAAE,SAAS7T,EAAE,IAAI,KAAGA,EAAE,eAAe;AACpE;AAOA,SAASgT,GAAsChT,GAAkB;AACzD,QAAA,EAAE,MAAA2K,EAAS,IAAA3K,GACXsF,IAAUgO,GAAuB,IAAI,GACrC9M,IAAOlB,KAAWyK,GAAoBzK,CAAO,GAC7C,EAAE,eAAAwO,EAAmB,IAAAxO,KAAWmD,EAAYnD,CAAO;AAGzD,MAAIkB,KAAQsN,GAAe;AACnB,UAAA,EAAE,MAAAjD,GAAM,MAAAkD,EAAS,IAAAvN,GACjBwN,IAAYvB,GAAa5B,CAAI;AAG/B,QAAAmD,KAAaA,EAAU,UAAU,CAACJ,IAAcC,EAAU,EAAE,SAASlJ,CAAI,GAAG;AAC1E,UAAAuC,IAAM8G,EAAU,QAAQF,CAAa;AAEzC,MAAIA,MAAkBxO,IACd4H,IAAA,IACGvC,MAASkJ,KACZ3G,IAAAA,IAAM,IAAIA,IAAM,IAAI,IACjBvC,MAASiJ,OAClB1G,IAAMA,IAAM8G,EAAU,SAAS,IAAI9G,IAAM,IAAIA,IAG3C8G,EAAU9G,CAAG,KAAS+G,GAAAD,EAAU9G,CAAG,CAAgB;AAAA,IACzD;AAEI,IAAAgH,OAAcvJ,KAAQoJ,MACxBvN,EAAK,OAAO,GACZyN,GAAM3O,CAAO;AAAA,EAEjB;AACF;AAGA,SAAS+N,KAAyC;AAC1C,QAAA/N,IAAUgO,GAAuB,IAAI,GACrC9M,IAAOlB,KAAWyK,GAAoBzK,CAAO;AAGnD,EAAIkB,KAAQA,EAAK,QAAMoK,GAAcpK,CAAI;AAC3C;AAKA,MAAqByJ,WAAiB/K,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAalD,YAAYC,GAA8BC,GAAmC;AAC3E,UAAMD,GAAQC,CAAM;AAoGtB;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC,EAAA,+BAAwB,CAACwB,MAAkB;AAElC,OADQA,IAAME,IAAcC,GAC5B,KAAK,SAASG,GAAiBwM,EAAoB;AAAA,IAAA;AAnGpD,UAAA,EAAE,eAAA7C,EAAc,IAAI,KAAK,SACzB,CAACD,CAAI,IAAIjE,GAAuByC,IAAmByB,CAA2B;AAGpF,IAAID,MAEF,KAAK,gBAAgBC,GACrB,KAAK,OAAOD,GAGZ,KAAK,sBAAsB,EAAI;AAAA,EAEnC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAAzB;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAkB;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACP,IAAI,KAAK,OAAM,KAAK,KAAK,IACpB,KAAK,KAAK;AAAA,EACjB;AAAA;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAAhL,GAAS,MAAAyO,GAAM,MAAAlD,GAAM,eAAAC,MAAkB;AAG/C,QAAI,CAACiD,GAAM;AACH,YAAAI,IAAiBb,GAAuBhO,CAAO,GAC/C8O,IAAkBD,KAAkBpE,GAAoBoE,CAAc;AACxE,MAAAC,KAAiBA,EAAgB,KAAK,GAG1C,CAAC7D,IAAmBC,IAAoBG,EAAoB,EAAE,QAAQ,CAAK3Q,MAAA;AACzE,QAAAA,EAAE,gBAAgBsF;AAAA,MAAA,CACnB,GAEDmB,EAAcqK,GAAeP,EAAiB,GACzCA,GAAkB,qBACrBzI,EAAS+I,GAAMjM,CAAS,GACxBkD,EAASgJ,GAAelM,CAAS,GACpBmD,EAAAzC,GAASuJ,IAAc,MAAM,GAG1C+B,GAAc,IAAI,GAElB,KAAK,OAAO,CAACmD,GAEbE,GAAM3O,CAAO,GACbqN,GAAsB,IAAI,GAC1BlM,EAAcqK,GAAeN,EAAkB;AAAA,IAEnD;AAAA,EACF;AAAA;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAAlL,GAAS,MAAAyO,GAAM,MAAAlD,GAAM,eAAAC,MAAkB;AAG/C,IAAIiD,MACF,CAACtD,IAAmBC,EAAmB,EAAE,QAAQ,CAAK1Q,MAAA;AACpD,MAAAA,EAAE,gBAAgBsF;AAAA,IAAA,CACnB,GAEDmB,EAAcqK,GAAeL,EAAiB,GACzCA,GAAkB,qBACrB9J,EAAYkK,GAAMjM,CAAS,GAC3B+B,EAAYmK,GAAelM,CAAS,GACvBmD,EAAAzC,GAASuJ,IAAc,OAAO,GAE3C,KAAK,OAAO,CAACkF,GAEbpB,GAAsB,IAAI,GAC1BlM,EAAcqK,GAAeJ,EAAmB;AAAA,EAGtD;AAAA;AAAA,EAaA,UAAU;AACR,IAAI,KAAK,QAAM,KAAK,KAAK,GAEzB,KAAK,sBAAsB,GAC3B,MAAM,QAAQ;AAAA,EAChB;AACF;AA7HErL,EADmB4K,IACZ,YAAWH,KAClBzK,EAFmB4K,IAEZ,QAAOD,KACd3K,EAHmB4K,IAGZ,eAAcF;AC9YvB,MAAMsE,IAAc,SCAdC,KAAiB,SCAjBC,KAAqB,aCErBC,KAAgB,aCAhBC,KAAmB,gBCAnBC,KAAiB,cCAjBC,KAAsB,mBCYtBC,KAAgB,CAACpG,MAAwB;AAAA,EAC7C,GAAG5B,GAAuB4H,IAAehG,CAAM;AAAA,EAC/C,GAAG5B,GAAuB6H,IAAkBjG,CAAM;AAAA,EAClD,GAAG5B,GAAuB8H,IAAgBlG,CAAM;AAAA,EAChD,GAAG5B,GAAuB+H,IAAqBnG,CAAM;AAAA,EACrD,GAAG5B,GAAuB,YAAY4B,CAAM;AAC9C,GAQaqG,KAAiB,CAACvP,MAA0B;AACjD,QAAAwP,IAAKC,GAAgBzP,CAAO;AAClCqJ,EAAAA,EAAgBmG,GAAI;AAAA,IAClB,cAAc;AAAA,IACd,UAAU;AAAA,EAAA,CACX;AAEK,QAAAE,IAAaJ,GAAcE,CAAE;AAEnC,EAAIE,EAAW,UACbA,EAAW,QAAQ,CAASC,MAAA;AAC1BtG,IAAAA,EAAgBsG,GAAO;AAAA,MACrB,cAAc;AAAA,MACd,aAAa;AAAA,IAAA,CACd;AAAA,EAAA,CACF;AAEL,GASaC,KAAmB,CAAC5P,MAAyB;AACxD,QAAM,EAAE,aAAAkM,EAAA,IAAgBE,GAAmBpM,CAAO,GAC5C,EAAE,YAAA6P,EAAA,IAAe/B,GAAU9N,CAAO;AACjC,SAAA,KAAK,IAAI6P,IAAa3D,CAAW;AAC1C,GASa4D,KAAe,CAAC9P,GAAsB+P,MAAuB;AAClE,QAAAP,IAAKC,GAAgBzP,CAAO,GAC5BgQ,IAAU,SAAStE,EAAgB8D,GAAI,cAAc,GAAG,EAAE,GAE1DS,IADSvE,EAAgB8D,GAAI,UAAU,MAAM,YACzBQ,IAAU,IAAIJ,GAAiB5P,CAAO,GAC1D0P,IAAaJ,GAAcE,CAAE;AAGnC,EAAIO,MACF1G,EAAgBmG,GAAI;AAAA,IAClB,UAAU;AAAA,IACV,cAAc,GAAGQ,IAAUC,CAAO;AAAA,EAAA,CACnC,GAGGP,EAAW,UACbA,EAAW,QAAQ,CAASC,MAAA;AACpB,UAAAO,IAAexE,EAAgBiE,GAAO,cAAc;AAGtD,QAFJA,EAAM,MAAM,eAAe,GAAG,SAASO,GAAc,EAAE,IAAID,CAAO,MAE9D,CAACb,IAAgBC,EAAmB,EAAE,KAAK,OAAKjO,EAASuO,GAAOzS,CAAC,CAAC,GAAG;AACjE,YAAAiT,IAAazE,EAAgBiE,GAAO,aAAa;AACvD,MAAAA,EAAM,MAAM,cAAc,GAAG,SAASQ,GAAY,EAAE,IAAIF,CAAO;AAAA,IACjE;AAAA,EAAA,CACD;AAGP,GC9FMG,IAAkB,aCElBC,KAAiBC,GAAc,EAAE,SAAS,OAAO,WAAW,mBAAmB,GAE/EC,KAAc,CAAC1Q,GAAqB2Q,MAAiC;AACzE,QAAMC,IAAkBC,EAAOF,CAAe,KAAKA,EAAgB,aAAa,QAC1EG,IAASD,EAAOF,CAAe,KAAK,CAACC,IAAkBD,IAAkBH,IACzEO,IAAOH,IAAkBD,IAAkBf,GAAgB5P,CAAM;AAEnE,EAAA6Q,EAAO7Q,CAAM,MACX8Q,MAAWN,MACbO,EAAK,OAAOP,EAAc,GAE5BM,EAAO,OAAO9Q,CAAM;AAExB,GAEMgR,KAAc,CAAChR,GAAqB2Q,MAAiC;AACzE,QAAMC,IAAkBC,EAAOF,CAAe,KAAKA,EAAgB,aAAa,QAC1EG,IAASD,EAAOF,CAAe,KAAK,CAACC,IAAkBD,IAAkBH;AAE3E,EAAAK,EAAO7Q,CAAM,MACfA,EAAO,OAAO,GAEV8Q,MAAWN,MAAkB,CAACA,GAAe,SAAS,UACxDA,GAAe,OAAO;AAG5B,GAEMS,KAAW,CAACjR,GAAqB2Q,MAAiC;AACtE,QAAMG,IAASD,EAAOF,CAAe,KAAKA,EAAgB,aAAa,SAASA,IAAkBH;AAClG,SAAOK,EAAO7Q,CAAM,KAAK8Q,EAAO,SAAS9Q,CAAM;AACjD,GChBMkR,KAAiB,YACjBC,KAAqB,GAAGjC,CAAW,IAAIgC,EAAc,IACrDE,KAAyB,GAAGb,CAAe,IAAIW,EAAc,IAC7DG,KAAsB,IAAInC,CAAW,IAAIzP,CAAS,IAClD6R,KAA0B,IAAIf,CAAe,IAAI9Q,CAAS,IAG1D8R,IAAUd,GAAc,KAAK,GAQ7Be,KAAiB,CAACrR,MACfC,EAAc,GAAGiR,EAAmB,IAAIC,EAAuB,IAAIhO,EAAYnD,CAAO,CAAC,GAQ1FsR,KAAoB,CAACC,MAAsB;AACzC,QAAAC,IAAcD,IAAUP,KAAqBC;AACnD,GAACD,IAAoBC,EAAsB,EAAE,QAAQ,CAAK/T,MAAA;AACxDmE,IAAAA,EAAY+P,GAASlU,CAAC;AAAA,EAAA,CACvB,GACDsF,EAAS4O,GAASI,CAAW;AAC/B,GASMC,KAAgB,CAACzR,GAAsB0R,GAAkBH,MAAsB;AACnF,EAAAD,GAAkBC,CAAO,GACbhB,GAAAa,GAAS3B,GAAgBzP,CAAO,CAAC,GACzC0R,KAASlP,EAAS4O,GAAS/R,CAAS;AAC1C,GAKMsS,KAAc,MAAM;AACxB,EAAKvQ,EAASgQ,GAAS9R,CAAS,MAC9BkD,EAAS4O,GAAS9R,CAAS,GAC3B2I,GAAOmJ,CAAO;AAElB,GAKMQ,KAAc,MAAM;AACxBvQ,EAAAA,EAAY+P,GAAS9R,CAAS;AAChC,GAOMuS,KAAgB,CAAC7R,MAAgC;AACjD,EAACqR,GAAerR,CAAO,MACzBqB,EAAY+P,GAAS/R,CAAS,GAClBwR,GAAAO,GAAS3B,GAAgBzP,CAAO,CAAC,GAC7CuP,GAAevP,CAAO;AAE1B,GCrFM8R,KAAY,CAAC9R,MACVyG,EAAczG,CAAO,KAAK0L,EAAgB1L,GAAS,YAAY,MAAM,YAAYA,EAAQ,iBAAiB,MC0D7G+R,KAAgB,IAAIhD,CAAW,IAC/BiD,KAAsB,IAAIjQ,EAAY,KAAKgN,CAAW,MACtDkD,KAAuB,IAAI1S,EAAa,KAAKwP,CAAW,MACxDmD,KAAmB,GAAGnD,CAAW,WAEjCoD,KAAgB;AAAA,EACpB,UAAU;AAAA,EACV,UAAU;AACZ,GAMMC,KAAmB,CAACpS,MAAyBW,EAAmBX,GAASgP,EAAc,GAKvFqD,KAAoB,CAACrS,MAAyB,IAAIsS,GAAMtS,CAAO,GAI/DuS,KAAiBxR,EAA8B,WAAWgO,CAAW,EAAE,GACvEyD,KAAkBzR,EAA8B,YAAYgO,CAAW,EAAE,GACzE0D,KAAiB1R,EAA8B,WAAWgO,CAAW,EAAE,GACvE2D,KAAmB3R,EAA8B,aAAagO,CAAW,EAAE,GAU3E4D,KAAoB,CAACzR,MAAgB;AACnC,QAAA,EAAE,SAAAlB,EAAY,IAAAkB,GACd0R,IAAiBhD,GAAiB5P,CAAO,GACzC,EAAE,cAAAmM,GAAc,cAAA0G,EAAa,IAAIzG,GAAmBpM,CAAO,GAC3D,EAAE,cAAc8S,GAAa,cAAcC,MAAsB/S,GACjEgT,IAAgBF,MAAgBC;AAGlC,MAAA,CAACC,KAAiBJ,GAAgB;AACpC,UAAMK,IAAOxN,GAAMzF,CAAO;AAAA;AAAA,MAAgD;AAAA,QAA5C,gBACxBkT,IAAW,CAAA;AACR,IAAAA,EAAAD,CAAG,IAAI,GAAGL,CAAc,MACjCvJ,EAAgBrJ,GAASkT,CAAQ;AAAA,EACnC;AACa,EAAApD,GAAA9P,GAASgT,KAAiB7G,MAAiB0G,CAAY;AACtE,GAQMM,KAAqB,CAACjS,GAAaK,MAAkB;AACnD,QAAAC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAA1B,GAAS,QAAAoT,EAAW,IAAAlS;AACrB,EAAAM,EAAAxB,GAAS6B,GAAiBwR,EAAmB,GACpD7R,EAAOsM,GAAU9N,CAAO,GAAG4N,IAAawF,GAAQ7M,EAAc,GAC9D/E,EAAO2B,EAAYnD,CAAO,GAAGqH,IAAciM,EAAe;AAC5D,GAOMC,KAAiB,CAACrS,MAAgB;AACtC,QAAM,EAAE,UAAAiI,GAAU,SAAAnJ,GAAS,eAAAwT,EAAA,IAAkBtS;AAC7C,EAAA2Q,GAAc7R,CAAO,GACrBqJ,EAAgBrJ,GAAS,EAAE,cAAc,IAAI,SAAS,IAAI,GAC1DmT,GAAmBjS,CAAI;AAEvB,QAAMuS,IAAelB,GAAe,iBAAiBpJ,EAAS,KAAK2I,EAAS;AAExE,EAAA2B,KAAc9E,GAAM8E,CAA2B,GAEnDf,GAAiB,gBAAgBc,GACjCrS,EAAcnB,GAAS0S,EAAgB;AACzC,GAOMgB,KAAiB,CAACxS,MAAgB;AAChC,QAAA,EAAE,SAAAlB,GAAS,eAAAwT,EAAkB,IAAAtS;AACnCyN,EAAAA,GAAM3O,CAAO,GACbmT,GAAmBjS,GAAM,EAAI,GAE7BsR,GAAgB,gBAAgBgB,GAChCrS,EAAcnB,GAASwS,EAAe;AACxC,GAOMmB,KAAkB,CAACzS,MAAgB;AACjC,QAAA,EAAE,SAAAlB,GAAS,SAAA0R,EAAY,IAAAxQ;AAC7BmI,EAAAA,EAAgBrJ,GAAS,EAAE,SAAS,QAAS,CAAA,GAC7C2S,GAAkBzR,CAAI,GAEjBmQ,GAAerR,CAAO,KACzBqJ,EAAgBoG,GAAgBzP,CAAO,GAAG,EAAE,UAAU,UAAU,GAGlEwC,EAASxC,GAASV,CAAS,GAC3BsU,GAAgB5T,GAAS6T,EAAU,GACtBpR,EAAAzC,GAAS8T,IAAW,MAAM,GAEnCpC,IAASpQ,EAAqBtB,GAAS,MAAM0T,GAAexS,CAAI,CAAC,IAChEwS,GAAexS,CAAI;AAC1B,GAOM6S,KAAkB,CAAC7S,MAAgB;AACvC,QAAM,EAAE,SAAAlB,GAAS,SAAAyE,GAAS,SAAAiN,EAAA,IAAYxQ;AAIlC,EAAAuD,EAAQ,YAAYiN,KAAWtQ,EAASgQ,GAAS9R,CAAS,KAAK,CAAC+R,GAAerR,CAAO,KAE5E4R,MACZtQ,EAAqB8P,GAAS,MAAMmC,GAAerS,CAAI,CAAC,KAExDqS,GAAerS,CAAI;AAEvB,GASM8S,KAAoB,CAACtZ,MAA+B;AAClD,QAAA,EAAE,QAAAmF,EAAW,IAAAnF,GAEbgP,IAAU7J,KAAUyD,EAAQzD,GAAQmS,EAAmB,GACvDhS,IAAU0J,KAAW1G,EAAiB0G,CAAO,GAC7CxI,IAAOlB,KAAWoS,GAAiBpS,CAAO;AAGhD,EAAIkB,MAEEwI,KAAWA,EAAQ,YAAY,OAAKhP,EAAE,eAAe,GACzDwG,EAAK,gBAAgBwI,GACrBxI,EAAK,OAAO;AAEhB,GAQMoS,KAAkB,CAAC,EAAE,MAAAjO,GAAM,QAAAxF,QAAyC;AACxE,QAAMG,IAAUC,EAAciR,IAAqB/N,EAAYtD,CAAM,CAAC,GAChEqB,IAAOlB,KAAWoS,GAAiBpS,CAAO;AAGhD,MAAIkB,GAAM;AACF,UAAA,EAAE,SAAAuD,EAAY,IAAAvD;AAGlB,IAAAuD,EAAQ,YACRY,MAASuJ;AAAAA,IACTxN,EAASpB,GAASV,CAAS,MAG3B4B,EAAK,gBAAgB,MACrBA,EAAK,KAAK;AAAA,EAEd;AACF,GAOMmS,KAAsB,CAAC3Y,MAA+B;A3CpQvD,MAAA0L,GAAA6N;A2CqQG,QAAA,EAAE,eAAAC,EAAkB,IAAAxZ,GACpBwG,IAAOgT,IAAgB9B,GAAiB8B,CAAa,IAAI;AAI/D,MAAIhT,KAAQgT,KAAiB,CAACpP,EAAM,IAAIoP,CAAa,GAAG;AACtD,UAAM,EAAE,SAAAzP,GAAS,UAAA0P,GAAU,aAAAC,EAAA,IAAgBlT,GACrC,EAAE,UAAAmT,EAAa,IAAA5P,GACf,EAAE,QAAA5E,EAAW,IAAAnF,GAEb4Z,KAAenR,KAAAA,IAAAA,EAAY+Q,CAAa,MAAzB/Q,gBAAAA,EAA4B,mBAA5BA,gBAAAA,EAA4C,WAAW,QACtEoR,IAAqBH,EAAY,SAASvU,CAAM,GAChD8B,IAAU9B,KAAUyD,EAAQzD,GAAQoS,EAAoB;AAG1D,IAAAkC,KAAY,CAACI,IACTzP,EAAA;AAAA,MACJoP;AAAA,MACA,MAAM;AACJ1R,QAAAA,EAAS0R,GAAehC,EAAgB,GACxC5Q,EAAqB8S,GAAa,MAAMI,GAAoBtT,CAAI,CAAC;AAAA,MACnE;AAAA,MACA;AAAA,IAAA,KAEOS,KAAY,CAAC2S,KAAgB,CAACH,KAAY,CAACI,KAAsBF,OAC1EnT,EAAK,gBAAgBS,KAAW,MAChCT,EAAK,KAAK,GACVxG,EAAE,eAAe;AAAA,EAErB;AACF,GAOM8Z,KAAsB,CAACtT,MAAgB;AACrC,QAAA,EAAE,SAAAlB,GAAS,aAAAoU,EAAgB,IAAAlT,GAC3BuT,KAAYzM,GAA6BoM,CAAW,KAAK,KAAK;AACpE/S,EAAAA,EAAYrB,GAASkS,EAAgB,GAErCpN,EAAM,IAAI9E,GAAS,MAAM8E,EAAM,MAAM9E,CAAO,GAAGyU,CAAQ;AACzD;AAKA,MAAqBnC,WAAc1S,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAe/C,YAAYC,GAA8BC,GAAgC;AACxE,UAAMD,GAAQC,CAAM;AAmHtB;AAAA;AAAA;AAAA,IAAAC,EAAA,gBAAS,MAAM;AAET,MAAAqB,EAAS,KAAK,SAAS9B,CAAS,KAAGqT,GAAkB,IAAI;AAAA,IAAA;AAQ/D;AAAA;AAAA;AAAA;AAAA;AAAA,IAAA5S,EAAA,+BAAwB,CAACwB,MAAkB;AACnC,YAAAC,IAASD,IAAME,IAAcC,GAC7B,EAAE,UAAAyH,EAAa,IAAA;AAGrB,MAAIA,EAAS,UACXA,EAAS,QAAQ,CAAOG,MAAA9H,EAAO8H,GAAKzH,GAAiBmS,EAAiB,CAAC;AAAA,IACzE;AAjIM,UAAA,EAAE,SAAAhU,EAAY,IAAA,MAGdoU,IAAcnU,EAAc,IAAI8O,CAAW,WAAW/O,CAAO;AAGnE,IAAIoU,MACF,KAAK,cAAcA,GAEd,KAAA,WAAW,CAAC,GAAG9O,GAAiB0M,IAAqB7O,EAAYnD,CAAO,CAAC,CAAC,EAAE;AAAA,MAC/E,CAAAsJ,MAAOtG,EAAiBsG,CAAG,MAAMtJ;AAAA,IAAA,GAI9B,KAAA,WAAW,KAAK,QAAQ,aAAa,UACrC,KAAA,UAAUoB,EAASpB,GAASX,CAAS,GAC1C,KAAK,gBAAgB,MAGrB,KAAK,sBAAsB,EAAI;AAAA,EAEnC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAA2P;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAmD;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACH,IAAA/Q,EAAS,KAAK,SAAS9B,CAAS,IAAG,KAAK,KAAK,IAC5C,KAAK,KAAK;AAAA,EACjB;AAAA;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAAU,GAAS,SAAAyE,GAAS,SAAAiN,GAAS,eAAA8B,MAAkB,MAC/C,EAAE,UAAAa,EAAa,IAAA5P;AACrB,QAAIiQ,IAAe;AAEnB,QAAI,CAACtT,EAASpB,GAASV,CAAS,MAC9BiT,GAAe,gBAAgBiB,KAAiB,QAChDrS,EAAcnB,GAASuS,EAAc,GACjC,CAACA,GAAe,mBAAkB;AAE9B,YAAAoC,IAActD,GAAerR,CAAO;AAEtC,UAAA2U,KAAeA,MAAgB3U,GAAS;AACpC,cAAA4U,IACJxC,GAAiBuC,CAAW;AAAA,QAE5BhU,EAAyDgU,GAAa1F,EAAkB;AACtF,QAAA2F,KAAMA,EAAK,KAAK;AAAA,MACtB;AACA,MAAIP,KACGvD,GAASM,CAAO,IAGnBE,GAAkB,EAAI,IAFRG,GAAAzR,GAAS0R,GAAS,EAAI,GAKtCgD,IAAe1M,GAA6BoJ,CAAO,GACvCO,MAEZ,WAAW,MAAMgC,GAAgB,IAAI,GAAGe,CAAY,MAEpDf,GAAgB,IAAI,GAEhBgB,KAAevT,EAASgQ,GAAS9R,CAAS,KAChCsS;IAGlB;AAAA,EAEJ;AAAA;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAA5R,GAAS,SAAA0R,GAAS,eAAA8B,EAAA,IAAkB;AAExC,IAAApS,EAASpB,GAASV,CAAS,MAC7BmT,GAAe,gBAAgBe,KAAiB,QAChDrS,EAAcnB,GAASyS,EAAc,GAEhCA,GAAe,qBAClBpR,EAAYrB,GAASV,CAAS,GACjBmD,EAAAzC,GAAS6T,IAAY,MAAM,GACxCD,GAAgB5T,GAAS8T,EAAS,GAG9BpC,IACFpQ,EAAqBtB,GAAS,MAAM+T,GAAgB,IAAI,CAAC,IAEzDA,GAAgB,IAAI;AAAA,EAI5B;AAAA;AAAA,EA0BA,UAAU;AACF,UAAA5L,IAAQ,EAAE,GAAG,QACb,EAAE,SAAAnI,GAAS,aAAAoU,EAAgB,IAAAjM,GAE3B0M,IAAW,MAAM,MAAM;AAC7B,SAAK,sBAAsB,GAE3B,KAAK,KAAK,GAGNzT,EAASpB,GAAS,MAAM,IAE1BsB,EAAqB8S,GAAaS,CAAQ,IAEjCA;EAEb;AACF;AAxKE9U,EADmBuS,IACZ,YAAWP,KAClBhS,EAFmBuS,IAEZ,QAAOD,KACdtS,EAHmBuS,IAGZ,eAAcF;AChQvB,MAAM0C,KAAoB,IAAI1E,CAAe,IACvC2E,KAA0B,IAAIhT,EAAY,KAAKqO,CAAe,MAC9D4E,KAA2B,IAAIzV,EAAa,KAAK6Q,CAAe,MAChE6E,KAAyB,GAAG7E,CAAe,aAE3C8E,KAAoB;AAAA,EACxB,UAAU;AAAA;AAAA,EACV,UAAU;AAAA;AAAA,EACV,QAAQ;AAAA;AACV,GAMMC,KAAuB,CAACnV,MAAyBW,EAAuBX,GAASiP,EAAkB,GAKnGmG,KAAwB,CAACpV,MAAyB,IAAIqV,GAAUrV,CAAO,GAIvEsV,KAAqBvU,EAAkC,WAAWqP,CAAe,EAAE,GACnFmF,KAAsBxU,EAAkC,YAAYqP,CAAe,EAAE,GACrFoF,KAAqBzU,EAAkC,WAAWqP,CAAe,EAAE,GACnFqF,KAAuB1U,EAAkC,aAAaqP,CAAe,EAAE,GAUvFsF,KAAwB,CAACxU,MAAoB;AAC3C,QAAA,EAAE,SAAAlB,EAAY,IAAAkB,GACd,EAAE,cAAAiL,GAAc,cAAA0G,EAAa,IAAIzG,GAAmBpM,CAAO;AACpD,EAAA8P,GAAA9P,GAASmM,MAAiB0G,CAAY;AACrD,GAQM8C,KAAyB,CAACzU,GAAiBK,MAAkB;AAC3D,QAAAC,IAASD,IAAME,IAAcC,GAC7BwB,IAAMC,EAAYjC,EAAK,OAAO;AAC7B,EAAAM,EAAA0B,GAAKmE,IAAcuO,EAA0B,GAC7CpU,EAAA0B,GAAKrB,GAAiBgU,EAAuB;AACtD,GAOMC,KAAsB,CAAC5U,MAAoB;AACzC,QAAA,EAAE,SAAAlB,GAAS,SAAAyE,EAAY,IAAAvD;AAGzB,EAACuD,EAAQ,WACXiR,GAAsBxU,CAAI,GAC1BmI,EAAgBoG,GAAgBzP,CAAO,GAAG,EAAE,UAAU,UAAU,IAGlEwC,EAASxC,GAASiV,EAAsB,GACxCzS,EAASxC,GAASV,CAAS,GAC3B+J,EAAgBrJ,GAAS,EAAE,YAAY,UAAW,CAAA,GAElDsB,EAAqBtB,GAAS,MAAM+V,GAAsB7U,CAAI,CAAC;AACjE,GAOM8U,KAAsB,CAAC9U,MAAoB;AACzC,QAAA,EAAE,SAAAlB,GAAS,SAAAyE,EAAY,IAAAvD,GACvByT,IAActD,GAAerR,CAAO;AAE1C,EAAAA,EAAQ,KAAK,GAET,CAAC2U,KAAelQ,EAAQ,YAAYrD,EAASgQ,GAAS9R,CAAS,KACrDsS,MAEdtQ,EAAqBtB,GAAS,MAAMiW,GAAsB/U,CAAI,CAAC;AACjE,GASMgV,KAA0B,CAACxb,MAAkB;AACjD,QAAMgP,IAAUpG,EAAQ5I,EAAE,QAAuBqa,EAAuB,GAClE/U,IAAU0J,KAAW1G,EAAiB0G,CAAO,GAC7CxI,IAAOlB,KAAWmV,GAAqBnV,CAAO;AAGpD,EAAIkB,MACFA,EAAK,gBAAgBwI,GACrBxI,EAAK,OAAO,GAERwI,KAAWA,EAAQ,YAAY,OACjChP,EAAE,eAAe;AAGvB,GAOMmb,KAA0B,CAACnb,MAAkB;AAC3C,QAAA,EAAE,QAAAmF,EAAW,IAAAnF,GACbsF,IAAUC,EAAckR,IAAyBhO,EAAYtD,CAAc,CAAC,GAC5EsW,IAAmBlW,EAAc+U,IAA0BhV,CAAkC,GAC7FkB,IAAOlB,KAAWmV,GAAqBnV,CAAO;AAGpD,MAAIkB,GAAM;AACF,UAAA,EAAE,SAAAuD,GAAS,UAAA0E,EAAa,IAAAjI,GACxB,EAAE,UAAAmT,EAAa,IAAA5P,GACfiF,IAAUpG,EAAQzD,GAAuBkV,EAAuB,GAChEqB,IAAYjT,EAAYnD,CAAO,EAAE,aAAa;AAGpD,KAAI,CAACoR,EAAQ,SAASvR,CAAqB,KAAKwU,MAAa,cAGzD,EAAE+B,KAAaA,EAAU,WAAW,YAClC,CAACpW,EAAQ,SAASH,CAAqB,KACvCwU;AAAA,KAC4B,CAAC3K,KAAWP,EAAS,SAAStJ,CAAqB,MAC9EsW,KAAoBA,EAAiB,SAAStW,CAAqB,OAEtEqB,EAAK,gBACHiV,KAAoBA,EAAiB,SAAStW,CAAqB,IAAIsW,IAAmB,MAC5FjV,EAAK,KAAK,IAIRwI,KAAWA,EAAQ,YAAY,OAAKhP,EAAE,eAAe;AAAA,EAE7D;AACF,GAQMkb,KAA6B,CAAC,EAAE,MAAAvQ,GAAM,QAAAxF,QAA4B;AACtE,QAAMG,IAAUC,EAAckR,IAAyBhO,EAAYtD,CAAc,CAAC,GAC5EqB,IAAOlB,KAAWmV,GAAqBnV,CAAO;AAGpD,EAAIkB,KAEEA,EAAK,QAAQ,YAAYmE,MAASuJ,OACpC1N,EAAK,gBAAgB,MACrBA,EAAK,KAAK;AAGhB,GAOM6U,KAAwB,CAAC7U,MAAoB;AAC3C,QAAA,EAAE,SAAAlB,EAAY,IAAAkB;AACpBG,EAAAA,EAAYrB,GAASiV,EAAsB,GAE3CrB,GAAgB5T,GAAS6T,EAAU,GACtBpR,EAAAzC,GAAS8T,IAAW,MAAM,GAC1BrR,EAAAzC,GAAS,QAAQ,QAAQ,GAEtCmB,EAAcnB,GAASuV,EAAmB,GAE1CI,GAAuBzU,GAAM,EAAI,GACjCyN,GAAM3O,CAAO;AACf,GAOMiW,KAAwB,CAAC/U,MAAoB;AAC3C,QAAA,EAAE,SAAAlB,GAAS,UAAAmJ,EAAa,IAAAjI;AAEjBuB,EAAAA,EAAAzC,GAAS6T,IAAY,MAAM,GACxCD,GAAgB5T,GAAS8T,EAAS,GAClCF,GAAgB5T,GAAS,MAAM,GAC/BqJ,EAAgBrJ,GAAS,EAAE,YAAY,GAAI,CAAA;AAE3C,QAAMqW,IAAiBf,GAAmB,iBAAiBnM,EAAS,KAAK2I,EAAS;AAE9E,EAAAuE,KAAgB1H,GAAM0H,CAA6B,GAEvDxE,GAAc7R,CAAO,GAErBmB,EAAcnB,GAASyV,EAAoB,GAC3CpU,EAAYrB,GAASiV,EAAsB,GAGtC5D,GAAerR,CAAO,KACzB2V,GAAuBzU,CAAI;AAE/B;AAKA,MAAqBmU,WAAkBzV,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAYnD,YAAYC,GAA8BC,GAAoC;AAC5E,UAAMD,GAAQC,CAAM;AAwGtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC,EAAA,+BAAwB,CAACwB,MAAkB;AACnC,YAAAC,IAASD,IAAME,IAAcC;AACnC,WAAK,SAAS,QAAQ,CAAA4H,MAAO9H,EAAO8H,GAAKzH,GAAiBqU,EAAuB,CAAC;AAAA,IAAA;AAvG5E,UAAA,EAAE,SAAAlW,EAAY,IAAA;AAGf,SAAA,WAAW,CAAC,GAAGsF,GAAiByP,IAAyB5R,EAAYnD,CAAO,CAAC,CAAC,EAAE;AAAA,MACnF,CAAAsJ,MAAOtG,EAAiBsG,CAAG,MAAMtJ;AAAA,IAAA,GAInC,KAAK,gBAAgB,MAGrB,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAAiP;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAiG;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACH,IAAA9T,EAAS,KAAK,SAAS9B,CAAS,IAAG,KAAK,KAAK,IAC5C,KAAK,KAAK;AAAA,EACjB;AAAA;AAAA,EAGA,OAAO;AACL,UAAM,EAAE,SAAAU,GAAS,SAAAyE,GAAS,eAAA+O,EAAA,IAAkB;AAC5C,QAAIkB,IAAe;AAEnB,QAAI,CAACtT,EAASpB,GAASV,CAAS,MAC9BgW,GAAmB,gBAAgB9B,KAAiB,QACpD+B,GAAoB,gBAAgB/B,KAAiB,QACrDrS,EAAcnB,GAASsV,EAAkB,GAErC,CAACA,GAAmB,mBAAkB;AAElC,YAAAX,IAActD,GAAerR,CAAO;AACtC,UAAA2U,KAAeA,MAAgB3U,GAAS;AACpC,cAAA4U,IACJO,GAAqBR,CAAW;AAAA,QAEhChU,EAAyDgU,GAAa3F,EAAc;AAClF,QAAA4F,KAAMA,EAAK,KAAK;AAAA,MACtB;AAEA,MAAInQ,EAAQ,YACLqM,GAASM,CAAO,IAGDE,OAFlBG,GAAczR,GAAS,EAAI,GAK7B0U,IAAe1M,GAA6BoJ,CAAO,GACvCO,MAEZ,WAAW,MAAMmE,GAAoB,IAAI,GAAGpB,CAAY,MAExDoB,GAAoB,IAAI,GAEpBnB,KAAevT,EAASgQ,GAAS9R,CAAS,KAChCsS;IAGlB;AAAA,EAEJ;AAAA;AAAA,EAGA,OAAO;AACC,UAAA,EAAE,SAAA5R,GAAS,eAAAwT,EAAkB,IAAA;AAG/B,IAAApS,EAASpB,GAASV,CAAS,MAC7BkW,GAAmB,gBAAgBhC,KAAiB,QACpDiC,GAAqB,gBAAgBjC,KAAiB,QACtDrS,EAAcnB,GAASwV,EAAkB,GACpCA,GAAmB,qBACtBhT,EAASxC,GAASiV,EAAsB,GACxC5T,EAAYrB,GAASV,CAAS,GAC9B0W,GAAoB,IAAI;AAAA,EAG9B;AAAA;AAAA,EAcA,UAAU;AACF,UAAA7N,IAAQ,EAAE,GAAG,QACb,EAAE,SAAAnI,GAAS,SAAAyE,EAAY,IAAA0D,GACvBmO,IAAQ7R,EAAQ,WAAWuD,GAA6BoJ,CAAO;AAAA;AAAA,MAA+B;AAAA,OAC9FyD,IAAW,MAAM,WAAW,MAAM,MAAM,WAAWyB,IAAQ,EAAE;AACnE,SAAK,sBAAsB,GAE3B,KAAK,KAAK,GACNlV,EAASpB,GAASV,CAAS,IAC7BgC,EAAqBtB,GAAS6U,CAAQ,IAG7BA;EAEb;AACF;AAzIE9U,EADmBsV,IACZ,YAAWP,KAClB/U,EAFmBsV,IAEZ,QAAOD,KACdrV,EAHmBsV,IAGZ,eAAcF;AC5RvB,MAAMoB,KAAgB,WCAhBC,KAAmB,WCAnBC,KAAgB,WCOhBC,KAAiB,CAACC,MAAoB;AAC1C,QAAMC,IAAYD,MAAYF,IACxBI,IAAYD,IAAY,GAAGD,CAAO,WAAW,GAAGA,CAAO,SACvDG,IAAUF,IAAoD,KAAxC,cAAcD,CAAO,kBAC3CxP,IAAQ,eAAewP,CAAO,kBAC9BI,IAAO,eAAeF,CAAS;AACrC,SAAO,eAAeF,CAAO,WAAWF,EAAa,KAAKK,IAAS3P,IAAQ4P,CAAI;AACjF,GCfMC,KAAoB;AAAA,EACxB,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AACT,GCkBMC,KAAW,CAAoB/V,MAAY;AAC/C,QAAMgW,IAAa,6BACb,EAAE,SAAAlX,GAAS,SAAAmX,GAAS,WAAAC,GAAW,SAAA3S,GAAS,OAAA0C,EAAU,IAAAjG;AAGxD,MAAIiW,GAAS;AACL,UAAAE,IAAe,EAAE,GAAGL,MACpBxR,IAAMC,GAAMzF,CAAO;AAGzBqJ,IAAAA,EAAgB8N,GAAS;AAAA;AAAA,MAEvB,KAAK;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AACK,UAAAG,IAAYpW,EAAK,SAASsV,IAC1B,EAAE,aAAae,GAAU,cAAcC,MAAcL,GACrD,EAAE,aAAaM,GAAQ,cAAcC,GAAQ,aAAaC,EAAW,IAAAvL,GAAmBpM,CAAO;AACjG,QAAA,EAAE,WAAA4X,EAAc,IAAAnT;AACpB,UAAM,EAAE,aAAaoT,GAAc,aAAaC,MAAiBV,GAE3DW,KADiBrM,EAAgB0L,GAA0B,UAAU,MACpC,SACjCxE,IAA+B,KAAK,IAAnBmF,KAAuBF,IAAeC,IAAyBL,IAASE,CAAtB,GACnEK,IAAcxS,KAAOuS;AAAA;AAAA,MAAyCnF;AAAA,QAAiB,GAC/EqF,KAAeR,KAAWjS,IAAuB,IAAjBoN,KAAsB,GACtD;AAAA,MACJ,OAAOsF;AAAA,MACP,QAAQC;AAAA,MACR,MAAMC;AAAA,MACN,OAAOC;AAAA,MACP,KAAKC;AAAA,IAAA,IACH7L,GAAsBzM,GAAS,EAAI,GACjC,EAAE,GAAA1F,GAAG,GAAA8C,OAAM;AAAA,MACf,GAAGgb;AAAA,MACH,GAAGE;AAAA,IAAA;AAGLjP,IAAAA,EAAgBlC,GAAsB;AAAA,MACpC,KAAK;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACT;AACD,QAAIoR,KAA+B,GAC/BC,KAAkC,IAClCC,KAAgC,GAChCC,KAAiC,IACjCC,KAA4B,IAC5BC,KAA6B,IAC7BC,KAA8B;AAE5B,UAAAC,KAAc3R,EAAsB,eAAe,GACnD4R,KAAe5R,EAAsB,gBAAgB,GACrD6R,KAAcF,KAAa;AAG7B,QAAAhM,KAAYwL,KAAcd,IAAYuB,KAAc,GACpDnM,KAAe0L,KAAcd,IAAYW,IAAaY,MAAerB,GACrE3K,KAAaqL,IAAeb,IAAWuB,KAAad,GACpDhL,KAAcoL,IAAeb,IAAWW,IAAYY,MAAcb;AAEhE,UAAAgB,KAAc,CAAC,QAAQ,OAAO,GAC9BC,KAAY,CAAC,OAAO,QAAQ;AAEtB,IAAApM,KAAAmM,GAAY,SAASrB,CAAS,IACtCU,KAAcH,IAAa,IAAIX,IAAY,IAAIuB,KAAc,IAC7DjM,IACWF,KAAAqM,GAAY,SAASrB,CAAS,IACzCU,KAAcd,IAAY,IAAIW,IAAa,IAAIY,MAAerB,IAC9D9K,IACSG,KAAAmM,GAAU,SAAStB,CAAS,IAAIQ,IAAeF,IAAY,IAAIX,IAAW,IAAIS,IAAcjL,IAC3FC,KAAAkM,GAAU,SAAStB,CAAS,IACtCQ,IAAeb,IAAW,IAAIW,IAAY,KAAKD,KAC/CjL,IAIJ4K,IAAYqB,GAAY,SAASrB,CAAS,KAAK7K,MAAcC,KAAc,QAAQ4K,GAEvEA,IAAAA,MAAc,SAAS9K,KAAY,WAAW8K,GAC9CA,IAAAA,MAAc,YAAYhL,KAAe,QAAQgL,GACjDA,IAAAA,MAAc,UAAU7K,KAAa,UAAU6K,GAC3DA,IAAYA,MAAc,WAAW5K;AAAA;AAAA,MAAyC;AAAA,QAAS4K,GAGlFT,EAAQ,UAAU,SAASS,CAAS,MACvCT,EAAQ,YAAYA,EAAQ,UAAU,QAAQD,GAAYG,EAAaO,CAAS,CAAC,IAK/EqB,GAAY,SAASrB,CAAS,KAE5BA,MAAc,SAEDa,KAAAne,IAAIid,KAAYD,IAAYwB,KAAa,KAGzCL,KAAAne,IAAI4d,KAAaZ,IAAYwB,KAAa,IAIvDhM,MAAaF,MACD2L,KAAA,GACGC,KAAA,GACNG,KAAAL,KAAcH,IAAa,IAAIY,KAAc,KAC/CjM,MACKyL,KAAAnb,IACGob,KAAA,IACjBG,KAAWR,IAAa,IAAIW,MACnBlM,MACT2L,KAAcnb,KAAIoa,IAAYW,GACbK,KAAA,IACNG,KAAAnB,IAAYW,IAAa,IAAIW,OAE1BP,KAAAnb,KAAIoa,IAAY,IAAIW,IAAa,GACpCQ,KAAAnB,IAAY,IAAIuB,KAAc,MAElCG,GAAU,SAAStB,CAAS,MACjCA,MAAc,QACFW,KAAAnb,KAAIoa,KAAaF,IAAYyB,KAAc,KAG3CR,KAAAnb,KAAI+a,KAAcb,IAAYyB,KAAc,IAIxDhM,MACa0L,KAAA,GACHG,KAAAte,IAAI4d,IAAY,IAAIc,MACvBhM,MACMyL,KAAA,QACCC,KAAA,GACHG,KAAAX,IAAY,IAAID,KAAeI,KAAgBW,OAE7CP,KAAAne,IAAIid,IAAW,IAAIW,IAAY,GAC9CU,KAAYrB,IAAW,IAAIyB,MAK/B3P,EAAgB8N,GAAS;AAAA,MACvB,KAAK,GAAGoB,EAAW;AAAA,MACnB,QAAQC,OAAmB,KAAK,KAAK,GAAGA,EAAc;AAAA,MACtD,MAAMC,OAAiB,SAASA,KAAe,GAAGA,EAAY;AAAA,MAC9D,OAAOC,OAAkB,KAAK,GAAGA,EAAa,OAAO;AAAA,IAAA,CACtD,GAIGjS,EAAcU,CAAK,MACjBwR,OAAa,OACTxR,EAAA,MAAM,MAAM,GAAGwR,EAAQ,OAE3BC,OAAc,KACVzR,EAAA,MAAM,OAAO,GAAGyR,EAAS,OACtBC,OAAe,OAClB1R,EAAA,MAAM,QAAQ,GAAG0R,EAAU;AAGrC,UAAMM,KAAsBpY,EAA+C,cAAcqY,GAAYlY,EAAK,IAAI,CAAC,EAAE;AACjHC,IAAAA,EAAcnB,GAASmZ,EAAmB;AAAA,EAC5C;AACF,GCxLME,KAAkC;AAAA,EACtC,UAAU3C,GAAeD,EAAa;AAAA,EACtC,OAAO;AAAA,EACP,aAAa;AAAA,EACb,SAAS;AAAA,EACT,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,OAAO;AAAA,EACP,WAAW,SAAS;AAAA,EACpB,SAAS;AAAA,EACT,aAAa;AAAA,EACb,UAAU;AACZ,GCdM6C,KAAoB,uBCFpBC,KAAmB,WCSnBC,KAAU,CAACxZ,GAAsByZ,GAAiCC,MAAuC;AAE7G,MAAIxZ,GAASuZ,CAAO,KAAKA,EAAQ,QAAQ;AACnC,QAAAE,IAAQF,EAAQ;AACpB,IAAIG,GAAWF,CAAU,MAAGC,IAAQD,EAAWC,CAAK;AAGpD,UAAME,IADY,IAAI,YACS,gBAAgBF,GAAO,WAAW;AACjE,IAAA3Z,EAAQ,OAAW,GAAG6Z,EAAa,KAAK,UAAW;AAAA,EAAA;AACrD,IAAWpT,EAAcgT,CAAO,IAC9BzZ,EAAQ,OAAOyZ,CAAO,KACbK,GAAWL,CAAO,KAAMM,GAAQN,CAAO,KAAKA,EAAQ,MAAM/I,CAAM,MACzE1Q,EAAQ,OAAW,GAAGyZ,CAAQ;AAElC,GCRMO,KAAY,CAAC9Y,MAA4B;AACvC,QAAA0V,IAAY1V,EAAK,SAASqY,IAE1B,EAAE,IAAAU,GAAI,SAAAja,GAAS,SAAAyE,EAAA,IAAYvD,GAC3B,EAAE,OAAAgZ,GAAO,WAAAtC,GAAW,UAAAuC,GAAU,WAAAC,GAAW,aAAAC,GAAa,YAAAX,GAAY,aAAAY,GAAa,SAAAb,GAAS,UAAAc,EAAA,IAAa9V,GACrG+V,IAAY5D,IAAYH,KAAgBF,IACxCc,IAAe,EAAE,GAAGL;AAC1B,MAAIyD,IAAqB,CAAA,GACrBC,IAAuB,CAAA;AAEvB,EAAAjV,GAAMzF,CAAO,MACfqX,EAAa,OAAO,OACpBA,EAAa,QAAQ;AAIvB,QAAMsD,KAAiB,MAAMH,CAAS,IAAInD,EAAaO,CAAS,CAAC;AAG7D,MAAAgD;AACA,MAAAnU,EAAc0T,CAAQ;AACN,IAAAS,KAAAT;AAAA,OACb;AACC,UAAAU,IAAavK,GAAc,KAAK;AAC9B,IAAAkJ,GAAAqB,GAAYV,GAAUT,CAAU,GACxCkB,KAAkBC,EAAW;AAAA,EAC/B;AAGA,EAAA3Z,EAAK,UAAUuF,EAAcmU,EAAe,IACvCA,GAAgB,UAAU,EAAI;AAAA;AAAA,IACJ;AAAA;AAEzB,QAAA,EAAE,SAAAzD,EAAY,IAAAjW;AAEpB,MAAIiW,GAAS;AAEE1U,IAAAA,EAAA0U,GAAS,MAAM8C,CAAE,GACjBxX,EAAA0U,GAAS,QAAQV,EAAa;AAE3C,UAAMI,IAAYD,IAAY,GAAGH,EAAa,WAAW,GAAGF,EAAa,SACnEuE,KAAgBlE,IAAY,OAAO3W,EAAc,IAAIsW,EAAa,WAAWY,CAAO,GACpF4D,IAAc9a,EAAc,IAAI4W,CAAS,IAAIM,CAAO;AAG1D,IAAAjW,EAAK,QAAQjB,EAAc,IAAIua,CAAS,UAAUrD,CAAO;AACnD,UAAA,EAAE,OAAAhQ,EAAU,IAAAjG;AAElB,QAAIuF,EAAcyT,CAAK;AAAG,MAAAO,IAAa,CAACP,EAAM,UAAU,EAAI,CAAC;AAAA,SACxD;AACG,YAAAc,IAAY1K,GAAc,KAAK;AAC7B,MAAAkJ,GAAAwB,GAAWd,GAAOR,CAAU,GACpCe,IAAa,CAAK,GAAGO,EAAU,UAAW;AAAA,IAC5C;AAEA,QAAIvU,EAAcgT,CAAO;AAAG,MAAAiB,IAAe,CAACjB,EAAQ,UAAU,EAAI,CAAC;AAAA,SAC9D;AACG,YAAAwB,IAAc3K,GAAc,KAAK;AAC/B,MAAAkJ,GAAAyB,GAAaxB,GAASC,CAAU,GACxCgB,IAAe,CAAK,GAAGO,EAAY,UAAW;AAAA,IAChD;AAGA,QAAIX;AACF,UAAIJ;AACF,YAAIzT,EAAc8T,CAAQ;AAAG,UAAAE,IAAa,CAAC,GAAGA,GAAYF,EAAS,UAAU,EAAI,CAAC;AAAA,aAC7E;AACG,gBAAAW,IAAU5K,GAAc,KAAK;AAC3B,UAAAkJ,GAAA0B,GAASX,GAAUb,CAAU,GACrCe,IAAa,CAAC,GAAGA,GAAYS,EAAQ,UAAkB;AAAA,QACzD;AAAA,eAGIJ,MAAeA,GAAc,OAAO,GACpCrU,EAAc8T,CAAQ;AAAG,QAAAG,IAAe,CAAC,GAAGA,GAAcH,EAAS,UAAU,EAAI,CAAC;AAAA,WACjF;AACG,cAAAW,IAAU5K,GAAc,KAAK;AAC3B,QAAAkJ,GAAA0B,GAASX,GAAUb,CAAU,GACrCgB,IAAe,CAAC,GAAGA,GAAcQ,EAAQ,UAAkB;AAAA,MAC7D;AAOJ,IAAKtE,IAOMsD,KAASa,KAAqBvB,GAAAuB,GAAab,GAAOR,CAAU,KALjEQ,KAASY,MAAuBtB,GAAAsB,IAAeL,GAAYf,CAAU,GAErED,KAAWsB,KAAqBvB,GAAAuB,GAAaL,GAAchB,CAAU,GAEzExY,EAAK,MAAMjB,EAAc,cAAckX,CAAO,KAAK,SAKrD3U,EAAS2U,GAAS,gBAAgB,GAClC3U,EAAS2E,GAAO,mBAAmB,GAI9B/F,EAAS+V,GAASqD,CAAS,KAAGhY,EAAS2U,GAASqD,CAAS,GAE1DJ,KAAa,CAAChZ,EAAS+V,GAAS9X,CAAS,KAAGmD,EAAS2U,GAAS9X,CAAS,GAEvEgb,KAAe,CAACjZ,EAAS+V,GAASkD,CAAW,KAC/C7X,EAAS2U,GAASkD,CAAW,GAG1BjZ,EAAS+V,GAASwD,EAAc,KAAGnY,EAAS2U,GAASwD,EAAc;AAAA,EAC1E;AACF,GCrHMQ,KAAsB,CAACnb,MAAqC;AAC1D,QAAAob,IAAiB,CAAC,QAAQ,MAAM,GAChCC,IAA2B,CAAA;AAC7B,MAAA,EAAE,YAAAC,EAAe,IAAAtb;AAErB,SAAOsb,KAAc,CAACF,EAAe,SAASE,EAAW,QAAQ;AAC/D,IAAAA,IAAaC,GAAcD,CAAU,GAE/BE,GAAaF,CAAU,KAAKG,GAAeH,CAAU,KACzDD,EAAW,KAAKC,CAAU;AAI9B,SACED,EAAW,KAAK,CAACne,GAAG,MAEhBwO,EAAgBxO,GAAkB,UAAU,MAAM,cAClDme,EAAW,MAAM,IAAI,CAAC,EAAE,MAAM,CAAKrgB,MAAA0Q,EAAgB1Q,GAAkB,UAAU,MAAM,QAAQ,IAEtFkC,IAEF,IACR;AAAA,EAAgDiG,EAAYnD,CAAO,EAAE;AAE1E,GC2BM0b,KAAkB,IAAI3Z,EAAY,KAAK0U,EAAa,iBAAiBA,EAAa,MAClFkF,KAAY;AAOlB,IAAIC,KAAqB,CAAC5b,MAAyBW,EAAqBX,GAASuZ,EAAgB;AAKjG,MAAMsC,KAAsB,CAAC7b,MAAyB,IAAI8b,GAAQ9b,CAAO,GASnE+b,KAAgB,CAAC7a,MAAkB;AACvC,QAAM,EAAE,SAAAlB,GAAS,SAAAmX,GAAS,WAAAC,GAAW,cAAA4E,MAAiB9a;AACtD0S,EAAAA,GAAgB5T,GAASic,EAAe,GACxCpL,GAAYsG,GAAwBC,MAAc4E,IAAe5E,IAAY4E,CAAY;AAC3F,GAOME,KAAS,CAAChb,MAAuC;AACrD,QAAM,EAAE,SAAAiW,GAAS,WAAAC,GAAW,cAAA4E,EAAA,IAAiB9a;AAE7C,SAAOiW,KAAWrG,GAASqG,GAASC,MAAc4E,IAAe5E,IAAY4E,CAAY;AAC3F,GAQMG,KAAyB,CAACjb,GAAe2T,MAA0B;AACjE,QAAA,EAAE,SAAA7U,EAAY,IAAAkB;AACpB,EAAAA,EAAK,sBAAsB,GAGvBgJ,GAAalK,GAASsZ,EAAiB,KAAKpY,EAAK,SAASqY,MAC5D6C,GAAmBlb,CAAI,GAGrB2T,KAAmBA;AACzB,GAQMwH,KAAsB,CAACnb,GAAeK,MAAkB;AACtD,QAAAC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAA1B,EAAY,IAAAkB;AAEpB,EAAAM,EAAO2B,EAAYnD,CAAO,GAAGiH,IAAiB/F,EAAK,aAAaqF,EAAc,GAE9E,CAACoH,IAAaC,EAAW,EAAE,QAAQ,CAAMC,MAAA;AACvC,IAAArM,EAAOsM,GAAU9N,CAAO,GAAG6N,GAAI3M,EAAK,QAAQqF,EAAc;AAAA,EAAA,CAC3D;AACH,GAOM+V,KAAqB,CAACpb,MAAkB;AACtC,QAAA,EAAE,SAAAlB,EAAY,IAAAkB,GACdqb,IAAoBxb,EAA+C,YAAYqY,GAAYlY,EAAK,IAAI,CAAC,EAAE;AAE7G,EAAAmb,GAAoBnb,GAAM,EAAI,GAC9BC,EAAcnB,GAASuc,CAAiB,GAClCzX,EAAA,MAAM9E,GAAS,IAAI;AAC3B,GAOMwc,KAAsB,CAACtb,MAAkB;AACvC,QAAA,EAAE,SAAAlB,EAAY,IAAAkB,GACdub,IAAqB1b,EAA+C,aAAaqY,GAAYlY,EAAK,IAAI,CAAC,EAAE;AAE/G,EAAAmb,GAAoBnb,CAAI,GACxB6a,GAAc7a,CAAI,GAClBC,EAAcnB,GAASyc,CAAkB,GAEnC3X,EAAA,MAAM9E,GAAS,KAAK;AAC5B,GAQM0c,KAA4B,CAACxb,GAAeK,MAAkB;AAC5D,QAAAC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAA1B,GAAS,WAAAoX,GAAW,cAAA4E,EAAA,IAAiB9a,GACvC,EAAE,cAAAyb,GAAc,cAAA9J,EAAiB,IAAAuE,GACjCwF,IAActZ,EAAQtD,GAAS,IAAI+O,CAAW,EAAE,GAChD8N,IAAkBvZ,EAAQtD,GAAS,IAAIoQ,CAAe,EAAE,GAGxD0M,IAAMhP,GAAU9N,CAAO,GAEvB+c,IAAe3F,MAAc4E,KADlBW,MAAiB9J,IAC4BuE,IAAY0F;AAC1E,EAAAtb,EAAOub,GAAcnP,IAAa1M,EAAK,QAAQqF,EAAc,GAC7D/E,EAAOub,GAAcpP,IAAazM,EAAK,QAAQqF,EAAc,GAGzDqW,KAAapb,EAAOob,GAAa,WAAW7N,CAAW,IAAI7N,EAAK,UAAU,GAC1E2b,KAAiBrb,EAAOqb,GAAiB,WAAWzM,CAAe,IAAIlP,EAAK,UAAU;AAC5F,GAQMkb,KAAqB,CAAClb,GAAeuY,MAAqB;AAExD,QAAAuD,IAAW,CAAC1D,IAAmBqC,EAAS,GACxC,EAAE,SAAA3b,EAAY,IAAAkB;AAEpBuB,EAAAA;AAAAA,IACEzC;AAAA,IACAgd,EAASvD,IAAU,IAAI,CAAC;AAAA,IACxBA,KAAWlX,GAAavC,GAASgd,EAAS,CAAC,CAAC;AAAA,IAAgC;AAAA,EAAA,GAE9EpJ,GAAgB5T,GAASgd,EAASvD,IAAU,IAAI,CAAC,CAAC;AACpD;AAKA,MAAqBqC,WAAgBlc,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBjD,YAAYC,GAA8BC,GAAkC;AAC1E,UAAMD,GAAQC,CAAM;AA6DtB;AAAA;AAAA;AAAA,IAAAC,EAAA,qBAAc,MAAM4O,GAAM,KAAK,OAAO;AAEtC;AAAA,IAAA5O,EAAA,oBAAa,MAAM,KAAK;AAsCxB;AAAA,IAAAA,EAAA,oBAAa,MAAM,KAAK;AAgCxB;AAAA,IAAAA,EAAA,gBAAS,MAAM;AACb,MAAAkX,GAAkB,IAAI;AAAA,IAAA;AAIxB;AAAA,IAAAlX,EAAA,gBAAS,MAAM;AACP,YAAA,EAAE,SAAAoX,EAAY,IAAA;AAEhB,MAAAA,KAAW,CAAC+E,GAAO,IAAI,IAAG,KAAK,KAAK,IACnC,KAAK,KAAK;AAAA,IAAA;AAyCjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAnc,EAAA,qBAAc,CAAC,EAAE,QAAAF,QAAyB;AAClC,YAAA,EAAE,SAAAsX,GAAS,SAAAnX,EAAY,IAAA;AAI1B,MAAAmX,KAAWA,EAAQ,SAAStX,CAAqB,KAClDA,MAAWG,KACVH,KAAUG,EAAQ,SAASH,CAAqB,KAIjD,KAAK,KAAK;AAAA,IACZ;AAQF;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAE,EAAA,+BAAwB,CAACwB,MAAkB;AACnC,YAAAC,IAASD,IAAME,IAAcC,GAE7B,EAAE,SAAA1B,GAAS,SAAAyE,GAAS,KAAA6E,EAAA,IAAQ,MAC5B,EAAE,SAAAI,EAAY,IAAAjF,GAEd6V,IAAc,GADF,KAAK,SAASf,MACE9U,EAA2B;AAG7D,MAAKiF,EAAQ,SAAS,QAAQ,MACvB,KAAA,UAAU,CAAC,CAACnI,GAEMmI,EAAQ,MAAM,GAAG,EAEzB,QAAQ,CAAMuT,MAAA;AAE3B,QAAIA,MAAOC,MACF1b,EAAAxB,GAASoO,IAAgB,KAAK,UAAU,GACxC5M,EAAAxB,GAAS8G,IAAiB,KAAK,UAAU,GAG3CwT,MACI9Y,EAAAxB,GAAS+G,IAAiB,KAAK,UAAU,GAChDvF,EAAO2B,EAAYnD,CAAO,GAAGiH,IAAiB,KAAK,aAAaV,EAAc,MAEvE0W,MAAOpb,IAChBL,EAAOxB,GAASid,GAAK3C,IAA4B,KAAK,aAAnB,KAAK,MAAwB,IACvD2C,MAAO1P,OACT/L,EAAAxB,GAASmd,IAAc,KAAK,UAAU,GAExC7C,KAAoB9Y,EAAAxB,GAASod,IAAe,KAAK,UAAU,GAE5DC,MACK7b,EAAAxB,GAAS6B,GAAiB,KAAK,WAAW,IAIjDyY,KAAehR,KACV9H,EAAA8H,GAAKzH,GAAiB,KAAK,UAAU;AAAA,MAC9C,CACD;AAAA,IACH;AAlPM,UAAA,EAAE,SAAA7B,EAAY,IAAA,MACd4W,IAAY,KAAK,SAAS2C,IAC1BiB,IAAY5D,IAAYH,KAAgBF,IACxC+G,IAAe1G,IAAY2C,KAAmB/C;AAGpD,IAAAoF,KAAqB,CAAoB2B,MAAsB5c,EAAe4c,GAAMD,CAAY,GAGhG,KAAK,UAAU,IAEf,KAAK,KAAK,GAAG9C,CAAS,IAAIgD,GAAOxd,GAASwa,CAAS,CAAC;AAG9C,UAAA,EAAE,SAAA/V,EAAY,IAAA;AAGhB,IAAG,CAACA,EAAQ,SAASmS,KAAe,CAACA,KAAa,CAACnS,EAAQ,YAE7DsD,GAAasR,IAAiB,EAAE,WAAW,GAAI,CAAA,GAI3CnP,GAAalK,GAAS2b,EAAS,KAAK/E,KAAa,OAAOnS,EAAQ,SAAU,YACzD2X,GAAA,MAAM3X,EAAQ,KAAK,GAInC,KAAA,YAAY0W,GAAoBnb,CAAO,GAC5C,KAAK,eAAe,CAAC,UAAU,OAAO,EAAE;AAAA,MACtC,CAAYyd,MAAA/R,EAAgB,KAAK,WAA0B,UAAU,MAAM+R;AAAA,IAAA,IAExE,KAAK,YACNta,EAAY,KAAK,OAAO,EAAE,MAG9B6W,GAAU,IAAI,GAGd,KAAK,sBAAsB,EAAI;AAAA,EAEnC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAAT;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAF;AAAA,EACT;AAAA,EAQA,OAAO;AACL,UAAM,EAAE,SAAA5U,GAAS,SAAA0S,GAAS,SAAAnX,GAAS,WAAAoX,GAAW,cAAA4E,GAAc,IAAA/B,EAAO,IAAA,MAC7D,EAAE,WAAAG,EAAc,IAAA3V,GAChBiZ,IAAW5Y,EAAM,IAAI9E,GAAS,KAAK,GACnC2d,IAAevG,MAAc4E,IAAe5E,IAAY4E;AAExDlX,IAAAA,EAAA,MAAM9E,GAAS,KAAK,GAEtBmX,KAAW,CAACuG,KAAY,CAACxB,GAAO,IAAI,KAChCpX,EAAA;AAAA,MACJ9E;AAAA,MACA,MAAM;AACJ,cAAM4d,IAAmB7c,EAA+C,WAAWqY,GAAY,KAAK,IAAI,CAAC,EAAE;AAC3GjY,QAAAA,EAAcnB,GAAS4d,CAAgB,GAClCA,EAAiB,qBAEpBrN,GAAY4G,GAASwG,CAAY,GAEjClb,EAAazC,GAASic,IAAiB,IAAIhC,CAAE,EAAE,GAE/C,KAAK,OAAO,GACZyC,GAA0B,MAAM,EAAI,GAG/Btb,EAAS+V,GAAS7X,CAAS,KAAGkD,EAAS2U,GAAS7X,CAAS,GAE1D8a,IAAW9Y,EAAqB6V,GAAS,MAAMmF,GAAmB,IAAI,CAAC,IACtEA,GAAmB,IAAI;AAAA,MAEhC;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,EAGN;AAAA,EAIA,OAAO;AACL,UAAM,EAAE,SAAA7X,GAAS,SAAA0S,GAAS,SAAAnX,EAAA,IAAY,MAChC,EAAE,WAAAoa,GAAW,OAAA9D,EAAU,IAAA7R;AAEvBK,IAAAA,EAAA,MAAM9E,GAAS,IAAI,GAGrBmX,KAAW+E,GAAO,IAAI,KAClBpX,EAAA;AAAA,MACJ9E;AAAA,MACA,MAAM;AACJ,cAAM6d,IAAmB9c,EAA+C,WAAWqY,GAAY,KAAK,IAAI,CAAC,EAAE;AAC3GjY,QAAAA,EAAcnB,GAAS6d,CAAgB,GAElCA,EAAiB,qBACpB,KAAK,OAAO,GACZxc,EAAY8V,GAAS7X,CAAS,GAC9Bod,GAA0B,IAAI,GAG1BtC,IAAW9Y,EAAqB6V,GAAS,MAAMqF,GAAoB,IAAI,CAAC,IACvEA,GAAoB,IAAI;AAAA,MAEjC;AAAA,MACAlG,IAAQ;AAAA,MACR;AAAA,IAAA;AAAA,EAGN;AAAA;AAAA,EAgBA,SAAS;AACD,UAAA,EAAE,SAAAwH,EAAY,IAAA;AAEpB,IAAKA,MACH,KAAK,sBAAsB,EAAI,GAC/B,KAAK,UAAU,CAACA;AAAA,EAEpB;AAAA;AAAA,EAGA,UAAU;AACR,UAAM,EAAE,SAAA3G,GAAS,SAAA1S,GAAS,SAAAqZ,EAAA,IAAY,MAChC,EAAE,WAAA1D,EAAc,IAAA3V;AAEtB,IAAIqZ,MACE3G,KAAW+E,GAAO,IAAI,KAAK9B,KAC7B,KAAK,KAAK,GACV9Y,EAAqB6V,GAAS,MAAM,KAAK,sBAAuB,CAAA,KAEhE,KAAK,sBAAsB,GAE7B,KAAK,UAAU,CAAC2G;AAAA,EAEpB;AAAA;AAAA,EAGA,gBAAgB;AACd,IAAK,KAAK,UACL,KAAK,QAAQ,IADC,KAAK,OAAO;AAAA,EAEjC;AAAA;AAAA,EAyEA,UAAU;AACF,UAAA,EAAE,SAAA3G,GAAS,SAAA1S,EAAY,IAAA,MACvB0D,IAAQ,EAAE,GAAG,MAAM,MAAM,KAAK,QAC9B0M,IAAW,MAAM,WAAW,MAAMsH,GAAuBhU,GAAO,MAAM,MAAM,QAAA,CAAS,GAAG,EAAE;AAEhG,IAAI1D,EAAQ,aAAayX,GAAO/T,CAAK,KACnC,KAAK,QAAQ,QAAQ,GACrB,KAAK,KAAK,GACV7G,EAAqB6V,GAAwBtC,CAAQ,KAE5CA;EAEb;AACF;AAvRE9U,EADmB+b,IACZ,YAAWJ,KAClB3b,EAFmB+b,IAEZ,QAAOD,KACd9b,EAHmB+b,IAGZ,eAAcF,KACrB7b,EAJmB+b,IAIZ,YAAW7E;ACxMpB,MAAM8G,KAAkB,IAAIhc,EAAY,KAAKwU,EAAa,iBAAiBA,EAAa,MAElFyH,KAAkCjW,GAAa,CAAC,GAAGsR,IAAiB;AAAA,EACxE,UAAU3C,GAAeH,EAAa;AAAA,EACtC,SAAS;AAAA,EACT,aAAa;AAAA,EACb,UAAU;AACZ,CAAC,GAOK0H,KAAqB,CAACje,MAAyBW,EAAqBX,GAASwW,EAAgB,GAK7F0H,KAAsB,CAACle,MAAyB,IAAIme,GAAQne,CAAO;AAKzE,MAAqBme,WAAgBrC,GAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,EAW3C,YAAYjc,GAA8BC,GAAkC;AAC1E,UAAMD,GAAQC,CAAM;AAgBtB;AAAA,IAAAC,EAAA,cAAO,MAAM;AACX,YAAM,KAAK;AAEL,YAAA,EAAE,SAAA0E,GAAS,KAAA6E,EAAQ,IAAA;AAEzB,MAAI7E,EAAQ,eAAe6E,KAAK,WAAW,MAAMqF,GAAMrF,CAAG,GAAG,EAAE;AAAA,IAAA;AAAA,EApBjE;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,OAAO;AACF,WAAAkN;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAwH;AAAA,EACT;AAUF;AAlCEje,EADmBoe,IACZ,YAAWJ,KAClBhe,EAFmBoe,IAEZ,QAAOD,KACdne,EAHmBoe,IAGZ,eAAcF,KACrBle,EAJmBoe,IAIZ,YAAWlH;AC5CpB,MAAMmH,KAAkB,aCAlBC,KAAqB,aCiCrBC,KAAoB,0BAEpBC,KAAsC;AAAA,EAC1C,QAAQ;AAAA,EACR,QAAQ;AACV,GAMMC,KAAuB,CAACxe,MAAyBW,EAAuBX,GAASqe,EAAkB,GAKnGI,KAAwB,CAACze,MAAyB,IAAI0e,GAAU1e,CAAO,GAIvE2e,KAAoB5d,EAAkC,eAAeqd,EAAe,EAAE,GAStFQ,KAAmB,CAAC1d,MAAoB;AAC5C,QAAM,EAAE,QAAArB,GAAQ,cAAAkd,GAAc,SAAAtY,GAAS,aAAAoa,GAAa,cAAAhM,GAAc,SAAA7S,EAAY,IAAAkB,GACxE,EAAE,QAAAuK,EAAW,IAAAhH,GACbqa,IAAQC,GAAShC,CAA6B,GAE9CiC,IAAQnf,KAAUof,GAAqB,KAAKpf,CAAM,GAClDqf,IAAenC,IAAeoC,GAAgBpC,CAAY;AAAA;AAAA,IAA+BlK;AAAA;AAM/F,MAJA3R,EAAK,YAAY4d,IAAS/B,EAAwB,UAAWA,EAA6B,WAItFiC,MAAUE,MAAiBrM,KAAgBgM,MAAgBG,EAAM,SAAS;AACxE,QAAAI,GACAC,GACAC;AAGJ,IAAApe,EAAK,QAAQ,IACbA,EAAK,UAAU,IACfA,EAAK,eAAege,GACpBhe,EAAK,YAAYA,EAAK,eAAeqe,GAAgBre,CAAI,GAEzD,CAAC,GAAG8d,CAAK,EAAE,QAAQ,CAAQQ,MAAA;AAClB,MAAAJ,IAAA7c,GAAaid,GAAM,MAAM,GAChCH,IACED,KAAQA,EAAK,OAAO,CAAC,MAAM,OAAOA,EAAK,MAAM,EAAE,MAAM,OAAOnf,EAAcmf,GAAMjc,EAAYnD,CAAO,CAAC,GAElGqf,MACGne,EAAA,MAAM,KAAKse,CAAI,GACpBF,IAAO7S,GAAsB4S,CAAU,GAClCne,EAAA,QAAQ,MAAM4d,IAAQQ,EAAK,MAAMpe,EAAK,YAAYme,EAAW,aAAa5T,CAAM;AAAA,IACvF,CACD,GACIvK,EAAA,cAAcA,EAAK,MAAM;AAAA,EAChC;AACF,GAQMie,KAAkB,CAACpC,MAChBtW,EAAcsW,CAAoB,IACpCA,EAA6B,eAC9B3Q,GAAmB2Q,CAAoB,EAAE,cAQzCwC,KAAkB,CAAC,EAAE,SAAAvf,GAAS,cAAA+c,QAC3BgC,GAAShC,CAAoB,IAAKA,EAAwB,cAActQ,GAAsBzM,CAAO,EAAE,QAQ1Gyf,KAAQ,CAAC5f,MAAwB;AACrC,GAAC,GAAGof,GAAqB,KAAKpf,CAAM,CAAC,EAAE,QAAQ,CAAQ6f,MAAA;AACjD,IAAAte,EAASse,GAAM5d,CAAW,KAAGT,EAAYqe,GAAM5d,CAAW;AAAA,EAAA,CAC/D;AACH,GAQM6d,KAAW,CAACze,GAAiBwe,MAAsB;AACjD,QAAA,EAAE,QAAA7f,GAAQ,SAAAG,EAAY,IAAAkB;AAC5B,EAAIuF,EAAc5G,CAAM,KAAG4f,GAAM5f,CAAM,GACvCqB,EAAK,aAAawe,GAClBld,EAASkd,GAAM5d,CAAW;AAG1B,QAAM8d,IAAyB,CAAA;AAC/B,MAAIC,IAAaH;AACV,SAAAG,MAAepQ,GAAgBzP,CAAO;AAC3C,IAAA6f,IAAaA,EAAW,gBACpBze,EAASye,GAAY,KAAK,KAAKze,EAASye,GAAY,eAAe,MAAGD,EAAQ,KAAKC,CAAU;AAGnG,EAAAD,EAAQ,QAAQ,CAAYE,MAAA;AAC1B,UAAMC,IAAaD,EAAS;AAG5B,IAAIC,KAAc,CAAC3e,EAAS2e,GAAYje,CAAW,KACjDU,EAASud,GAAYje,CAAW;AAAA,EAClC,CACD,GAGD6c,GAAkB,gBAAgBe,GAClCve,EAAcnB,GAAS2e,EAAiB;AAC1C;AAKA,MAAqBD,WAAkB9e,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBnD,YAAYC,GAA8BC,GAAoC;AAC5E,UAAMD,GAAQC,CAAM;AAuCtB;AAAA;AAAA;AAAA;AAAA,IAAAC,EAAA,iBAAU,MAAM;AACR,YAAA,EAAE,QAAAF,EAAW,IAAA;AAInB,UAAI4G,EAAc5G,CAAM,KAAKA,EAAO,eAAe,GAAG;AACpD,QAAA+e,GAAiB,IAAI;AAErB,cAAM,EAAE,WAAAoB,GAAW,WAAAC,GAAW,aAAApB,GAAa,OAAAqB,GAAO,YAAAxb,EAAe,IAAA;AAEjE,YAAIsb,KAAaC,GAAW;AACpB,gBAAAE,IAAgBD,EAAMrB,IAAc,CAAC;AAG3C,UAAIna,MAAeyb,KACjBR,GAAS,MAAMQ,CAAa;AAE9B;AAAA,QACF;AAEM,cAAA,EAAE,SAAAC,EAAY,IAAA;AAEhB,YAAA1b,KAAcsb,IAAYI,EAAQ,CAAC,KAAKA,EAAQ,CAAC,IAAI,GAAG;AAC1D,eAAK,aAAa,MACdvgB,KAAQ4f,GAAM5f,CAAM;AACxB;AAAA,QACF;AAEM,QAAAqgB,EAAA,QAAQ,CAACR,GAAMhkB,MAAM;AACzB,UACEgJ,MAAegb,KACfM,KAAaI,EAAQ1kB,CAAC,MACrB,OAAO0kB,EAAQ1kB,IAAI,CAAC,IAAM,OAAeskB,IAAYI,EAAQ1kB,IAAI,CAAC,MAEnEikB,GAAS,MAAMD,CAAI;AAAA,QACrB,CACD;AAAA,MACH;AAAA,IAAA;AAQF;AAAA;AAAA;AAAA;AAAA;AAAA,IAAA3f,EAAA,+BAAwB,CAACwB,MAAkB;AAEzC,OADeA,IAAME,IAAcC,GAC5B,KAAK,cAA6BiM,IAAa,KAAK,SAASpH,EAAc;AAAA,IAAA;AAnF5E,UAAA,EAAE,SAAAvG,GAAS,SAAAyE,EAAY,IAAA;AAG7B,SAAK,SAASxE,EAAcwE,EAAQ,QAAgCtB,EAAYnD,CAAO,CAAC,GAGpF,KAAK,WAEP,KAAK,eAAeA,EAAQ,eAAeA,EAAQ,eAAeA,IAAU8N,GAAU9N,CAAO,GACxF,KAAA,eAAemf,GAAgB,KAAK,YAAY,GAGrD,KAAK,sBAAsB,EAAI,GAE/B,KAAK,QAAQ;AAAA,EAEjB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,OAAO;AACF,WAAAd;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAE;AAAA,EACT;AAAA;AAAA,EAyDA,UAAU;AACR,SAAK,sBAAsB,GAC3B,MAAM,QAAQ;AAAA,EAChB;AACF;AAjHExe,EADmB2e,IACZ,YAAWJ,KAClBve,EAFmB2e,IAEZ,QAAOD,KACd1e,EAHmB2e,IAGZ,eAAcF;AC5KvB,MAAM6B,KAAY,OCAZC,KAAe,OCqCfC,KAAc,IAAIxe,EAAY,KAAKse,EAAS,MAM5CG,KAAiB,CAACxgB,MAAyBW,EAAiBX,GAASsgB,EAAY,GAGjFG,KAAkB,CAACzgB,MAAyB,IAAI0gB,GAAI1gB,CAAO,GAI3D2gB,KAAe5f,EAA4B,WAAWsf,EAAS,EAAE,GACjEO,KAAgB7f,EAA4B,YAAYsf,EAAS,EAAE,GACnEQ,KAAe9f,EAA4B,WAAWsf,EAAS,EAAE,GACjES,KAAiB/f,EAA4B,aAAasf,EAAS,EAAE,GAarEU,yBAA+C,OAS/CC,KAAgB,CAAC9f,MAAc;AAC7B,QAAA,EAAE,YAAA+f,GAAY,KAAAC,EAAQ,IAAAhgB;AAG5B,EAAI+f,KAAc7f,EAAS6f,GAAY7Y,EAAe,MACpD6Y,EAAW,MAAM,SAAS,IAC1B5f,EAAY4f,GAAY7Y,EAAe,IAIrC8Y,KAAKpc,EAAM,MAAMoc,CAAG;AAC1B,GAOMC,KAAiB,CAACjgB,MAAc;AACpC,QAAM,EAAE,SAAAlB,GAAS,YAAAihB,GAAY,SAASG,GAAa,KAAAF,EAAQ,IAAAhgB,GACrD,EAAE,KAAAmgB,MAAS5a,EAAcya,CAAG,KAAKH,GAAW,IAAIG,CAAG;AAAA,EAAiC,EAAE,KAAK;AAGjG,MAAID,KAAcG,KAAehgB,EAASggB,GAAa/hB,CAAS,GAAG;AACjE,UAAM,EAAE,eAAAiiB,GAAe,YAAAC,EAAA,IAAeR,GAAW,IAAI/gB,CAAO;AAAA,IAAgC;AAAA,MAC1F,eAAe;AAAA,MACf,YAAY;AAAA,IAAA;AAEd,IAAIshB,MAAkBC,IACpBP,GAAc9f,CAAI,IAGlB,WAAW,MAAM;AACJ,MAAA+f,EAAA,MAAM,SAAS,GAAGM,CAAU,MACvCtZ,GAAOgZ,CAAU,GACjB3f,EAAqB2f,GAAY,MAAMD,GAAc9f,CAAI,CAAC;AAAA,OACzD,EAAE;AAAA,EAEE;AAAA,IAAAggB,KAAKpc,EAAM,MAAMoc,CAAG;AAE/B,EAAAN,GAAc,gBAAgBS,GAE9BlgB,EAAcnB,GAAS4gB,EAAa;AACtC,GAOMY,KAAiB,CAACtgB,MAAc;AACpC,QAAM,EAAE,SAAAlB,GAAS,SAASohB,GAAa,YAAAH,GAAY,KAAAC,EAAQ,IAAAhgB,GACrD,EAAE,KAAAmgB,GAAK,SAAA5H,MAAayH,KAAOH,GAAW,IAAIG,CAAG;AAAA,EAAiC,EAAE,KAAK,MAAM,SAAS,KAAK;AAC/G,MAAII,IAAgB;AAehB,MAZAL,KAAcG,KAAehgB,EAASggB,GAAa/hB,CAAS,MAC9D,CAACoa,GAAS2H,CAAW,EAAE,QAAQ,CAAKlkB,MAAA;AAClC,IAAIuJ,EAAcvJ,CAAC,KAAGsF,EAAStF,GAAG,iBAAiB;AAAA,EAAA,CACpD,GACeokB,IAAA7a,EAAcgT,CAAO,IAAIA,EAAQ;AAAA;AAAA,IAA0C;AAAA,MAI7FkH,GAAa,gBAAgBU,GAC7BP,GAAe,gBAAgB9gB,GAC/BmB,EAAcnB,GAAS2gB,EAAY,GAE/B,CAACA,GAAa,kBAAkB;AAKlC,QAJIS,KAAa5e,EAAS4e,GAAatf,CAAW,GAC9C2X,KAASpY,EAAYoY,GAAS3X,CAAW,GAGzCmf,KAAcG,KAAehgB,EAASggB,GAAa/hB,CAAS,GAAG;AACjE,YAAMkiB,IAAaH,EAAY;AACpB,MAAAL,GAAA,IAAI/gB,GAAS,EAAE,eAAAshB,GAAe,YAAAC,GAAY,KAAK,MAAM,SAAS,KAAA,CAAM,GAE/E/e,EAASye,GAAY7Y,EAAe,GACzB6Y,EAAA,MAAM,SAAS,GAAGK,CAAa,MAC1CrZ,GAAOgZ,CAAU,GACjB,CAACxH,GAAS2H,CAAW,EAAE,QAAQ,CAAKlkB,MAAA;AAC9B,QAAAA,KAAGmE,EAAYnE,GAAG,iBAAiB;AAAA,MAAA,CACxC;AAAA,IACH;AAEA,IAAIkkB,KAAeA,KAAehgB,EAASggB,GAAa/hB,CAAS,IAC/D,WAAW,MAAM;AACfmD,MAAAA,EAAS4e,GAAa9hB,CAAS,GAC/BgC,EAAqB8f,GAAa,MAAM;AACtC,QAAAD,GAAejgB,CAAI;AAAA,MAAA,CACpB;AAAA,OACA,CAAC,KAEAkgB,KAAa5e,EAAS4e,GAAa9hB,CAAS,GAChD6hB,GAAejgB,CAAI,IAGjBmgB,KAAKlgB,EAAckgB,GAAKP,EAAc;AAAA,EAC5C;AACF,GAQMW,KAAe,CAACvgB,MAAwE;AACtF,QAAA,EAAE,KAAAggB,EAAQ,IAAAhgB;AAEZ,MAAA,CAACuF,EAAcya,CAA8B;AAAG,WAAO,EAAE,KAAK,MAAM,SAAS,KAAK;AAEhF,QAAAQ,IAAapa,GAAuBxF,GAAaof,CAAkB;AACzE,MAAIG,IAA0B;AAE9B,EAAIK,EAAW,WAAW,KAAK,CAACnX,GAAgB,KAAK,CAAArN,MAAKkE,EAASsgB,EAAW,CAAC,EAAE,eAA8BxkB,CAAC,CAAC,IAC/G,CAACmkB,CAAG,IAAIK,IACCA,EAAW,SAAS,MACvBL,IAAAK,EAAWA,EAAW,SAAS,CAAC;AAExC,QAAMjI,IAAUhT,EAAc4a,CAAkB,IAAIre,EAAiBqe,CAAkB,IAAI;AACpF,SAAA,EAAE,KAAAA,GAAK,SAAA5H;AAChB,GAQMkI,KAAoB,CAAC3hB,MAA8C;AAEnE,MAAA,CAACyG,EAAczG,CAAO;AAAU,WAAA;AAC9B,QAAA4hB,IAAWte,EAAQtD,GAAS,IAAIuK,GAAgB,KAAK,IAAI,CAAC,EAAE;AAC3D,SAAAqX,IAAW3hB,EAAc,IAAIsK,GAAgB,CAAC,CAAC,WAAWqX,CAAQ,IAAI;AAC/E,GASMC,KAAkB,CAACnnB,MAAa;AAC9B,QAAAwG,IAAOsf,GAAe9lB,EAAE,MAAqB;AAGnD,EAAIwG,MACFxG,EAAE,eAAe,GACjBwG,EAAK,KAAK;AAEd;AAKA,MAAqBwf,WAAY9gB,GAAc;AAAA;AAAA,EAW7C,YAAYC,GAA8B;AACxC,UAAMA,CAAM;AA6Gd;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAE,EAAA,+BAAwB,CAACwB,MAAkB;AAElC,OADQA,IAAME,IAAcC,GAC5B,KAAK,SAASG,GAAiBggB,EAAe;AAAA,IAAA;AA5G/C,UAAA,EAAE,SAAA7hB,EAAY,IAAA,MACdyZ,IAAUzW,EAAiBhD,CAAO;AAIxC,QAAIyZ,GAAS;AACL,YAAAyH,IAAM5d,EAAQtD,GAAS,MAAM,GAC7BoX,IAAY9T,EAAQmW,GAAS,cAAc;AAEjD,WAAK,MAAMyH,GACX,KAAK,UAAUzH,GACf,KAAK,aAAarC,GAGb,KAAA,WAAWuK,GAAkB3hB,CAAO;AAIzC,YAAM,EAAE,KAAAqhB,EAAA,IAAQI,GAAa,IAAI;AAC7B,UAAAP,KAAO,CAACG,GAAK;AACT,cAAAS,IAAW7hB,EAAcsgB,IAAaW,CAAG,GACzCa,IAAkBD,KAAY9e,EAAiB8e,CAAQ;AAG7D,QAAIC,MACFvf,EAASsf,GAAUhgB,CAAW,GAC9BU,EAASuf,GAAiBziB,CAAS,GACnCkD,EAASuf,GAAiBjgB,CAAW,GACxBW,EAAAzC,GAASgiB,IAAc,MAAM;AAAA,MAE9C;AAGA,WAAK,sBAAsB,EAAI;AAAA,IACjC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACF,WAAA1B;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO;AACL,UAAM,EAAE,SAAAtgB,GAAS,SAASohB,GAAa,KAAAF,GAAK,UAAAU,EAAa,IAAA;AAGrD,QAAA,EAAEV,KAAOpc,EAAM,IAAIoc,CAAG,MAAM,CAAC9f,EAASpB,GAAS8B,CAAW,GAAG;AAC/D,YAAM,EAAE,KAAAuf,GAAK,SAAA5H,EAAQ,IAAIgI,GAAa,IAAI;AAStC,UANAP,KAAgBH,GAAA,IAAIG,GAAK,EAAE,KAAAG,GAAK,SAAA5H,GAAS,eAAe,GAAG,YAAY,EAAA,CAAG,GAG9EoH,GAAa,gBAAgB7gB,GAGzByG,EAAc4a,CAAG,MACnBlgB,EAAckgB,GAAoBR,EAAY,GAE1C,CAACA,GAAa,mBAAkB;AAClCre,QAAAA,EAASxC,GAAS8B,CAAW,GAChBW,EAAAzC,GAASgiB,IAAc,MAAM;AAE1C,cAAMC,IAAiBxb,EAAc4a,CAAG,KAAKM,GAAkBN,CAAG;AAMlE,YALIY,KAAkB7gB,EAAS6gB,GAAgBngB,CAAW,KACxDT,EAAY4gB,GAAgBngB,CAAW,GAIrCof,GAAK;AACP,gBAAMgB,IAAY,MAAM;AACtB,YAAIb,MACFhgB,EAAYggB,GAAKvf,CAAW,GACfW,EAAA4e,GAAKW,IAAc,OAAO,IAErCJ,KAAY,CAACxgB,EAASwgB,GAAU9f,CAAW,KAAGU,EAASof,GAAU9f,CAAW;AAAA,UAAA;AAG9E,UAAA2X,MAAYrY,EAASqY,GAASpa,CAAS,KAAM+hB,KAAehgB,EAASggB,GAAa/hB,CAAS,KACvFyF,EAAA,IAAIoc,GAAKgB,GAAW,CAAC,IACZA;QACnB;AAEA,QAAIzI,MACFpY,EAAYoY,GAASna,CAAS,GAC1B8B,EAASqY,GAASpa,CAAS,IAC7BiC,EAAqBmY,GAAS,MAAM+H,GAAe,IAAI,CAAC,IAExDA,GAAe,IAAI;AAAA,MAGzB;AAAA,IAEJ;AAAA,EACF;AAAA;AAAA,EAaA,UAAU;AACR,SAAK,sBAAsB,GAC3B,MAAM,QAAQ;AAAA,EAChB;AACF;AAlIEzhB,EADmB2gB,IACZ,YAAWH,KAClBxgB,EAFmB2gB,IAEZ,QAAOD,KACd1gB,EAHmB2gB,IAGZ,eAAcF;AC3OvB,MAAM2B,IAAc,SCAdC,KAAiB,SCoCjBC,KAAgB,IAAIF,CAAW,IAC/BG,KAAuB,IAAI/iB,EAAa,KAAK4iB,CAAW,MACxDI,KAAsB,IAAIxgB,EAAY,KAAKogB,CAAW,MACtDK,KAAe,WAEfC,KAAY,QAEZC,KAAgB;AAAA,EACpB,WAAW;AAAA,EACX,UAAU;AAAA,EACV,OAAO;AACT,GAMMC,KAAmB,CAAC3iB,MAAyBW,EAAmBX,GAASoiB,EAAc,GAKvFQ,KAAoB,CAAC5iB,MAAyB,IAAI6iB,GAAM7iB,CAAO,GAI/D8iB,KAAiB/hB,EAA8B,WAAWohB,CAAW,EAAE,GACvEY,KAAkBhiB,EAA8B,YAAYohB,CAAW,EAAE,GACzEa,KAAiBjiB,EAA8B,WAAWohB,CAAW,EAAE,GACvEc,KAAmBliB,EAA8B,aAAaohB,CAAW,EAAE,GAS3Ee,KAAoB,CAAChiB,MAAgB;AACnC,QAAA,EAAE,SAAAlB,GAAS,SAAAyE,EAAY,IAAAvD;AAC7BG,EAAAA,EAAYrB,GAASwiB,EAAY,GAC3B1d,EAAA,MAAM9E,GAASwiB,EAAY,GAEjCrhB,EAAcnB,GAAS+iB,EAAe,GAElCte,EAAQ,YACJK,EAAA,IAAI9E,GAAS,MAAMkB,EAAK,QAAQuD,EAAQ,OAAO0d,CAAW;AAEpE,GAOMgB,KAAoB,CAACjiB,MAAgB;AACnC,QAAA,EAAE,SAAAlB,EAAY,IAAAkB;AACpBG,EAAAA,EAAYrB,GAASwiB,EAAY,GACjCnhB,EAAYrB,GAASV,CAAS,GAC9BkD,EAASxC,GAASyiB,EAAS,GACrB3d,EAAA,MAAM9E,GAASmiB,CAAW,GAChChhB,EAAcnB,GAASijB,EAAgB;AACzC,GAOMG,KAAY,CAACliB,MAAgB;AAC3B,QAAA,EAAE,SAAAlB,GAAS,SAAAyE,EAAY,IAAAvD;AAC7BsB,EAAAA,EAASxC,GAASwiB,EAAY,GAE1B/d,EAAQ,aACVwD,GAAOjI,CAAO,GACdsB,EAAqBtB,GAAS,MAAMmjB,GAAkBjiB,CAAI,CAAC,KAE3DiiB,GAAkBjiB,CAAI;AAE1B,GAOMmiB,KAAY,CAACniB,MAAgB;AAC3B,QAAA,EAAE,SAAAlB,GAAS,SAAAyE,EAAY,IAAAvD;AACvB4D,EAAAA,EAAA;AAAA,IACJ9E;AAAA,IACA,MAAM;AACJqB,MAAAA,EAAYrB,GAASyiB,EAAS,GAC9Bxa,GAAOjI,CAAO,GACdwC,EAASxC,GAASV,CAAS,GAC3BkD,EAASxC,GAASwiB,EAAY,GAE1B/d,EAAQ,YACVnD,EAAqBtB,GAAS,MAAMkjB,GAAkBhiB,CAAI,CAAC,IAE3DgiB,GAAkBhiB,CAAI;AAAA,IAE1B;AAAA,IACA;AAAA,IACAshB;AAAA,EAAA;AAEJ,GASMc,KAAuB,CAACpiB,MAAgB;AACtC4D,EAAAA,EAAA,MAAM5D,EAAK,SAASihB,CAAW,GACrCjhB,EAAK,sBAAsB;AAC7B,GAOMqiB,KAAoB,CAAC7oB,MAAa;AAChC,QAAA,EAAE,QAAAmF,EAAW,IAAAnF,GAEbgP,IAAU7J,KAAUyD,EAAQzD,GAAuB0iB,EAAmB,GACtEviB,IAAU0J,KAAW1G,EAAiB0G,CAAO,GAC7CxI,IAAOlB,KAAW2iB,GAAiB3iB,CAAO;AAGhD,EAAIkB,MAEEwI,KAAWA,EAAQ,YAAY,OAAKhP,EAAE,eAAe,GACzDwG,EAAK,gBAAgBwI,GACrBxI,EAAK,KAAK;AAEd,GAQMsiB,KAA0B,CAAC9oB,MAAkB;AACjD,QAAMsF,IAAUtF,EAAE,QACZwG,IAAOyhB,GAAiB3iB,CAAO,GAC/B,EAAE,MAAAkO,GAAM,eAAAsF,EAAkB,IAAA9Y;AAGhC,EAAIwG,KAAQlB,MAAYwT,KAAiB,CAACxT,EAAQ,SAASwT,CAAqB,MAC1E,CAAC1M,IAAiBqW,EAAY,EAAE,SAASjP,CAAI,IACzCpJ,EAAA,MAAM9E,GAASmiB,CAAW,IAE1Brd,EAAA,IAAI9E,GAAS,MAAMkB,EAAK,QAAQA,EAAK,QAAQ,OAAOihB,CAAW;AAG3E;AAKA,MAAqBU,WAAcjjB,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAa/C,YAAYC,GAA8BC,GAAgC;AACxE,UAAMD,GAAQC,CAAM;AAwCtB;AAAA;AAAA;AAAA,IAAAC,EAAA,cAAO,MAAM;AACL,YAAA,EAAE,SAAAC,GAAS,SAAAyjB,EAAY,IAAA;AAGzB,MAAAzjB,KAAW,CAACyjB,MACdtiB,EAAcnB,GAAS8iB,EAAc,GAChCA,GAAe,oBAClBO,GAAU,IAAI;AAAA,IAElB;AAIF;AAAA,IAAAtjB,EAAA,cAAO,MAAM;AACL,YAAA,EAAE,SAAAC,GAAS,SAAAyjB,EAAY,IAAA;AAG7B,MAAIzjB,KAAWyjB,MACbtiB,EAAcnB,GAASgjB,EAAc,GAChCA,GAAe,oBAClBI,GAAU,IAAI;AAAA,IAElB;AAQF;AAAA;AAAA;AAAA;AAAA;AAAA,IAAArjB,EAAA,+BAAwB,CAACwB,MAAkB;AACnC,YAAAC,IAASD,IAAME,IAAcC,GAC7B,EAAE,SAAA1B,GAAS,UAAAmJ,GAAU,SAAAxH,GAAS,SAAA8C,GAAS,MAAAif,EAAS,IAAA;AAGtD,MAAI/hB,KACKH,EAAAG,GAASE,GAAiB6hB,CAAI,GAInCjf,EAAQ,YACV,CAAC0Y,IAAcC,IAAetW,IAAiBC,EAAe,EAAE;AAAA,QAAQ,CACtErM,MAAA8G,EAAOxB,GAAStF,GAAG8oB,EAAuB;AAAA,MAAA,GAI1Cra,EAAS,UACXA,EAAS,QAAQ,CAAOG,MAAA9H,EAAO8H,GAAKzH,GAAiB0hB,EAAiB,CAAC;AAAA,IACzE;AAvFM,UAAA,EAAE,SAAAvjB,GAAS,SAAAyE,EAAY,IAAA;AAG7B,IAAIA,EAAQ,aAAa,CAACrD,EAASpB,GAASX,CAAS,IAAGmD,EAASxC,GAASX,CAAS,IAC1E,CAACoF,EAAQ,aAAarD,EAASpB,GAASX,CAAS,KAAGgC,EAAYrB,GAASX,CAAS,GAGtF,KAAA,UAAUY,EAAcqiB,IAAsBtiB,CAAO,GAGrD,KAAA,WAAW,CAAC,GAAGsF,GAAiBid,IAAqBpf,EAAYnD,CAAO,CAAC,CAAC,EAAE;AAAA,MAC/E,CAAAsJ,MAAOtG,EAAiBsG,CAAG,MAAMtJ;AAAA,IAAA,GAInC,KAAK,sBAAsB,EAAI;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,OAAO;AACF,WAAAoiB;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACN,WAAAM;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,UAAU;AACL,WAAAthB,EAAS,KAAK,SAAS9B,CAAS;AAAA,EACzC;AAAA;AAAA,EAyDA,UAAU;AACF,UAAA,EAAE,SAAAU,GAAS,SAAAyjB,EAAY,IAAA;AAG7B,IAAIA,KACFpiB,EAAYrB,GAASV,CAAS,GAGhCgkB,GAAqB,IAAI,GAEzB,MAAM,QAAQ;AAAA,EAChB;AACF;AArHEvjB,EADmB8iB,IACZ,YAAWR,KAClBtiB,EAFmB8iB,IAEZ,QAAOD,KACd7iB,EAHmB8iB,IAGZ,eAAcF;AC3LvB,MAAMgB,yBAAqB;AAgB3B,CAAC9iB,IAAOwB,IAAQ0B,IAAU6E,IAAU+B,IAAU2H,IAAO+C,IAAW8I,IAASO,IAAWgC,IAAKmC,IAAO/G,EAAO,EAAE;AAAA,EAAQ,OAC/G6H,GAAe,IAAIzmB,EAAE,UAAU,MAAMA,CAAC;AACxC;AAQA,MAAM0mB,KAAuB,CAC3B/O,GACAgP,MACG;AACH,GAAC,GAAGA,CAAU,EAAE,QAAQ,CAAKvpB,MAAAua,EAASva,CAAC,CAAC;AAC1C,GAQMwpB,KAAyB,CAAIC,GAAmBC,MAAwB;AACtE,QAAAC,IAAW7jB,GAAK,UAAU2jB,CAAS;AAEzC,EAAIE,KACD,CAAA,GAAGA,CAAQ,EAAE,QAAQ,CAAC,CAACjkB,GAASkkB,CAAQ,MAAM;AACzC,IAAAF,EAAQ,SAAShkB,CAAO,KAAIkkB,EAAyC,QAAQ;AAAA,EAAA,CAClF;AAEL,GAOaC,KAAe,CAACH,MAAyB;AACpD,QAAMI,IAASJ,KAAWA,EAAQ,WAAWA,IAAU,UACjDK,IAAiB,CAAC,GAAGpF,GAAqB,KAAKmF,CAAM,CAAC;AAE5D,EAAAT,GAAe,QAAQ,CAAMW,MAAA;AACrB,UAAA,EAAE,MAAAC,GAAM,UAAAC,EAAa,IAAAF;AAC3B,IAAAV;AAAA,MACEW;AAAA,MACAF,EAAe,OAAO,CAAA3E,MAAQjY,GAAQiY,GAAM8E,CAAQ,CAAC;AAAA,IAAA;AAAA,EACvD,CACD;AACH,GAOaC,KAAgB,CAACT,MAAyB;AACrD,QAAMI,IAASJ,KAAWA,EAAQ,WAAWA,IAAU;AAEvD,EAAAL,GAAe,QAAQ,CAAQe,MAAA;AACN,IAAAZ,GAAAY,EAAK,UAAU,MAAMN,CAAM;AAAA,EAAA,CACnD;AACH;AAGI,SAAS,OAAmBD,OAElB1iB,EAAA,UAAU,oBAAoB,MAAM0iB,MAAgB,EAAE,MAAM,IAAM;","x_google_ignoreList":[0,1]}